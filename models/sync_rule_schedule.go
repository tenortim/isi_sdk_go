// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// SyncRuleSchedule sync rule schedule
// swagger:model SyncRuleSchedule
type SyncRuleSchedule struct {

	// Start time (inclusive) for this schedule, during its specified days.  Format is "hh:mm" (24h format hour, and minute).  A null value indicates the beginning of the day ("00:00").
	Begin string `json:"begin,omitempty"`

	// End time (inclusive) for this schedule, during its specified days.  Format is "hh:mm" (three-letter weekday name abbreviation, 24h format hour, and minute).  A null value indicates the end of the day ("23:59").
	End string `json:"end,omitempty"`

	// If true, this rule is in effect on Friday.  If false, or unspecified, it is not.
	Friday bool `json:"friday,omitempty"`

	// If true, this rule is in effect on Monday.  If false, or unspecified, it is not.
	Monday bool `json:"monday,omitempty"`

	// If true, this rule is in effect on Saturday.  If false, or unspecified, it is not.
	Saturday bool `json:"saturday,omitempty"`

	// If true, this rule is in effect on Sunday.  If false, or unspecified, it is not.
	Sunday bool `json:"sunday,omitempty"`

	// If true, this rule is in effect on Thursday.  If false, or unspecified, it is not.
	Thursday bool `json:"thursday,omitempty"`

	// If true, this rule is in effect on Tuesday.  If false, or unspecified, it is not.
	Tuesday bool `json:"tuesday,omitempty"`

	// If true, this rule is in effect on Wednesday.  If false, or unspecified, it is not.
	Wednesday bool `json:"wednesday,omitempty"`
}

// Validate validates this sync rule schedule
func (m *SyncRuleSchedule) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SyncRuleSchedule) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SyncRuleSchedule) UnmarshalBinary(b []byte) error {
	var res SyncRuleSchedule
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
