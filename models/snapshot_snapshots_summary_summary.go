// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SnapshotSnapshotsSummarySummary snapshot snapshots summary summary
// swagger:model SnapshotSnapshotsSummarySummary
type SnapshotSnapshotsSummarySummary struct {

	// Total number of active snapshots.
	// Required: true
	ActiveCount *int64 `json:"active_count"`

	// Sum of sizes of active snapshots.
	// Required: true
	ActiveSize *int64 `json:"active_size"`

	// Total number of snapshot aliases.
	// Required: true
	AliasesCount *int64 `json:"aliases_count"`

	// Total number of snapshots.
	// Required: true
	Count *int64 `json:"count"`

	// Total number of delete-pending snapshots.
	// Required: true
	DeletingCount *int64 `json:"deleting_count"`

	// Sum of sizes of delete-pending snapshots.
	// Required: true
	DeletingSize *int64 `json:"deleting_size"`

	// Sum of shadow bytes of all snapshots.
	// Required: true
	ShadowBytes *int64 `json:"shadow_bytes"`

	// Sum of sizes in bytes of all snapshots.
	// Required: true
	Size *int64 `json:"size"`
}

// Validate validates this snapshot snapshots summary summary
func (m *SnapshotSnapshotsSummarySummary) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateActiveCount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateActiveSize(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAliasesCount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDeletingCount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDeletingSize(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateShadowBytes(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSize(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SnapshotSnapshotsSummarySummary) validateActiveCount(formats strfmt.Registry) error {

	if err := validate.Required("active_count", "body", m.ActiveCount); err != nil {
		return err
	}

	return nil
}

func (m *SnapshotSnapshotsSummarySummary) validateActiveSize(formats strfmt.Registry) error {

	if err := validate.Required("active_size", "body", m.ActiveSize); err != nil {
		return err
	}

	return nil
}

func (m *SnapshotSnapshotsSummarySummary) validateAliasesCount(formats strfmt.Registry) error {

	if err := validate.Required("aliases_count", "body", m.AliasesCount); err != nil {
		return err
	}

	return nil
}

func (m *SnapshotSnapshotsSummarySummary) validateCount(formats strfmt.Registry) error {

	if err := validate.Required("count", "body", m.Count); err != nil {
		return err
	}

	return nil
}

func (m *SnapshotSnapshotsSummarySummary) validateDeletingCount(formats strfmt.Registry) error {

	if err := validate.Required("deleting_count", "body", m.DeletingCount); err != nil {
		return err
	}

	return nil
}

func (m *SnapshotSnapshotsSummarySummary) validateDeletingSize(formats strfmt.Registry) error {

	if err := validate.Required("deleting_size", "body", m.DeletingSize); err != nil {
		return err
	}

	return nil
}

func (m *SnapshotSnapshotsSummarySummary) validateShadowBytes(formats strfmt.Registry) error {

	if err := validate.Required("shadow_bytes", "body", m.ShadowBytes); err != nil {
		return err
	}

	return nil
}

func (m *SnapshotSnapshotsSummarySummary) validateSize(formats strfmt.Registry) error {

	if err := validate.Required("size", "body", m.Size); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SnapshotSnapshotsSummarySummary) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SnapshotSnapshotsSummarySummary) UnmarshalBinary(b []byte) error {
	var res SnapshotSnapshotsSummarySummary
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
