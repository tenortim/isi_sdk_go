// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// NodePartitionsNodePartitionStatfs node partitions node partition statfs
// swagger:model NodePartitionsNodePartitionStatfs
type NodePartitionsNodePartitionStatfs struct {

	// Free blocks available to non-superuser on this partition.
	FBavail int64 `json:"f_bavail,omitempty"`

	// Free blocks on this partition.
	FBfree int64 `json:"f_bfree,omitempty"`

	// Total data blocks on this partition.
	FBlocks int64 `json:"f_blocks,omitempty"`

	// Filesystem fragment size; block size in OneFS.
	FBsize int64 `json:"f_bsize,omitempty"`

	// Free file nodes avail to non-superuser.
	FFfree int64 `json:"f_ffree,omitempty"`

	// Total file nodes in filesystem.
	FFiles int64 `json:"f_files,omitempty"`

	// Mount exported flags.
	FFlags int64 `json:"f_flags,omitempty"`

	// File system type name.
	FFstypename string `json:"f_fstypename,omitempty"`

	// Optimal transfer block size.
	FIosize int64 `json:"f_iosize,omitempty"`

	// Names of devices this partition is mounted from.
	FMntfromname string `json:"f_mntfromname,omitempty"`

	// Directory this partition is mounted to.
	FMntonname string `json:"f_mntonname,omitempty"`

	// Maximum filename length.
	FNamemax int64 `json:"f_namemax,omitempty"`

	// UID of user that mounted the filesystem.
	FOwner int64 `json:"f_owner,omitempty"`

	// Type of filesystem.
	FType int64 `json:"f_type,omitempty"`

	// statfs() structure version number.
	FVersion int64 `json:"f_version,omitempty"`
}

// Validate validates this node partitions node partition statfs
func (m *NodePartitionsNodePartitionStatfs) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *NodePartitionsNodePartitionStatfs) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NodePartitionsNodePartitionStatfs) UnmarshalBinary(b []byte) error {
	var res NodePartitionsNodePartitionStatfs
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
