// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// NodeStateServicelightExtended Node service light state.
// swagger:model NodeStateServicelightExtended
type NodeStateServicelightExtended struct {

	// The node service light state (True = on).
	Enabled bool `json:"enabled,omitempty"`

	// This node has a service light.
	Present bool `json:"present,omitempty"`

	// This node supports a service light.
	Supported bool `json:"supported,omitempty"`

	// The node service light state is valid (False = Error).
	Valid bool `json:"valid,omitempty"`
}

// Validate validates this node state servicelight extended
func (m *NodeStateServicelightExtended) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *NodeStateServicelightExtended) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NodeStateServicelightExtended) UnmarshalBinary(b []byte) error {
	var res NodeStateServicelightExtended
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
