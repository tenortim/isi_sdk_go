// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MappingIdentitiesTarget mapping identities target
// swagger:model MappingIdentitiesTarget
type MappingIdentitiesTarget struct {

	// Identity is preferred on-disk.
	OnDisk bool `json:"on_disk,omitempty"`

	// Specifies properties for a persona, which consists of either a 'type' and a 'name' or an 'ID'.
	// Required: true
	Target *GroupMember `json:"target"`

	// Origin of identity mapping.
	// Enum: [auto external manual]
	Type string `json:"type,omitempty"`
}

// Validate validates this mapping identities target
func (m *MappingIdentitiesTarget) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTarget(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MappingIdentitiesTarget) validateTarget(formats strfmt.Registry) error {

	if err := validate.Required("target", "body", m.Target); err != nil {
		return err
	}

	if m.Target != nil {
		if err := m.Target.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("target")
			}
			return err
		}
	}

	return nil
}

var mappingIdentitiesTargetTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["auto","external","manual"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		mappingIdentitiesTargetTypeTypePropEnum = append(mappingIdentitiesTargetTypeTypePropEnum, v)
	}
}

const (

	// MappingIdentitiesTargetTypeAuto captures enum value "auto"
	MappingIdentitiesTargetTypeAuto string = "auto"

	// MappingIdentitiesTargetTypeExternal captures enum value "external"
	MappingIdentitiesTargetTypeExternal string = "external"

	// MappingIdentitiesTargetTypeManual captures enum value "manual"
	MappingIdentitiesTargetTypeManual string = "manual"
)

// prop value enum
func (m *MappingIdentitiesTarget) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, mappingIdentitiesTargetTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *MappingIdentitiesTarget) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MappingIdentitiesTarget) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MappingIdentitiesTarget) UnmarshalBinary(b []byte) error {
	var res MappingIdentitiesTarget
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
