// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NetworkGroupnetCreateParams network groupnet create params
// swagger:model NetworkGroupnetCreateParams
type NetworkGroupnetCreateParams struct {
	NetworkGroupnet

	// The name of the groupnet.
	// Required: true
	// Max Length: 32
	Name *string `json:"name"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *NetworkGroupnetCreateParams) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 NetworkGroupnet
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.NetworkGroupnet = aO0

	// AO1
	var dataAO1 struct {
		Name *string `json:"name"`
	}
	if err := swag.ReadJSON(raw, &dataAO1); err != nil {
		return err
	}

	m.Name = dataAO1.Name

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m NetworkGroupnetCreateParams) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	aO0, err := swag.WriteJSON(m.NetworkGroupnet)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	var dataAO1 struct {
		Name *string `json:"name"`
	}

	dataAO1.Name = m.Name

	jsonDataAO1, errAO1 := swag.WriteJSON(dataAO1)
	if errAO1 != nil {
		return nil, errAO1
	}
	_parts = append(_parts, jsonDataAO1)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this network groupnet create params
func (m *NetworkGroupnetCreateParams) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with NetworkGroupnet
	if err := m.NetworkGroupnet.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *NetworkGroupnetCreateParams) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	if err := validate.MaxLength("name", "body", string(*m.Name), 32); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *NetworkGroupnetCreateParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NetworkGroupnetCreateParams) UnmarshalBinary(b []byte) error {
	var res NetworkGroupnetCreateParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
