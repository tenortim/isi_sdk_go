// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NdmpSettingsGlobalGlobal ndmp settings global global
// swagger:model NdmpSettingsGlobalGlobal
type NdmpSettingsGlobalGlobal struct {

	// Maximum number of BRE contexts.
	BreMaxNumContexts int64 `json:"bre_max_num_contexts,omitempty"`

	// A unique identifier for the dma vendor.
	// Enum: [generic atempo bakbone commvault emc symantec tivoli symantec-netbackup symantec-backupexec]
	Dma string `json:"dma,omitempty"`

	// Multi-Stream Backup context retention duration.
	MsbContextRetentionDuration int64 `json:"msb_context_retention_duration,omitempty"`

	// Multi-Stream Restore context retention duration.
	MsrContextRetentionDuration int64 `json:"msr_context_retention_duration,omitempty"`

	// The port to listen on.
	Port int64 `json:"port,omitempty"`

	// Property to enable/diable the NDMP service.
	Service bool `json:"service,omitempty"`
}

// Validate validates this ndmp settings global global
func (m *NdmpSettingsGlobalGlobal) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDma(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var ndmpSettingsGlobalGlobalTypeDmaPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["generic","atempo","bakbone","commvault","emc","symantec","tivoli","symantec-netbackup","symantec-backupexec"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		ndmpSettingsGlobalGlobalTypeDmaPropEnum = append(ndmpSettingsGlobalGlobalTypeDmaPropEnum, v)
	}
}

const (

	// NdmpSettingsGlobalGlobalDmaGeneric captures enum value "generic"
	NdmpSettingsGlobalGlobalDmaGeneric string = "generic"

	// NdmpSettingsGlobalGlobalDmaAtempo captures enum value "atempo"
	NdmpSettingsGlobalGlobalDmaAtempo string = "atempo"

	// NdmpSettingsGlobalGlobalDmaBakbone captures enum value "bakbone"
	NdmpSettingsGlobalGlobalDmaBakbone string = "bakbone"

	// NdmpSettingsGlobalGlobalDmaCommvault captures enum value "commvault"
	NdmpSettingsGlobalGlobalDmaCommvault string = "commvault"

	// NdmpSettingsGlobalGlobalDmaEmc captures enum value "emc"
	NdmpSettingsGlobalGlobalDmaEmc string = "emc"

	// NdmpSettingsGlobalGlobalDmaSymantec captures enum value "symantec"
	NdmpSettingsGlobalGlobalDmaSymantec string = "symantec"

	// NdmpSettingsGlobalGlobalDmaTivoli captures enum value "tivoli"
	NdmpSettingsGlobalGlobalDmaTivoli string = "tivoli"

	// NdmpSettingsGlobalGlobalDmaSymantecNetbackup captures enum value "symantec-netbackup"
	NdmpSettingsGlobalGlobalDmaSymantecNetbackup string = "symantec-netbackup"

	// NdmpSettingsGlobalGlobalDmaSymantecBackupexec captures enum value "symantec-backupexec"
	NdmpSettingsGlobalGlobalDmaSymantecBackupexec string = "symantec-backupexec"
)

// prop value enum
func (m *NdmpSettingsGlobalGlobal) validateDmaEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, ndmpSettingsGlobalGlobalTypeDmaPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *NdmpSettingsGlobalGlobal) validateDma(formats strfmt.Registry) error {

	if swag.IsZero(m.Dma) { // not required
		return nil
	}

	// value enum
	if err := m.validateDmaEnum("dma", "body", m.Dma); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *NdmpSettingsGlobalGlobal) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NdmpSettingsGlobalGlobal) UnmarshalBinary(b []byte) error {
	var res NdmpSettingsGlobalGlobal
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
