// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// QuotaNotificationCreateParams quota notification create params
// swagger:model QuotaNotificationCreateParams
type QuotaNotificationCreateParams struct {
	QuotaNotification

	// The condition detected.
	// Required: true
	// Enum: [exceeded denied violated expired]
	Condition *string `json:"condition"`

	// The quota threshold detected.
	// Required: true
	// Enum: [hard soft advisory]
	Threshold *string `json:"threshold"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *QuotaNotificationCreateParams) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 QuotaNotification
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.QuotaNotification = aO0

	// AO1
	var dataAO1 struct {
		Condition *string `json:"condition"`

		Threshold *string `json:"threshold"`
	}
	if err := swag.ReadJSON(raw, &dataAO1); err != nil {
		return err
	}

	m.Condition = dataAO1.Condition

	m.Threshold = dataAO1.Threshold

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m QuotaNotificationCreateParams) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	aO0, err := swag.WriteJSON(m.QuotaNotification)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	var dataAO1 struct {
		Condition *string `json:"condition"`

		Threshold *string `json:"threshold"`
	}

	dataAO1.Condition = m.Condition

	dataAO1.Threshold = m.Threshold

	jsonDataAO1, errAO1 := swag.WriteJSON(dataAO1)
	if errAO1 != nil {
		return nil, errAO1
	}
	_parts = append(_parts, jsonDataAO1)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this quota notification create params
func (m *QuotaNotificationCreateParams) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with QuotaNotification
	if err := m.QuotaNotification.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCondition(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateThreshold(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var quotaNotificationCreateParamsTypeConditionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["exceeded","denied","violated","expired"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		quotaNotificationCreateParamsTypeConditionPropEnum = append(quotaNotificationCreateParamsTypeConditionPropEnum, v)
	}
}

// property enum
func (m *QuotaNotificationCreateParams) validateConditionEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, quotaNotificationCreateParamsTypeConditionPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *QuotaNotificationCreateParams) validateCondition(formats strfmt.Registry) error {

	if err := validate.Required("condition", "body", m.Condition); err != nil {
		return err
	}

	// value enum
	if err := m.validateConditionEnum("condition", "body", *m.Condition); err != nil {
		return err
	}

	return nil
}

var quotaNotificationCreateParamsTypeThresholdPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["hard","soft","advisory"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		quotaNotificationCreateParamsTypeThresholdPropEnum = append(quotaNotificationCreateParamsTypeThresholdPropEnum, v)
	}
}

// property enum
func (m *QuotaNotificationCreateParams) validateThresholdEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, quotaNotificationCreateParamsTypeThresholdPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *QuotaNotificationCreateParams) validateThreshold(formats strfmt.Registry) error {

	if err := validate.Required("threshold", "body", m.Threshold); err != nil {
		return err
	}

	// value enum
	if err := m.validateThresholdEnum("threshold", "body", *m.Threshold); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *QuotaNotificationCreateParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *QuotaNotificationCreateParams) UnmarshalBinary(b []byte) error {
	var res QuotaNotificationCreateParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
