// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// FilepoolPolicyActionExtended filepool policy action extended
// swagger:model FilepoolPolicyActionExtended
type FilepoolPolicyActionExtended struct {

	// Varies according to action_type
	ActionParam string `json:"action_param,omitempty"`

	// action type
	// Required: true
	// Enum: [set_requested_protection set_data_access_pattern enable_coalescer apply_data_storage_policy apply_snapshot_storage_policy set_cloudpool_policy]
	ActionType *string `json:"action_type"`
}

// Validate validates this filepool policy action extended
func (m *FilepoolPolicyActionExtended) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateActionType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var filepoolPolicyActionExtendedTypeActionTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["set_requested_protection","set_data_access_pattern","enable_coalescer","apply_data_storage_policy","apply_snapshot_storage_policy","set_cloudpool_policy"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		filepoolPolicyActionExtendedTypeActionTypePropEnum = append(filepoolPolicyActionExtendedTypeActionTypePropEnum, v)
	}
}

const (

	// FilepoolPolicyActionExtendedActionTypeSetRequestedProtection captures enum value "set_requested_protection"
	FilepoolPolicyActionExtendedActionTypeSetRequestedProtection string = "set_requested_protection"

	// FilepoolPolicyActionExtendedActionTypeSetDataAccessPattern captures enum value "set_data_access_pattern"
	FilepoolPolicyActionExtendedActionTypeSetDataAccessPattern string = "set_data_access_pattern"

	// FilepoolPolicyActionExtendedActionTypeEnableCoalescer captures enum value "enable_coalescer"
	FilepoolPolicyActionExtendedActionTypeEnableCoalescer string = "enable_coalescer"

	// FilepoolPolicyActionExtendedActionTypeApplyDataStoragePolicy captures enum value "apply_data_storage_policy"
	FilepoolPolicyActionExtendedActionTypeApplyDataStoragePolicy string = "apply_data_storage_policy"

	// FilepoolPolicyActionExtendedActionTypeApplySnapshotStoragePolicy captures enum value "apply_snapshot_storage_policy"
	FilepoolPolicyActionExtendedActionTypeApplySnapshotStoragePolicy string = "apply_snapshot_storage_policy"

	// FilepoolPolicyActionExtendedActionTypeSetCloudpoolPolicy captures enum value "set_cloudpool_policy"
	FilepoolPolicyActionExtendedActionTypeSetCloudpoolPolicy string = "set_cloudpool_policy"
)

// prop value enum
func (m *FilepoolPolicyActionExtended) validateActionTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, filepoolPolicyActionExtendedTypeActionTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *FilepoolPolicyActionExtended) validateActionType(formats strfmt.Registry) error {

	if err := validate.Required("action_type", "body", m.ActionType); err != nil {
		return err
	}

	// value enum
	if err := m.validateActionTypeEnum("action_type", "body", *m.ActionType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *FilepoolPolicyActionExtended) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FilepoolPolicyActionExtended) UnmarshalBinary(b []byte) error {
	var res FilepoolPolicyActionExtended
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
