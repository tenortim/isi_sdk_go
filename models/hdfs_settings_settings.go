// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// HdfsSettingsSettings hdfs settings settings
// swagger:model HdfsSettingsSettings
type HdfsSettingsSettings struct {

	// NameNode of Ambari server
	AmbariNamenode string `json:"ambari_namenode,omitempty"`

	// Ambari server
	AmbariServer string `json:"ambari_server,omitempty"`

	// Type of authentication for HDFS protocol.
	// Enum: [all simple_only kerberos_only]
	AuthenticationMode string `json:"authentication_mode,omitempty"`

	// Block size (size=2**value) reported by HDFS server.
	DefaultBlockSize int64 `json:"default_block_size,omitempty"`

	// Checksum type reported by HDFS server.
	// Enum: [none crc32 crc32c]
	DefaultChecksumType string `json:"default_checksum_type,omitempty"`

	// ODP stack repository version number
	OdpVersion string `json:"odp_version,omitempty"`

	// HDFS root directory
	RootDirectory string `json:"root_directory,omitempty"`

	// Enable or disable the HDFS service.
	Service bool `json:"service,omitempty"`

	// Enable or disable WebHDFS
	WebhdfsEnabled bool `json:"webhdfs_enabled,omitempty"`
}

// Validate validates this hdfs settings settings
func (m *HdfsSettingsSettings) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAuthenticationMode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDefaultChecksumType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var hdfsSettingsSettingsTypeAuthenticationModePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["all","simple_only","kerberos_only"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		hdfsSettingsSettingsTypeAuthenticationModePropEnum = append(hdfsSettingsSettingsTypeAuthenticationModePropEnum, v)
	}
}

const (

	// HdfsSettingsSettingsAuthenticationModeAll captures enum value "all"
	HdfsSettingsSettingsAuthenticationModeAll string = "all"

	// HdfsSettingsSettingsAuthenticationModeSimpleOnly captures enum value "simple_only"
	HdfsSettingsSettingsAuthenticationModeSimpleOnly string = "simple_only"

	// HdfsSettingsSettingsAuthenticationModeKerberosOnly captures enum value "kerberos_only"
	HdfsSettingsSettingsAuthenticationModeKerberosOnly string = "kerberos_only"
)

// prop value enum
func (m *HdfsSettingsSettings) validateAuthenticationModeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, hdfsSettingsSettingsTypeAuthenticationModePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *HdfsSettingsSettings) validateAuthenticationMode(formats strfmt.Registry) error {

	if swag.IsZero(m.AuthenticationMode) { // not required
		return nil
	}

	// value enum
	if err := m.validateAuthenticationModeEnum("authentication_mode", "body", m.AuthenticationMode); err != nil {
		return err
	}

	return nil
}

var hdfsSettingsSettingsTypeDefaultChecksumTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["none","crc32","crc32c"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		hdfsSettingsSettingsTypeDefaultChecksumTypePropEnum = append(hdfsSettingsSettingsTypeDefaultChecksumTypePropEnum, v)
	}
}

const (

	// HdfsSettingsSettingsDefaultChecksumTypeNone captures enum value "none"
	HdfsSettingsSettingsDefaultChecksumTypeNone string = "none"

	// HdfsSettingsSettingsDefaultChecksumTypeCrc32 captures enum value "crc32"
	HdfsSettingsSettingsDefaultChecksumTypeCrc32 string = "crc32"

	// HdfsSettingsSettingsDefaultChecksumTypeCrc32c captures enum value "crc32c"
	HdfsSettingsSettingsDefaultChecksumTypeCrc32c string = "crc32c"
)

// prop value enum
func (m *HdfsSettingsSettings) validateDefaultChecksumTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, hdfsSettingsSettingsTypeDefaultChecksumTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *HdfsSettingsSettings) validateDefaultChecksumType(formats strfmt.Registry) error {

	if swag.IsZero(m.DefaultChecksumType) { // not required
		return nil
	}

	// value enum
	if err := m.validateDefaultChecksumTypeEnum("default_checksum_type", "body", m.DefaultChecksumType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *HdfsSettingsSettings) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HdfsSettingsSettings) UnmarshalBinary(b []byte) error {
	var res HdfsSettingsSettings
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
