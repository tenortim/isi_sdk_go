// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// DrivesDriveFirmwareNodeDrive drives drive firmware node drive
// swagger:model DrivesDriveFirmwareNodeDrive
type DrivesDriveFirmwareNodeDrive struct {

	// Numerical representation of this drive's bay.
	Baynum int64 `json:"baynum,omitempty"`

	// This drive's current firmware revision
	CurrentFirmware string `json:"current_firmware,omitempty"`

	// This drive's desired firmware revision.
	DesiredFirmware string `json:"desired_firmware,omitempty"`

	// This drive's device name.
	Devname string `json:"devname,omitempty"`

	// This drive's logical drive number in IFS.
	Lnum int64 `json:"lnum,omitempty"`

	// String representation of this drive's physical location.
	Locnstr string `json:"locnstr,omitempty"`

	// This drive's manufacturer and model.
	Model string `json:"model,omitempty"`
}

// Validate validates this drives drive firmware node drive
func (m *DrivesDriveFirmwareNodeDrive) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DrivesDriveFirmwareNodeDrive) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DrivesDriveFirmwareNodeDrive) UnmarshalBinary(b []byte) error {
	var res DrivesDriveFirmwareNodeDrive
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
