// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// JobStatisticsJobNodeIo job statistics job node io
// swagger:model JobStatisticsJobNodeIo
type JobStatisticsJobNodeIo struct {

	// read
	// Required: true
	Read *JobStatisticsJobNodeIoRead `json:"read"`

	// write
	// Required: true
	Write *JobStatisticsJobNodeIoWrite `json:"write"`
}

// Validate validates this job statistics job node io
func (m *JobStatisticsJobNodeIo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRead(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateWrite(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *JobStatisticsJobNodeIo) validateRead(formats strfmt.Registry) error {

	if err := validate.Required("read", "body", m.Read); err != nil {
		return err
	}

	if m.Read != nil {
		if err := m.Read.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("read")
			}
			return err
		}
	}

	return nil
}

func (m *JobStatisticsJobNodeIo) validateWrite(formats strfmt.Registry) error {

	if err := validate.Required("write", "body", m.Write); err != nil {
		return err
	}

	if m.Write != nil {
		if err := m.Write.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("write")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *JobStatisticsJobNodeIo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *JobStatisticsJobNodeIo) UnmarshalBinary(b []byte) error {
	var res JobStatisticsJobNodeIo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
