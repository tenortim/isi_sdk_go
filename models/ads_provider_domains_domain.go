// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// AdsProviderDomainsDomain ads provider domains domain
// swagger:model AdsProviderDomainsDomain
type AdsProviderDomainsDomain struct {

	// The Nodes Site.
	ClientSite string `json:"client_site,omitempty"`

	// Specifies the address for the domain controller.
	DcAddress string `json:"dc_address,omitempty"`

	// Specifies the name for the domain controller.
	DcName string `json:"dc_name,omitempty"`

	// Specifies the site for the domain controller.
	DcSite string `json:"dc_site,omitempty"`

	// Specifies the name of the domain.
	Domain string `json:"domain,omitempty"`

	// Specifies the globally unique ID for the domain.
	GUID string `json:"guid,omitempty"`

	// Specifies a unique identifier for every domain returned.
	ID string `json:"id,omitempty"`

	// Specifies the NetBIOS name for the domain.
	NetbiosName string `json:"netbios_name,omitempty"`

	// Specifies the security ID for the domain.
	Sid string `json:"sid,omitempty"`

	// Specifies the status of the domain.
	Status string `json:"status,omitempty"`

	// Specifies the type of trust for this domain. Options include 'primary', 'unknown', 'external', and 'forest'.
	TrustType string `json:"trust_type,omitempty"`
}

// Validate validates this ads provider domains domain
func (m *AdsProviderDomainsDomain) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AdsProviderDomainsDomain) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AdsProviderDomainsDomain) UnmarshalBinary(b []byte) error {
	var res AdsProviderDomainsDomain
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
