// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NamespaceAccessPoints namespace access points
// swagger:model NamespaceAccessPoints
type NamespaceAccessPoints struct {

	// namespaces
	// Min Items: 0
	Namespaces []*NamespaceAccessPointsNamespacesItems0 `json:"namespaces"`

	// versions
	// Min Items: 0
	Versions []string `json:"versions"`
}

// Validate validates this namespace access points
func (m *NamespaceAccessPoints) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateNamespaces(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateVersions(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *NamespaceAccessPoints) validateNamespaces(formats strfmt.Registry) error {

	if swag.IsZero(m.Namespaces) { // not required
		return nil
	}

	iNamespacesSize := int64(len(m.Namespaces))

	if err := validate.MinItems("namespaces", "body", iNamespacesSize, 0); err != nil {
		return err
	}

	for i := 0; i < len(m.Namespaces); i++ {
		if swag.IsZero(m.Namespaces[i]) { // not required
			continue
		}

		if m.Namespaces[i] != nil {
			if err := m.Namespaces[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("namespaces" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *NamespaceAccessPoints) validateVersions(formats strfmt.Registry) error {

	if swag.IsZero(m.Versions) { // not required
		return nil
	}

	iVersionsSize := int64(len(m.Versions))

	if err := validate.MinItems("versions", "body", iVersionsSize, 0); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *NamespaceAccessPoints) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NamespaceAccessPoints) UnmarshalBinary(b []byte) error {
	var res NamespaceAccessPoints
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// NamespaceAccessPointsNamespacesItems0 namespace access points namespaces items0
// swagger:model NamespaceAccessPointsNamespacesItems0
type NamespaceAccessPointsNamespacesItems0 struct {

	// name
	Name string `json:"name,omitempty"`

	// path
	Path string `json:"path,omitempty"`
}

// Validate validates this namespace access points namespaces items0
func (m *NamespaceAccessPointsNamespacesItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *NamespaceAccessPointsNamespacesItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NamespaceAccessPointsNamespacesItems0) UnmarshalBinary(b []byte) error {
	var res NamespaceAccessPointsNamespacesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
