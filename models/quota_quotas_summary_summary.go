// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// QuotaQuotasSummarySummary quota quotas summary summary
// swagger:model QuotaQuotasSummarySummary
type QuotaQuotasSummarySummary struct {

	// Total number of quotas.
	// Required: true
	Count *int64 `json:"count"`

	// Total number of default-group quotas.
	// Required: true
	DefaultGroupQuotasCount *int64 `json:"default_group_quotas_count"`

	// Total number of default-user quotas.
	// Required: true
	DefaultUserQuotasCount *int64 `json:"default_user_quotas_count"`

	// Total number of directory quotas.
	// Required: true
	DirectoryQuotasCount *int64 `json:"directory_quotas_count"`

	// Total number of -group quotas.
	// Required: true
	GroupQuotasCount *int64 `json:"group_quotas_count"`

	// Total number of user and group totals that are linked.
	// Required: true
	LinkedQuotasCount *int64 `json:"linked_quotas_count"`

	// Total number of user quotas.
	// Required: true
	UserQuotasCount *int64 `json:"user_quotas_count"`
}

// Validate validates this quota quotas summary summary
func (m *QuotaQuotasSummarySummary) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDefaultGroupQuotasCount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDefaultUserQuotasCount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDirectoryQuotasCount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateGroupQuotasCount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLinkedQuotasCount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUserQuotasCount(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *QuotaQuotasSummarySummary) validateCount(formats strfmt.Registry) error {

	if err := validate.Required("count", "body", m.Count); err != nil {
		return err
	}

	return nil
}

func (m *QuotaQuotasSummarySummary) validateDefaultGroupQuotasCount(formats strfmt.Registry) error {

	if err := validate.Required("default_group_quotas_count", "body", m.DefaultGroupQuotasCount); err != nil {
		return err
	}

	return nil
}

func (m *QuotaQuotasSummarySummary) validateDefaultUserQuotasCount(formats strfmt.Registry) error {

	if err := validate.Required("default_user_quotas_count", "body", m.DefaultUserQuotasCount); err != nil {
		return err
	}

	return nil
}

func (m *QuotaQuotasSummarySummary) validateDirectoryQuotasCount(formats strfmt.Registry) error {

	if err := validate.Required("directory_quotas_count", "body", m.DirectoryQuotasCount); err != nil {
		return err
	}

	return nil
}

func (m *QuotaQuotasSummarySummary) validateGroupQuotasCount(formats strfmt.Registry) error {

	if err := validate.Required("group_quotas_count", "body", m.GroupQuotasCount); err != nil {
		return err
	}

	return nil
}

func (m *QuotaQuotasSummarySummary) validateLinkedQuotasCount(formats strfmt.Registry) error {

	if err := validate.Required("linked_quotas_count", "body", m.LinkedQuotasCount); err != nil {
		return err
	}

	return nil
}

func (m *QuotaQuotasSummarySummary) validateUserQuotasCount(formats strfmt.Registry) error {

	if err := validate.Required("user_quotas_count", "body", m.UserQuotasCount); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *QuotaQuotasSummarySummary) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *QuotaQuotasSummarySummary) UnmarshalBinary(b []byte) error {
	var res QuotaQuotasSummarySummary
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
