// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// JobStatisticsJob job statistics job
// swagger:model JobStatisticsJob
type JobStatisticsJob struct {

	// The job ID.
	// Required: true
	JobID *int64 `json:"job_id"`

	// nodes
	// Required: true
	Nodes []*JobStatisticsJobNode `json:"nodes"`

	// The current phase of the job.
	// Required: true
	Phase *int64 `json:"phase"`

	// The number of nodes participating in the job.
	// Required: true
	TotalNodes *int64 `json:"total_nodes"`
}

// Validate validates this job statistics job
func (m *JobStatisticsJob) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateJobID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNodes(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePhase(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTotalNodes(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *JobStatisticsJob) validateJobID(formats strfmt.Registry) error {

	if err := validate.Required("job_id", "body", m.JobID); err != nil {
		return err
	}

	return nil
}

func (m *JobStatisticsJob) validateNodes(formats strfmt.Registry) error {

	if err := validate.Required("nodes", "body", m.Nodes); err != nil {
		return err
	}

	for i := 0; i < len(m.Nodes); i++ {
		if swag.IsZero(m.Nodes[i]) { // not required
			continue
		}

		if m.Nodes[i] != nil {
			if err := m.Nodes[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("nodes" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *JobStatisticsJob) validatePhase(formats strfmt.Registry) error {

	if err := validate.Required("phase", "body", m.Phase); err != nil {
		return err
	}

	return nil
}

func (m *JobStatisticsJob) validateTotalNodes(formats strfmt.Registry) error {

	if err := validate.Required("total_nodes", "body", m.TotalNodes); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *JobStatisticsJob) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *JobStatisticsJob) UnmarshalBinary(b []byte) error {
	var res JobStatisticsJob
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
