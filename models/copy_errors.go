// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// CopyErrors copy errors
// swagger:model CopyErrors
type CopyErrors struct {

	// copy errors
	CopyErrors []*CopyErrorsCopyErrorsItems0 `json:"copy_errors"`
}

// Validate validates this copy errors
func (m *CopyErrors) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCopyErrors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CopyErrors) validateCopyErrors(formats strfmt.Registry) error {

	if swag.IsZero(m.CopyErrors) { // not required
		return nil
	}

	for i := 0; i < len(m.CopyErrors); i++ {
		if swag.IsZero(m.CopyErrors[i]) { // not required
			continue
		}

		if m.CopyErrors[i] != nil {
			if err := m.CopyErrors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("copy_errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *CopyErrors) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CopyErrors) UnmarshalBinary(b []byte) error {
	var res CopyErrors
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// CopyErrorsCopyErrorsItems0 copy errors copy errors items0
// swagger:model CopyErrorsCopyErrorsItems0
type CopyErrorsCopyErrorsItems0 struct {

	// error src
	ErrorSrc string `json:"error_src,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// source
	Source string `json:"source,omitempty"`

	// target
	Target string `json:"target,omitempty"`
}

// Validate validates this copy errors copy errors items0
func (m *CopyErrorsCopyErrorsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CopyErrorsCopyErrorsItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CopyErrorsCopyErrorsItems0) UnmarshalBinary(b []byte) error {
	var res CopyErrorsCopyErrorsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
