// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// ReportsScansReport reports scans report
// swagger:model ReportsScansReport
type ReportsScansReport struct {

	// The number of bytes sent to the virus definition server to be scanned.
	BytesSent int64 `json:"bytes_sent,omitempty"`

	// The length of time the job ran for.
	Duration int64 `json:"duration,omitempty"`

	// The time the job ended.
	End int64 `json:"end,omitempty"`

	// The number of file scanned.
	Files int64 `json:"files,omitempty"`

	// A unique identifier for the report.
	ID string `json:"id,omitempty"`

	// The number of infections found.
	Infections int64 `json:"infections,omitempty"`

	// The ID of the job that ran the policy.  If the scan was manually run on a single file, this field will be null.
	JobID int64 `json:"job_id,omitempty"`

	// The id of the policy that this scan job executed.
	PolicyID string `json:"policy_id,omitempty"`

	// The cumulative size of the file scanned.
	Size int64 `json:"size,omitempty"`

	// The time the job started.
	Start int64 `json:"start,omitempty"`

	// The state of the job.
	Status string `json:"status,omitempty"`
}

// Validate validates this reports scans report
func (m *ReportsScansReport) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ReportsScansReport) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ReportsScansReport) UnmarshalBinary(b []byte) error {
	var res ReportsScansReport
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
