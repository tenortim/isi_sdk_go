// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ClusterTimeError cluster time error
// swagger:model ClusterTimeError
type ClusterTimeError struct {

	// The general meaning of the status code.
	Code string `json:"code,omitempty"`

	// Logical node number of the node reporting this error.
	// Maximum: 4.294967295e+09
	// Minimum: 0
	Lnn *int64 `json:"lnn,omitempty"`

	// More detailed description of the error.
	Message string `json:"message,omitempty"`

	// HTTP Status code returned by this node.
	// Maximum: 4.294967295e+09
	// Minimum: 0
	Status *int64 `json:"status,omitempty"`
}

// Validate validates this cluster time error
func (m *ClusterTimeError) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLnn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ClusterTimeError) validateLnn(formats strfmt.Registry) error {

	if swag.IsZero(m.Lnn) { // not required
		return nil
	}

	if err := validate.MinimumInt("lnn", "body", int64(*m.Lnn), 0, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("lnn", "body", int64(*m.Lnn), 4.294967295e+09, false); err != nil {
		return err
	}

	return nil
}

func (m *ClusterTimeError) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.Status) { // not required
		return nil
	}

	if err := validate.MinimumInt("status", "body", int64(*m.Status), 0, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("status", "body", int64(*m.Status), 4.294967295e+09, false); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ClusterTimeError) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ClusterTimeError) UnmarshalBinary(b []byte) error {
	var res ClusterTimeError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
