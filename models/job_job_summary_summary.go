// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// JobJobSummarySummary job job summary summary
// swagger:model JobJobSummarySummary
type JobJobSummarySummary struct {

	// Whether the cluster is in a degraded state.  Note this is from the perspective of the node handling the query, which might be different from another node.
	// Required: true
	ClusterIsDegraded *bool `json:"cluster_is_degraded"`

	// Whether isi_job_d instances on all up nodes in the cluster are connected to the coordinator.
	// Required: true
	Connected *bool `json:"connected"`

	// The devid of the job engine coordinator.
	// Required: true
	Coordinator *int64 `json:"coordinator"`

	// If connected=false, this is the set of devids that are not connected to the coordinator.
	DisconnectedNodes []int64 `json:"disconnected_nodes"`

	// Whether the cluster has any down or read-only nodes.  These nodes are not considered in the connected property.
	// Required: true
	DownOrReadOnlyNodes *bool `json:"down_or_read_only_nodes"`

	// The job ID to be assigned to the next job.
	// Required: true
	NextJid *int64 `json:"next_jid"`

	// Whether the job engine would allow most jobs to run even when the cluster is in a degraded state.
	// Required: true
	RunDegraded *bool `json:"run_degraded"`

	// Whether the coordinator has recently gathered statistics for all nodes in the cluster.
	// Required: true
	StatsReady *bool `json:"stats_ready"`
}

// Validate validates this job job summary summary
func (m *JobJobSummarySummary) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClusterIsDegraded(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateConnected(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCoordinator(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDownOrReadOnlyNodes(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNextJid(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRunDegraded(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatsReady(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *JobJobSummarySummary) validateClusterIsDegraded(formats strfmt.Registry) error {

	if err := validate.Required("cluster_is_degraded", "body", m.ClusterIsDegraded); err != nil {
		return err
	}

	return nil
}

func (m *JobJobSummarySummary) validateConnected(formats strfmt.Registry) error {

	if err := validate.Required("connected", "body", m.Connected); err != nil {
		return err
	}

	return nil
}

func (m *JobJobSummarySummary) validateCoordinator(formats strfmt.Registry) error {

	if err := validate.Required("coordinator", "body", m.Coordinator); err != nil {
		return err
	}

	return nil
}

func (m *JobJobSummarySummary) validateDownOrReadOnlyNodes(formats strfmt.Registry) error {

	if err := validate.Required("down_or_read_only_nodes", "body", m.DownOrReadOnlyNodes); err != nil {
		return err
	}

	return nil
}

func (m *JobJobSummarySummary) validateNextJid(formats strfmt.Registry) error {

	if err := validate.Required("next_jid", "body", m.NextJid); err != nil {
		return err
	}

	return nil
}

func (m *JobJobSummarySummary) validateRunDegraded(formats strfmt.Registry) error {

	if err := validate.Required("run_degraded", "body", m.RunDegraded); err != nil {
		return err
	}

	return nil
}

func (m *JobJobSummarySummary) validateStatsReady(formats strfmt.Registry) error {

	if err := validate.Required("stats_ready", "body", m.StatsReady); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *JobJobSummarySummary) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *JobJobSummarySummary) UnmarshalBinary(b []byte) error {
	var res JobJobSummarySummary
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
