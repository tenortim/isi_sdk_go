// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NtpSettingsSettings ntp settings settings
// swagger:model NtpSettingsSettings
type NtpSettingsSettings struct {

	// Number of nodes that will contact the NTP servers.
	// Minimum: 1
	Chimers int64 `json:"chimers,omitempty"`

	// Node number (LNN) for nodes excluded from chimer duty.
	Excluded []string `json:"excluded"`

	// Path to NTP key file within /ifs.
	KeyFile string `json:"key_file,omitempty"`
}

// Validate validates this ntp settings settings
func (m *NtpSettingsSettings) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateChimers(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *NtpSettingsSettings) validateChimers(formats strfmt.Registry) error {

	if swag.IsZero(m.Chimers) { // not required
		return nil
	}

	if err := validate.MinimumInt("chimers", "body", int64(m.Chimers), 1, false); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *NtpSettingsSettings) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NtpSettingsSettings) UnmarshalBinary(b []byte) error {
	var res NtpSettingsSettings
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
