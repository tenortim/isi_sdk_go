// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// JobJobChangelistcreateParams job job changelistcreate params
// swagger:model JobJobChangelistcreateParams
type JobJobChangelistcreateParams struct {

	// Newer snapshot ID.
	// Required: true
	// Minimum: 1
	NewerSnapid *int64 `json:"newer_snapid"`

	// Older snapshot ID.
	// Required: true
	// Minimum: 1
	OlderSnapid *int64 `json:"older_snapid"`

	// Whether to retain the replication record after a changelist is created. Retaining a replication record allows a changelist to be recreated later.
	RetainRepstate bool `json:"retain_repstate,omitempty"`
}

// Validate validates this job job changelistcreate params
func (m *JobJobChangelistcreateParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateNewerSnapid(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOlderSnapid(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *JobJobChangelistcreateParams) validateNewerSnapid(formats strfmt.Registry) error {

	if err := validate.Required("newer_snapid", "body", m.NewerSnapid); err != nil {
		return err
	}

	if err := validate.MinimumInt("newer_snapid", "body", int64(*m.NewerSnapid), 1, false); err != nil {
		return err
	}

	return nil
}

func (m *JobJobChangelistcreateParams) validateOlderSnapid(formats strfmt.Registry) error {

	if err := validate.Required("older_snapid", "body", m.OlderSnapid); err != nil {
		return err
	}

	if err := validate.MinimumInt("older_snapid", "body", int64(*m.OlderSnapid), 1, false); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *JobJobChangelistcreateParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *JobJobChangelistcreateParams) UnmarshalBinary(b []byte) error {
	var res JobJobChangelistcreateParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
