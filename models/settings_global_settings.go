// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// SettingsGlobalSettings settings global settings
// swagger:model SettingsGlobalSettings
type SettingsGlobalSettings struct {

	// Specifies zones that are audited when the protocol_auditing_enabled property is enabled.
	AuditedZones []string `json:"audited_zones"`

	// Specifies that events past a certain date are forwarded by the audit CEE forwarder. Format these events as follows: 'Topic@YYYY-MM-DD HH:MM:SS'.
	CeeLogTime string `json:"cee_log_time,omitempty"`

	// Specifies a list of Common Event Enabler (CEE) server URIs. Protocol audit logs are sent to these URIs for external processing.
	CeeServerUris []string `json:"cee_server_uris"`

	// Specifies whether logging for API configuration changes are enabled.
	ConfigAuditingEnabled bool `json:"config_auditing_enabled,omitempty"`

	// Specifies whether configuration audit syslog messages are forwarded.
	ConfigSyslogEnabled bool `json:"config_syslog_enabled,omitempty"`

	// Specifies the hostname that is reported in protocol events from this cluster.
	Hostname string `json:"hostname,omitempty"`

	// Specifies if logging for the I/O stream is enabled.
	ProtocolAuditingEnabled bool `json:"protocol_auditing_enabled,omitempty"`

	// Specifies that events past a specified date are forwarded by the audit syslog forwarder. Format these events as follows: 'Topic@YYYY-MM-DD HH:MM:SS' format
	SyslogLogTime string `json:"syslog_log_time,omitempty"`
}

// Validate validates this settings global settings
func (m *SettingsGlobalSettings) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SettingsGlobalSettings) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SettingsGlobalSettings) UnmarshalBinary(b []byte) error {
	var res SettingsGlobalSettings
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
