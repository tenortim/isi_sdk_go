// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateSnapshotRepstateResponse create snapshot repstate response
// swagger:model CreateSnapshotRepstateResponse
type CreateSnapshotRepstateResponse struct {

	// The lower snapid used to compute the repstate.
	// Required: true
	Snap1 *int64 `json:"snap1"`

	// The higher snapid used to compute the repstate.
	// Required: true
	Snap2 *int64 `json:"snap2"`
}

// Validate validates this create snapshot repstate response
func (m *CreateSnapshotRepstateResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSnap1(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSnap2(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateSnapshotRepstateResponse) validateSnap1(formats strfmt.Registry) error {

	if err := validate.Required("snap1", "body", m.Snap1); err != nil {
		return err
	}

	return nil
}

func (m *CreateSnapshotRepstateResponse) validateSnap2(formats strfmt.Registry) error {

	if err := validate.Required("snap2", "body", m.Snap2); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CreateSnapshotRepstateResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateSnapshotRepstateResponse) UnmarshalBinary(b []byte) error {
	var res CreateSnapshotRepstateResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
