// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// NfsNlmLocksLock nfs nlm locks lock
// swagger:model NfsNlmLocksLock
type NfsNlmLocksLock struct {

	// Specifies the client host name and IP address.
	Client string `json:"client,omitempty"`

	// Specifies the client ID.
	ClientID string `json:"client_id,omitempty"`

	// Specifies the UNIX EPoch time that the lock was created.
	Created int64 `json:"created,omitempty"`

	// Specifies the system-assigned ID given to the lock. This value is returned when the lock is created with the POST method.
	ID string `json:"id,omitempty"`

	// Specifies the LIN in /ifs that is locked.
	Lin string `json:"lin,omitempty"`

	// Specifies the lock type.
	LockType string `json:"lock_type,omitempty"`

	// Specifies the path under /ifs that is locked.
	Path string `json:"path,omitempty"`

	// Specifies the byte range within the locked file.
	Range []int64 `json:"range"`
}

// Validate validates this nfs nlm locks lock
func (m *NfsNlmLocksLock) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *NfsNlmLocksLock) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NfsNlmLocksLock) UnmarshalBinary(b []byte) error {
	var res NfsNlmLocksLock
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
