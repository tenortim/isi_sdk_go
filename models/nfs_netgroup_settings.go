// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// NfsNetgroupSettings nfs netgroup settings
// swagger:model NfsNetgroupSettings
type NfsNetgroupSettings struct {

	// To-disk backup interval for the netgroup cache.
	Bgwrite int64 `json:"bgwrite,omitempty"`

	// Time between updates of netgroups in the cache.
	Expiration int64 `json:"expiration,omitempty"`

	// Length of time an un-accessed netgroup remains in the cache.
	Lifetime int64 `json:"lifetime,omitempty"`

	// Retry interval for netgroup updates if the remote provider is unresponsive.
	Retry int64 `json:"retry,omitempty"`
}

// Validate validates this nfs netgroup settings
func (m *NfsNetgroupSettings) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *NfsNetgroupSettings) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NfsNetgroupSettings) UnmarshalBinary(b []byte) error {
	var res NfsNetgroupSettings
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
