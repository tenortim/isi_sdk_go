// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// MappingUsersRulesRuleOptionsExtended mapping users rules rule options extended
// swagger:model MappingUsersRulesRuleOptionsExtended
type MappingUsersRulesRuleOptionsExtended struct {

	// If true, and the rule was applied successfully, stop processing further.
	Break bool `json:"break,omitempty"`

	// default user
	DefaultUser *MappingUsersRulesRuleOptionsDefaultUser `json:"default_user,omitempty"`

	// If true, the primary GID and primary group SID should be copied to the existing credential.
	Group bool `json:"group,omitempty"`

	// If true, all additional identifiers should be copied to the existing credential.
	Groups bool `json:"groups,omitempty"`

	// If true, the primary UID and primary user SID should be copied to the existing credential.
	User bool `json:"user,omitempty"`
}

// Validate validates this mapping users rules rule options extended
func (m *MappingUsersRulesRuleOptionsExtended) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDefaultUser(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MappingUsersRulesRuleOptionsExtended) validateDefaultUser(formats strfmt.Registry) error {

	if swag.IsZero(m.DefaultUser) { // not required
		return nil
	}

	if m.DefaultUser != nil {
		if err := m.DefaultUser.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("default_user")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MappingUsersRulesRuleOptionsExtended) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MappingUsersRulesRuleOptionsExtended) UnmarshalBinary(b []byte) error {
	var res MappingUsersRulesRuleOptionsExtended
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
