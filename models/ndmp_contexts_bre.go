// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// NdmpContextsBre View a NDMP restartable backup Context
// swagger:model NdmpContextsBre
type NdmpContextsBre struct {

	// Backup type
	BackupType string `json:"backup type,omitempty"`

	// Backup Context ID
	BkpContextID string `json:"bkp_context_id,omitempty"`

	// Unique ID of NDMP BRE context
	BreContextID string `json:"bre_context_id,omitempty"`

	// Context creation time
	CreateTime int64 `json:"create_time,omitempty"`

	// List of environment variables for restartable backup
	EnvVariables []*NdmpContextsBreEnvVariable `json:"env_variables"`

	// Unique display id.
	ID string `json:"id,omitempty"`

	// Backup result
	Results int64 `json:"results,omitempty"`

	// Snapshot name of backup
	SnapName string `json:"snap_name,omitempty"`

	// Context status bits
	Status int64 `json:"status,omitempty"`

	// Backup Stream ID
	StreamID int64 `json:"stream_id,omitempty"`
}

// Validate validates this ndmp contexts bre
func (m *NdmpContextsBre) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEnvVariables(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *NdmpContextsBre) validateEnvVariables(formats strfmt.Registry) error {

	if swag.IsZero(m.EnvVariables) { // not required
		return nil
	}

	for i := 0; i < len(m.EnvVariables); i++ {
		if swag.IsZero(m.EnvVariables[i]) { // not required
			continue
		}

		if m.EnvVariables[i] != nil {
			if err := m.EnvVariables[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("env_variables" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *NdmpContextsBre) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NdmpContextsBre) UnmarshalBinary(b []byte) error {
	var res NdmpContextsBre
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
