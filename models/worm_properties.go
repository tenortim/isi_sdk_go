// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// WormProperties worm properties
// swagger:model WormProperties
type WormProperties struct {

	// Autocommit delay.
	AutocommitDelay int64 `json:"autocommit_delay,omitempty"`

	// WORM domain ID.
	DomainID int64 `json:"domain_id,omitempty"`

	// WORM domain path.
	DomainPath string `json:"domain_path,omitempty"`

	// Indicates whether the file was committed to the WORM state.
	WormCommitted bool `json:"worm_committed,omitempty"`

	// WORM change time.
	WormCtime int64 `json:"worm_ctime,omitempty"`

	// Provides the override retention date that is set on the SmartLock directory where the file resides.
	WormOverrideRetentionDate string `json:"worm_override_retention_date,omitempty"`

	// Provides the override retention date in seconds from UNIX Epoch or UTC.
	WormOverrideRetentionDateVal int64 `json:"worm_override_retention_date_val,omitempty"`

	// Provides the retention expiration date in Coordinated Universal Time (such as UTC/GMT).
	WormRetentionDate string `json:"worm_retention_date,omitempty"`

	// Provides the retention expiration date in seconds from UNIX Epoch or UTC.
	WormRetentionDateVal int64 `json:"worm_retention_date_val,omitempty"`
}

// Validate validates this worm properties
func (m *WormProperties) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *WormProperties) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WormProperties) UnmarshalBinary(b []byte) error {
	var res WormProperties
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
