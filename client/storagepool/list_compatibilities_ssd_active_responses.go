// Code generated by go-swagger; DO NOT EDIT.

package storagepool

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// ListCompatibilitiesSsdActiveReader is a Reader for the ListCompatibilitiesSsdActive structure.
type ListCompatibilitiesSsdActiveReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListCompatibilitiesSsdActiveReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListCompatibilitiesSsdActiveOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewListCompatibilitiesSsdActiveDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListCompatibilitiesSsdActiveOK creates a ListCompatibilitiesSsdActiveOK with default headers values
func NewListCompatibilitiesSsdActiveOK() *ListCompatibilitiesSsdActiveOK {
	return &ListCompatibilitiesSsdActiveOK{}
}

/*ListCompatibilitiesSsdActiveOK handles this case with default header values.

Get a list of active ssd compatibilities
*/
type ListCompatibilitiesSsdActiveOK struct {
	Payload *models.CompatibilitiesSsdActiveExtended
}

func (o *ListCompatibilitiesSsdActiveOK) Error() string {
	return fmt.Sprintf("[GET /platform/3/storagepool/compatibilities/ssd/active][%d] listCompatibilitiesSsdActiveOK  %+v", 200, o.Payload)
}

func (o *ListCompatibilitiesSsdActiveOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CompatibilitiesSsdActiveExtended)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListCompatibilitiesSsdActiveDefault creates a ListCompatibilitiesSsdActiveDefault with default headers values
func NewListCompatibilitiesSsdActiveDefault(code int) *ListCompatibilitiesSsdActiveDefault {
	return &ListCompatibilitiesSsdActiveDefault{
		_statusCode: code,
	}
}

/*ListCompatibilitiesSsdActiveDefault handles this case with default header values.

Unexpected error
*/
type ListCompatibilitiesSsdActiveDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the list compatibilities ssd active default response
func (o *ListCompatibilitiesSsdActiveDefault) Code() int {
	return o._statusCode
}

func (o *ListCompatibilitiesSsdActiveDefault) Error() string {
	return fmt.Sprintf("[GET /platform/3/storagepool/compatibilities/ssd/active][%d] listCompatibilitiesSsdActive default  %+v", o._statusCode, o.Payload)
}

func (o *ListCompatibilitiesSsdActiveDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
