// Code generated by go-swagger; DO NOT EDIT.

package storagepool

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// NewUpdateCompatibilitiesSsdActiveByIDParams creates a new UpdateCompatibilitiesSsdActiveByIDParams object
// with the default values initialized.
func NewUpdateCompatibilitiesSsdActiveByIDParams() *UpdateCompatibilitiesSsdActiveByIDParams {
	var ()
	return &UpdateCompatibilitiesSsdActiveByIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateCompatibilitiesSsdActiveByIDParamsWithTimeout creates a new UpdateCompatibilitiesSsdActiveByIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateCompatibilitiesSsdActiveByIDParamsWithTimeout(timeout time.Duration) *UpdateCompatibilitiesSsdActiveByIDParams {
	var ()
	return &UpdateCompatibilitiesSsdActiveByIDParams{

		timeout: timeout,
	}
}

// NewUpdateCompatibilitiesSsdActiveByIDParamsWithContext creates a new UpdateCompatibilitiesSsdActiveByIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateCompatibilitiesSsdActiveByIDParamsWithContext(ctx context.Context) *UpdateCompatibilitiesSsdActiveByIDParams {
	var ()
	return &UpdateCompatibilitiesSsdActiveByIDParams{

		Context: ctx,
	}
}

// NewUpdateCompatibilitiesSsdActiveByIDParamsWithHTTPClient creates a new UpdateCompatibilitiesSsdActiveByIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateCompatibilitiesSsdActiveByIDParamsWithHTTPClient(client *http.Client) *UpdateCompatibilitiesSsdActiveByIDParams {
	var ()
	return &UpdateCompatibilitiesSsdActiveByIDParams{
		HTTPClient: client,
	}
}

/*UpdateCompatibilitiesSsdActiveByIDParams contains all the parameters to send to the API endpoint
for the update compatibilities ssd active by Id operation typically these are written to a http.Request
*/
type UpdateCompatibilitiesSsdActiveByIDParams struct {

	/*CompatibilitiesSsdActiveID
	  Modify an ssd compatibility by id

	*/
	CompatibilitiesSsdActiveID string
	/*CompatibilitiesSsdActiveIDParams*/
	CompatibilitiesSsdActiveIDParams *models.CompatibilitiesSsdActiveIDParams

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update compatibilities ssd active by Id params
func (o *UpdateCompatibilitiesSsdActiveByIDParams) WithTimeout(timeout time.Duration) *UpdateCompatibilitiesSsdActiveByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update compatibilities ssd active by Id params
func (o *UpdateCompatibilitiesSsdActiveByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update compatibilities ssd active by Id params
func (o *UpdateCompatibilitiesSsdActiveByIDParams) WithContext(ctx context.Context) *UpdateCompatibilitiesSsdActiveByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update compatibilities ssd active by Id params
func (o *UpdateCompatibilitiesSsdActiveByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update compatibilities ssd active by Id params
func (o *UpdateCompatibilitiesSsdActiveByIDParams) WithHTTPClient(client *http.Client) *UpdateCompatibilitiesSsdActiveByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update compatibilities ssd active by Id params
func (o *UpdateCompatibilitiesSsdActiveByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCompatibilitiesSsdActiveID adds the compatibilitiesSsdActiveID to the update compatibilities ssd active by Id params
func (o *UpdateCompatibilitiesSsdActiveByIDParams) WithCompatibilitiesSsdActiveID(compatibilitiesSsdActiveID string) *UpdateCompatibilitiesSsdActiveByIDParams {
	o.SetCompatibilitiesSsdActiveID(compatibilitiesSsdActiveID)
	return o
}

// SetCompatibilitiesSsdActiveID adds the compatibilitiesSsdActiveId to the update compatibilities ssd active by Id params
func (o *UpdateCompatibilitiesSsdActiveByIDParams) SetCompatibilitiesSsdActiveID(compatibilitiesSsdActiveID string) {
	o.CompatibilitiesSsdActiveID = compatibilitiesSsdActiveID
}

// WithCompatibilitiesSsdActiveIDParams adds the compatibilitiesSsdActiveIDParams to the update compatibilities ssd active by Id params
func (o *UpdateCompatibilitiesSsdActiveByIDParams) WithCompatibilitiesSsdActiveIDParams(compatibilitiesSsdActiveIDParams *models.CompatibilitiesSsdActiveIDParams) *UpdateCompatibilitiesSsdActiveByIDParams {
	o.SetCompatibilitiesSsdActiveIDParams(compatibilitiesSsdActiveIDParams)
	return o
}

// SetCompatibilitiesSsdActiveIDParams adds the compatibilitiesSsdActiveIdParams to the update compatibilities ssd active by Id params
func (o *UpdateCompatibilitiesSsdActiveByIDParams) SetCompatibilitiesSsdActiveIDParams(compatibilitiesSsdActiveIDParams *models.CompatibilitiesSsdActiveIDParams) {
	o.CompatibilitiesSsdActiveIDParams = compatibilitiesSsdActiveIDParams
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateCompatibilitiesSsdActiveByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param CompatibilitiesSsdActiveId
	if err := r.SetPathParam("CompatibilitiesSsdActiveId", o.CompatibilitiesSsdActiveID); err != nil {
		return err
	}

	if o.CompatibilitiesSsdActiveIDParams != nil {
		if err := r.SetBodyParam(o.CompatibilitiesSsdActiveIDParams); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
