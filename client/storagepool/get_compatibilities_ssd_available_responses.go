// Code generated by go-swagger; DO NOT EDIT.

package storagepool

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// GetCompatibilitiesSsdAvailableReader is a Reader for the GetCompatibilitiesSsdAvailable structure.
type GetCompatibilitiesSsdAvailableReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCompatibilitiesSsdAvailableReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCompatibilitiesSsdAvailableOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetCompatibilitiesSsdAvailableDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetCompatibilitiesSsdAvailableOK creates a GetCompatibilitiesSsdAvailableOK with default headers values
func NewGetCompatibilitiesSsdAvailableOK() *GetCompatibilitiesSsdAvailableOK {
	return &GetCompatibilitiesSsdAvailableOK{}
}

/*GetCompatibilitiesSsdAvailableOK handles this case with default header values.

Get a list of available ssd compatibilities
*/
type GetCompatibilitiesSsdAvailableOK struct {
	Payload *models.CompatibilitiesSsdAvailable
}

func (o *GetCompatibilitiesSsdAvailableOK) Error() string {
	return fmt.Sprintf("[GET /platform/1/storagepool/compatibilities/ssd/available][%d] getCompatibilitiesSsdAvailableOK  %+v", 200, o.Payload)
}

func (o *GetCompatibilitiesSsdAvailableOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CompatibilitiesSsdAvailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCompatibilitiesSsdAvailableDefault creates a GetCompatibilitiesSsdAvailableDefault with default headers values
func NewGetCompatibilitiesSsdAvailableDefault(code int) *GetCompatibilitiesSsdAvailableDefault {
	return &GetCompatibilitiesSsdAvailableDefault{
		_statusCode: code,
	}
}

/*GetCompatibilitiesSsdAvailableDefault handles this case with default header values.

Unexpected error
*/
type GetCompatibilitiesSsdAvailableDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get compatibilities ssd available default response
func (o *GetCompatibilitiesSsdAvailableDefault) Code() int {
	return o._statusCode
}

func (o *GetCompatibilitiesSsdAvailableDefault) Error() string {
	return fmt.Sprintf("[GET /platform/1/storagepool/compatibilities/ssd/available][%d] getCompatibilitiesSsdAvailable default  %+v", o._statusCode, o.Payload)
}

func (o *GetCompatibilitiesSsdAvailableDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
