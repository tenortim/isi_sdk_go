// Code generated by go-swagger; DO NOT EDIT.

package fsa_results

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// GetResultHistogramReader is a Reader for the GetResultHistogram structure.
type GetResultHistogramReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetResultHistogramReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetResultHistogramOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetResultHistogramDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetResultHistogramOK creates a GetResultHistogramOK with default headers values
func NewGetResultHistogramOK() *GetResultHistogramOK {
	return &GetResultHistogramOK{}
}

/*GetResultHistogramOK handles this case with default header values.

This resource retrieves a histogram of file counts for an individual FSA result set. ID in the resource path is the result set ID.
*/
type GetResultHistogramOK struct {
	Payload *models.ResultHistogram
}

func (o *GetResultHistogramOK) Error() string {
	return fmt.Sprintf("[GET /platform/3/fsa/results/{Id}/histogram][%d] getResultHistogramOK  %+v", 200, o.Payload)
}

func (o *GetResultHistogramOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResultHistogram)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResultHistogramDefault creates a GetResultHistogramDefault with default headers values
func NewGetResultHistogramDefault(code int) *GetResultHistogramDefault {
	return &GetResultHistogramDefault{
		_statusCode: code,
	}
}

/*GetResultHistogramDefault handles this case with default header values.

Unexpected error
*/
type GetResultHistogramDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get result histogram default response
func (o *GetResultHistogramDefault) Code() int {
	return o._statusCode
}

func (o *GetResultHistogramDefault) Error() string {
	return fmt.Sprintf("[GET /platform/3/fsa/results/{Id}/histogram][%d] getResultHistogram default  %+v", o._statusCode, o.Payload)
}

func (o *GetResultHistogramDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
