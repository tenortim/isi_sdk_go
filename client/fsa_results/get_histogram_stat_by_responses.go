// Code generated by go-swagger; DO NOT EDIT.

package fsa_results

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// GetHistogramStatByReader is a Reader for the GetHistogramStatBy structure.
type GetHistogramStatByReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHistogramStatByReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetHistogramStatByOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetHistogramStatByDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetHistogramStatByOK creates a GetHistogramStatByOK with default headers values
func NewGetHistogramStatByOK() *GetHistogramStatByOK {
	return &GetHistogramStatByOK{}
}

/*GetHistogramStatByOK handles this case with default header values.

This resource retrieves a histogram breakout for an individual FSA result set. ID in the resource path is the result set ID.
*/
type GetHistogramStatByOK struct {
	Payload *models.HistogramStatBy
}

func (o *GetHistogramStatByOK) Error() string {
	return fmt.Sprintf("[GET /platform/3/fsa/results/{Id}/histogram/{Stat}/by][%d] getHistogramStatByOK  %+v", 200, o.Payload)
}

func (o *GetHistogramStatByOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HistogramStatBy)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHistogramStatByDefault creates a GetHistogramStatByDefault with default headers values
func NewGetHistogramStatByDefault(code int) *GetHistogramStatByDefault {
	return &GetHistogramStatByDefault{
		_statusCode: code,
	}
}

/*GetHistogramStatByDefault handles this case with default header values.

Unexpected error
*/
type GetHistogramStatByDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get histogram stat by default response
func (o *GetHistogramStatByDefault) Code() int {
	return o._statusCode
}

func (o *GetHistogramStatByDefault) Error() string {
	return fmt.Sprintf("[GET /platform/3/fsa/results/{Id}/histogram/{Stat}/by][%d] getHistogramStatBy default  %+v", o._statusCode, o.Payload)
}

func (o *GetHistogramStatByDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
