// Code generated by go-swagger; DO NOT EDIT.

package cloud

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// NewUpdateCloudJobParams creates a new UpdateCloudJobParams object
// with the default values initialized.
func NewUpdateCloudJobParams() *UpdateCloudJobParams {
	var ()
	return &UpdateCloudJobParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateCloudJobParamsWithTimeout creates a new UpdateCloudJobParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateCloudJobParamsWithTimeout(timeout time.Duration) *UpdateCloudJobParams {
	var ()
	return &UpdateCloudJobParams{

		timeout: timeout,
	}
}

// NewUpdateCloudJobParamsWithContext creates a new UpdateCloudJobParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateCloudJobParamsWithContext(ctx context.Context) *UpdateCloudJobParams {
	var ()
	return &UpdateCloudJobParams{

		Context: ctx,
	}
}

// NewUpdateCloudJobParamsWithHTTPClient creates a new UpdateCloudJobParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateCloudJobParamsWithHTTPClient(client *http.Client) *UpdateCloudJobParams {
	var ()
	return &UpdateCloudJobParams{
		HTTPClient: client,
	}
}

/*UpdateCloudJobParams contains all the parameters to send to the API endpoint
for the update cloud job operation typically these are written to a http.Request
*/
type UpdateCloudJobParams struct {

	/*CloudJob*/
	CloudJob *models.CloudJob
	/*CloudJobID
	  Modify a cloud job or operation.

	*/
	CloudJobID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update cloud job params
func (o *UpdateCloudJobParams) WithTimeout(timeout time.Duration) *UpdateCloudJobParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update cloud job params
func (o *UpdateCloudJobParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update cloud job params
func (o *UpdateCloudJobParams) WithContext(ctx context.Context) *UpdateCloudJobParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update cloud job params
func (o *UpdateCloudJobParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update cloud job params
func (o *UpdateCloudJobParams) WithHTTPClient(client *http.Client) *UpdateCloudJobParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update cloud job params
func (o *UpdateCloudJobParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCloudJob adds the cloudJob to the update cloud job params
func (o *UpdateCloudJobParams) WithCloudJob(cloudJob *models.CloudJob) *UpdateCloudJobParams {
	o.SetCloudJob(cloudJob)
	return o
}

// SetCloudJob adds the cloudJob to the update cloud job params
func (o *UpdateCloudJobParams) SetCloudJob(cloudJob *models.CloudJob) {
	o.CloudJob = cloudJob
}

// WithCloudJobID adds the cloudJobID to the update cloud job params
func (o *UpdateCloudJobParams) WithCloudJobID(cloudJobID string) *UpdateCloudJobParams {
	o.SetCloudJobID(cloudJobID)
	return o
}

// SetCloudJobID adds the cloudJobId to the update cloud job params
func (o *UpdateCloudJobParams) SetCloudJobID(cloudJobID string) {
	o.CloudJobID = cloudJobID
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateCloudJobParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.CloudJob != nil {
		if err := r.SetBodyParam(o.CloudJob); err != nil {
			return err
		}
	}

	// path param CloudJobId
	if err := r.SetPathParam("CloudJobId", o.CloudJobID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
