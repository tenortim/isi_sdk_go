// Code generated by go-swagger; DO NOT EDIT.

package cloud

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteCloudPoolParams creates a new DeleteCloudPoolParams object
// with the default values initialized.
func NewDeleteCloudPoolParams() *DeleteCloudPoolParams {
	var ()
	return &DeleteCloudPoolParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteCloudPoolParamsWithTimeout creates a new DeleteCloudPoolParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteCloudPoolParamsWithTimeout(timeout time.Duration) *DeleteCloudPoolParams {
	var ()
	return &DeleteCloudPoolParams{

		timeout: timeout,
	}
}

// NewDeleteCloudPoolParamsWithContext creates a new DeleteCloudPoolParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteCloudPoolParamsWithContext(ctx context.Context) *DeleteCloudPoolParams {
	var ()
	return &DeleteCloudPoolParams{

		Context: ctx,
	}
}

// NewDeleteCloudPoolParamsWithHTTPClient creates a new DeleteCloudPoolParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteCloudPoolParamsWithHTTPClient(client *http.Client) *DeleteCloudPoolParams {
	var ()
	return &DeleteCloudPoolParams{
		HTTPClient: client,
	}
}

/*DeleteCloudPoolParams contains all the parameters to send to the API endpoint
for the delete cloud pool operation typically these are written to a http.Request
*/
type DeleteCloudPoolParams struct {

	/*CloudPoolID
	  Delete a cloud pool.

	*/
	CloudPoolID string
	/*AcknowledgeForceDelete
	  A value of 1 acknowledges that the user is deleting data.

	*/
	AcknowledgeForceDelete *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete cloud pool params
func (o *DeleteCloudPoolParams) WithTimeout(timeout time.Duration) *DeleteCloudPoolParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete cloud pool params
func (o *DeleteCloudPoolParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete cloud pool params
func (o *DeleteCloudPoolParams) WithContext(ctx context.Context) *DeleteCloudPoolParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete cloud pool params
func (o *DeleteCloudPoolParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete cloud pool params
func (o *DeleteCloudPoolParams) WithHTTPClient(client *http.Client) *DeleteCloudPoolParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete cloud pool params
func (o *DeleteCloudPoolParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCloudPoolID adds the cloudPoolID to the delete cloud pool params
func (o *DeleteCloudPoolParams) WithCloudPoolID(cloudPoolID string) *DeleteCloudPoolParams {
	o.SetCloudPoolID(cloudPoolID)
	return o
}

// SetCloudPoolID adds the cloudPoolId to the delete cloud pool params
func (o *DeleteCloudPoolParams) SetCloudPoolID(cloudPoolID string) {
	o.CloudPoolID = cloudPoolID
}

// WithAcknowledgeForceDelete adds the acknowledgeForceDelete to the delete cloud pool params
func (o *DeleteCloudPoolParams) WithAcknowledgeForceDelete(acknowledgeForceDelete *string) *DeleteCloudPoolParams {
	o.SetAcknowledgeForceDelete(acknowledgeForceDelete)
	return o
}

// SetAcknowledgeForceDelete adds the acknowledgeForceDelete to the delete cloud pool params
func (o *DeleteCloudPoolParams) SetAcknowledgeForceDelete(acknowledgeForceDelete *string) {
	o.AcknowledgeForceDelete = acknowledgeForceDelete
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteCloudPoolParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param CloudPoolId
	if err := r.SetPathParam("CloudPoolId", o.CloudPoolID); err != nil {
		return err
	}

	if o.AcknowledgeForceDelete != nil {

		// query param acknowledge_force_delete
		var qrAcknowledgeForceDelete string
		if o.AcknowledgeForceDelete != nil {
			qrAcknowledgeForceDelete = *o.AcknowledgeForceDelete
		}
		qAcknowledgeForceDelete := qrAcknowledgeForceDelete
		if qAcknowledgeForceDelete != "" {
			if err := r.SetQueryParam("acknowledge_force_delete", qAcknowledgeForceDelete); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
