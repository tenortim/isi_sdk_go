// Code generated by go-swagger; DO NOT EDIT.

package upgrade

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// NewCreateClusterAddRemainingNodeParams creates a new CreateClusterAddRemainingNodeParams object
// with the default values initialized.
func NewCreateClusterAddRemainingNodeParams() *CreateClusterAddRemainingNodeParams {
	var ()
	return &CreateClusterAddRemainingNodeParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateClusterAddRemainingNodeParamsWithTimeout creates a new CreateClusterAddRemainingNodeParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateClusterAddRemainingNodeParamsWithTimeout(timeout time.Duration) *CreateClusterAddRemainingNodeParams {
	var ()
	return &CreateClusterAddRemainingNodeParams{

		timeout: timeout,
	}
}

// NewCreateClusterAddRemainingNodeParamsWithContext creates a new CreateClusterAddRemainingNodeParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateClusterAddRemainingNodeParamsWithContext(ctx context.Context) *CreateClusterAddRemainingNodeParams {
	var ()
	return &CreateClusterAddRemainingNodeParams{

		Context: ctx,
	}
}

// NewCreateClusterAddRemainingNodeParamsWithHTTPClient creates a new CreateClusterAddRemainingNodeParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateClusterAddRemainingNodeParamsWithHTTPClient(client *http.Client) *CreateClusterAddRemainingNodeParams {
	var ()
	return &CreateClusterAddRemainingNodeParams{
		HTTPClient: client,
	}
}

/*CreateClusterAddRemainingNodeParams contains all the parameters to send to the API endpoint
for the create cluster add remaining node operation typically these are written to a http.Request
*/
type CreateClusterAddRemainingNodeParams struct {

	/*ClusterAddRemainingNode*/
	ClusterAddRemainingNode models.Empty

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create cluster add remaining node params
func (o *CreateClusterAddRemainingNodeParams) WithTimeout(timeout time.Duration) *CreateClusterAddRemainingNodeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create cluster add remaining node params
func (o *CreateClusterAddRemainingNodeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create cluster add remaining node params
func (o *CreateClusterAddRemainingNodeParams) WithContext(ctx context.Context) *CreateClusterAddRemainingNodeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create cluster add remaining node params
func (o *CreateClusterAddRemainingNodeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create cluster add remaining node params
func (o *CreateClusterAddRemainingNodeParams) WithHTTPClient(client *http.Client) *CreateClusterAddRemainingNodeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create cluster add remaining node params
func (o *CreateClusterAddRemainingNodeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithClusterAddRemainingNode adds the clusterAddRemainingNode to the create cluster add remaining node params
func (o *CreateClusterAddRemainingNodeParams) WithClusterAddRemainingNode(clusterAddRemainingNode models.Empty) *CreateClusterAddRemainingNodeParams {
	o.SetClusterAddRemainingNode(clusterAddRemainingNode)
	return o
}

// SetClusterAddRemainingNode adds the clusterAddRemainingNode to the create cluster add remaining node params
func (o *CreateClusterAddRemainingNodeParams) SetClusterAddRemainingNode(clusterAddRemainingNode models.Empty) {
	o.ClusterAddRemainingNode = clusterAddRemainingNode
}

// WriteToRequest writes these params to a swagger request
func (o *CreateClusterAddRemainingNodeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ClusterAddRemainingNode != nil {
		if err := r.SetBodyParam(o.ClusterAddRemainingNode); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
