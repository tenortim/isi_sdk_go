// Code generated by go-swagger; DO NOT EDIT.

package upgrade

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// GetClusterFirmwareStatusReader is a Reader for the GetClusterFirmwareStatus structure.
type GetClusterFirmwareStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClusterFirmwareStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetClusterFirmwareStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetClusterFirmwareStatusDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetClusterFirmwareStatusOK creates a GetClusterFirmwareStatusOK with default headers values
func NewGetClusterFirmwareStatusOK() *GetClusterFirmwareStatusOK {
	return &GetClusterFirmwareStatusOK{}
}

/*GetClusterFirmwareStatusOK handles this case with default header values.

The firmware status for the cluster.
*/
type GetClusterFirmwareStatusOK struct {
	Payload *models.ClusterFirmwareStatus
}

func (o *GetClusterFirmwareStatusOK) Error() string {
	return fmt.Sprintf("[GET /platform/3/upgrade/cluster/firmware/status][%d] getClusterFirmwareStatusOK  %+v", 200, o.Payload)
}

func (o *GetClusterFirmwareStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ClusterFirmwareStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterFirmwareStatusDefault creates a GetClusterFirmwareStatusDefault with default headers values
func NewGetClusterFirmwareStatusDefault(code int) *GetClusterFirmwareStatusDefault {
	return &GetClusterFirmwareStatusDefault{
		_statusCode: code,
	}
}

/*GetClusterFirmwareStatusDefault handles this case with default header values.

Unexpected error
*/
type GetClusterFirmwareStatusDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get cluster firmware status default response
func (o *GetClusterFirmwareStatusDefault) Code() int {
	return o._statusCode
}

func (o *GetClusterFirmwareStatusDefault) Error() string {
	return fmt.Sprintf("[GET /platform/3/upgrade/cluster/firmware/status][%d] getClusterFirmwareStatus default  %+v", o._statusCode, o.Payload)
}

func (o *GetClusterFirmwareStatusDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
