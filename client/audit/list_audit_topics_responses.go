// Code generated by go-swagger; DO NOT EDIT.

package audit

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// ListAuditTopicsReader is a Reader for the ListAuditTopics structure.
type ListAuditTopicsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListAuditTopicsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListAuditTopicsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewListAuditTopicsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListAuditTopicsOK creates a ListAuditTopicsOK with default headers values
func NewListAuditTopicsOK() *ListAuditTopicsOK {
	return &ListAuditTopicsOK{}
}

/*ListAuditTopicsOK handles this case with default header values.

Retrieve a list of audit topics.
*/
type ListAuditTopicsOK struct {
	Payload *models.AuditTopicsExtended
}

func (o *ListAuditTopicsOK) Error() string {
	return fmt.Sprintf("[GET /platform/1/audit/topics][%d] listAuditTopicsOK  %+v", 200, o.Payload)
}

func (o *ListAuditTopicsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuditTopicsExtended)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAuditTopicsDefault creates a ListAuditTopicsDefault with default headers values
func NewListAuditTopicsDefault(code int) *ListAuditTopicsDefault {
	return &ListAuditTopicsDefault{
		_statusCode: code,
	}
}

/*ListAuditTopicsDefault handles this case with default header values.

Unexpected error
*/
type ListAuditTopicsDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the list audit topics default response
func (o *ListAuditTopicsDefault) Code() int {
	return o._statusCode
}

func (o *ListAuditTopicsDefault) Error() string {
	return fmt.Sprintf("[GET /platform/1/audit/topics][%d] listAuditTopics default  %+v", o._statusCode, o.Payload)
}

func (o *ListAuditTopicsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
