// Code generated by go-swagger; DO NOT EDIT.

package auth_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// NewCreateGroupMemberParams creates a new CreateGroupMemberParams object
// with the default values initialized.
func NewCreateGroupMemberParams() *CreateGroupMemberParams {
	var ()
	return &CreateGroupMemberParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateGroupMemberParamsWithTimeout creates a new CreateGroupMemberParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateGroupMemberParamsWithTimeout(timeout time.Duration) *CreateGroupMemberParams {
	var ()
	return &CreateGroupMemberParams{

		timeout: timeout,
	}
}

// NewCreateGroupMemberParamsWithContext creates a new CreateGroupMemberParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateGroupMemberParamsWithContext(ctx context.Context) *CreateGroupMemberParams {
	var ()
	return &CreateGroupMemberParams{

		Context: ctx,
	}
}

// NewCreateGroupMemberParamsWithHTTPClient creates a new CreateGroupMemberParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateGroupMemberParamsWithHTTPClient(client *http.Client) *CreateGroupMemberParams {
	var ()
	return &CreateGroupMemberParams{
		HTTPClient: client,
	}
}

/*CreateGroupMemberParams contains all the parameters to send to the API endpoint
for the create group member operation typically these are written to a http.Request
*/
type CreateGroupMemberParams struct {

	/*Group*/
	Group string
	/*GroupMember*/
	GroupMember *models.GroupMember
	/*Provider
	  Filter group members by provider.

	*/
	Provider *string
	/*Zone
	  Filter group members by zone.

	*/
	Zone *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create group member params
func (o *CreateGroupMemberParams) WithTimeout(timeout time.Duration) *CreateGroupMemberParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create group member params
func (o *CreateGroupMemberParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create group member params
func (o *CreateGroupMemberParams) WithContext(ctx context.Context) *CreateGroupMemberParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create group member params
func (o *CreateGroupMemberParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create group member params
func (o *CreateGroupMemberParams) WithHTTPClient(client *http.Client) *CreateGroupMemberParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create group member params
func (o *CreateGroupMemberParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithGroup adds the group to the create group member params
func (o *CreateGroupMemberParams) WithGroup(group string) *CreateGroupMemberParams {
	o.SetGroup(group)
	return o
}

// SetGroup adds the group to the create group member params
func (o *CreateGroupMemberParams) SetGroup(group string) {
	o.Group = group
}

// WithGroupMember adds the groupMember to the create group member params
func (o *CreateGroupMemberParams) WithGroupMember(groupMember *models.GroupMember) *CreateGroupMemberParams {
	o.SetGroupMember(groupMember)
	return o
}

// SetGroupMember adds the groupMember to the create group member params
func (o *CreateGroupMemberParams) SetGroupMember(groupMember *models.GroupMember) {
	o.GroupMember = groupMember
}

// WithProvider adds the provider to the create group member params
func (o *CreateGroupMemberParams) WithProvider(provider *string) *CreateGroupMemberParams {
	o.SetProvider(provider)
	return o
}

// SetProvider adds the provider to the create group member params
func (o *CreateGroupMemberParams) SetProvider(provider *string) {
	o.Provider = provider
}

// WithZone adds the zone to the create group member params
func (o *CreateGroupMemberParams) WithZone(zone *string) *CreateGroupMemberParams {
	o.SetZone(zone)
	return o
}

// SetZone adds the zone to the create group member params
func (o *CreateGroupMemberParams) SetZone(zone *string) {
	o.Zone = zone
}

// WriteToRequest writes these params to a swagger request
func (o *CreateGroupMemberParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param Group
	if err := r.SetPathParam("Group", o.Group); err != nil {
		return err
	}

	if o.GroupMember != nil {
		if err := r.SetBodyParam(o.GroupMember); err != nil {
			return err
		}
	}

	if o.Provider != nil {

		// query param provider
		var qrProvider string
		if o.Provider != nil {
			qrProvider = *o.Provider
		}
		qProvider := qrProvider
		if qProvider != "" {
			if err := r.SetQueryParam("provider", qProvider); err != nil {
				return err
			}
		}

	}

	if o.Zone != nil {

		// query param zone
		var qrZone string
		if o.Zone != nil {
			qrZone = *o.Zone
		}
		qZone := qrZone
		if qZone != "" {
			if err := r.SetQueryParam("zone", qZone); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
