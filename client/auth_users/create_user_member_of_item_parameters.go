// Code generated by go-swagger; DO NOT EDIT.

package auth_users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// NewCreateUserMemberOfItemParams creates a new CreateUserMemberOfItemParams object
// with the default values initialized.
func NewCreateUserMemberOfItemParams() *CreateUserMemberOfItemParams {
	var ()
	return &CreateUserMemberOfItemParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateUserMemberOfItemParamsWithTimeout creates a new CreateUserMemberOfItemParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateUserMemberOfItemParamsWithTimeout(timeout time.Duration) *CreateUserMemberOfItemParams {
	var ()
	return &CreateUserMemberOfItemParams{

		timeout: timeout,
	}
}

// NewCreateUserMemberOfItemParamsWithContext creates a new CreateUserMemberOfItemParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateUserMemberOfItemParamsWithContext(ctx context.Context) *CreateUserMemberOfItemParams {
	var ()
	return &CreateUserMemberOfItemParams{

		Context: ctx,
	}
}

// NewCreateUserMemberOfItemParamsWithHTTPClient creates a new CreateUserMemberOfItemParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateUserMemberOfItemParamsWithHTTPClient(client *http.Client) *CreateUserMemberOfItemParams {
	var ()
	return &CreateUserMemberOfItemParams{
		HTTPClient: client,
	}
}

/*CreateUserMemberOfItemParams contains all the parameters to send to the API endpoint
for the create user member of item operation typically these are written to a http.Request
*/
type CreateUserMemberOfItemParams struct {

	/*User*/
	User string
	/*UserMemberOfItem*/
	UserMemberOfItem *models.GroupMember
	/*Provider
	  Filter groups by provider.

	*/
	Provider *string
	/*Zone
	  Filter groups by zone.

	*/
	Zone *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create user member of item params
func (o *CreateUserMemberOfItemParams) WithTimeout(timeout time.Duration) *CreateUserMemberOfItemParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create user member of item params
func (o *CreateUserMemberOfItemParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create user member of item params
func (o *CreateUserMemberOfItemParams) WithContext(ctx context.Context) *CreateUserMemberOfItemParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create user member of item params
func (o *CreateUserMemberOfItemParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create user member of item params
func (o *CreateUserMemberOfItemParams) WithHTTPClient(client *http.Client) *CreateUserMemberOfItemParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create user member of item params
func (o *CreateUserMemberOfItemParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithUser adds the user to the create user member of item params
func (o *CreateUserMemberOfItemParams) WithUser(user string) *CreateUserMemberOfItemParams {
	o.SetUser(user)
	return o
}

// SetUser adds the user to the create user member of item params
func (o *CreateUserMemberOfItemParams) SetUser(user string) {
	o.User = user
}

// WithUserMemberOfItem adds the userMemberOfItem to the create user member of item params
func (o *CreateUserMemberOfItemParams) WithUserMemberOfItem(userMemberOfItem *models.GroupMember) *CreateUserMemberOfItemParams {
	o.SetUserMemberOfItem(userMemberOfItem)
	return o
}

// SetUserMemberOfItem adds the userMemberOfItem to the create user member of item params
func (o *CreateUserMemberOfItemParams) SetUserMemberOfItem(userMemberOfItem *models.GroupMember) {
	o.UserMemberOfItem = userMemberOfItem
}

// WithProvider adds the provider to the create user member of item params
func (o *CreateUserMemberOfItemParams) WithProvider(provider *string) *CreateUserMemberOfItemParams {
	o.SetProvider(provider)
	return o
}

// SetProvider adds the provider to the create user member of item params
func (o *CreateUserMemberOfItemParams) SetProvider(provider *string) {
	o.Provider = provider
}

// WithZone adds the zone to the create user member of item params
func (o *CreateUserMemberOfItemParams) WithZone(zone *string) *CreateUserMemberOfItemParams {
	o.SetZone(zone)
	return o
}

// SetZone adds the zone to the create user member of item params
func (o *CreateUserMemberOfItemParams) SetZone(zone *string) {
	o.Zone = zone
}

// WriteToRequest writes these params to a swagger request
func (o *CreateUserMemberOfItemParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param User
	if err := r.SetPathParam("User", o.User); err != nil {
		return err
	}

	if o.UserMemberOfItem != nil {
		if err := r.SetBodyParam(o.UserMemberOfItem); err != nil {
			return err
		}
	}

	if o.Provider != nil {

		// query param provider
		var qrProvider string
		if o.Provider != nil {
			qrProvider = *o.Provider
		}
		qProvider := qrProvider
		if qProvider != "" {
			if err := r.SetQueryParam("provider", qProvider); err != nil {
				return err
			}
		}

	}

	if o.Zone != nil {

		// query param zone
		var qrZone string
		if o.Zone != nil {
			qrZone = *o.Zone
		}
		qZone := qrZone
		if qZone != "" {
			if err := r.SetQueryParam("zone", qZone); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
