// Code generated by go-swagger; DO NOT EDIT.

package protocols

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// NewUpdateSwiftAccountParams creates a new UpdateSwiftAccountParams object
// with the default values initialized.
func NewUpdateSwiftAccountParams() *UpdateSwiftAccountParams {
	var ()
	return &UpdateSwiftAccountParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateSwiftAccountParamsWithTimeout creates a new UpdateSwiftAccountParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateSwiftAccountParamsWithTimeout(timeout time.Duration) *UpdateSwiftAccountParams {
	var ()
	return &UpdateSwiftAccountParams{

		timeout: timeout,
	}
}

// NewUpdateSwiftAccountParamsWithContext creates a new UpdateSwiftAccountParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateSwiftAccountParamsWithContext(ctx context.Context) *UpdateSwiftAccountParams {
	var ()
	return &UpdateSwiftAccountParams{

		Context: ctx,
	}
}

// NewUpdateSwiftAccountParamsWithHTTPClient creates a new UpdateSwiftAccountParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateSwiftAccountParamsWithHTTPClient(client *http.Client) *UpdateSwiftAccountParams {
	var ()
	return &UpdateSwiftAccountParams{
		HTTPClient: client,
	}
}

/*UpdateSwiftAccountParams contains all the parameters to send to the API endpoint
for the update swift account operation typically these are written to a http.Request
*/
type UpdateSwiftAccountParams struct {

	/*SwiftAccount*/
	SwiftAccount *models.SwiftAccount
	/*SwiftAccountID
	  Modify a Swift account

	*/
	SwiftAccountID string
	/*Zone
	  Access zone which contains Swift account.

	*/
	Zone *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update swift account params
func (o *UpdateSwiftAccountParams) WithTimeout(timeout time.Duration) *UpdateSwiftAccountParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update swift account params
func (o *UpdateSwiftAccountParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update swift account params
func (o *UpdateSwiftAccountParams) WithContext(ctx context.Context) *UpdateSwiftAccountParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update swift account params
func (o *UpdateSwiftAccountParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update swift account params
func (o *UpdateSwiftAccountParams) WithHTTPClient(client *http.Client) *UpdateSwiftAccountParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update swift account params
func (o *UpdateSwiftAccountParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSwiftAccount adds the swiftAccount to the update swift account params
func (o *UpdateSwiftAccountParams) WithSwiftAccount(swiftAccount *models.SwiftAccount) *UpdateSwiftAccountParams {
	o.SetSwiftAccount(swiftAccount)
	return o
}

// SetSwiftAccount adds the swiftAccount to the update swift account params
func (o *UpdateSwiftAccountParams) SetSwiftAccount(swiftAccount *models.SwiftAccount) {
	o.SwiftAccount = swiftAccount
}

// WithSwiftAccountID adds the swiftAccountID to the update swift account params
func (o *UpdateSwiftAccountParams) WithSwiftAccountID(swiftAccountID string) *UpdateSwiftAccountParams {
	o.SetSwiftAccountID(swiftAccountID)
	return o
}

// SetSwiftAccountID adds the swiftAccountId to the update swift account params
func (o *UpdateSwiftAccountParams) SetSwiftAccountID(swiftAccountID string) {
	o.SwiftAccountID = swiftAccountID
}

// WithZone adds the zone to the update swift account params
func (o *UpdateSwiftAccountParams) WithZone(zone *string) *UpdateSwiftAccountParams {
	o.SetZone(zone)
	return o
}

// SetZone adds the zone to the update swift account params
func (o *UpdateSwiftAccountParams) SetZone(zone *string) {
	o.Zone = zone
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateSwiftAccountParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.SwiftAccount != nil {
		if err := r.SetBodyParam(o.SwiftAccount); err != nil {
			return err
		}
	}

	// path param SwiftAccountId
	if err := r.SetPathParam("SwiftAccountId", o.SwiftAccountID); err != nil {
		return err
	}

	if o.Zone != nil {

		// query param zone
		var qrZone string
		if o.Zone != nil {
			qrZone = *o.Zone
		}
		qZone := qrZone
		if qZone != "" {
			if err := r.SetQueryParam("zone", qZone); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
