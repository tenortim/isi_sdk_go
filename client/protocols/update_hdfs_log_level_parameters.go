// Code generated by go-swagger; DO NOT EDIT.

package protocols

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// NewUpdateHdfsLogLevelParams creates a new UpdateHdfsLogLevelParams object
// with the default values initialized.
func NewUpdateHdfsLogLevelParams() *UpdateHdfsLogLevelParams {
	var ()
	return &UpdateHdfsLogLevelParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateHdfsLogLevelParamsWithTimeout creates a new UpdateHdfsLogLevelParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateHdfsLogLevelParamsWithTimeout(timeout time.Duration) *UpdateHdfsLogLevelParams {
	var ()
	return &UpdateHdfsLogLevelParams{

		timeout: timeout,
	}
}

// NewUpdateHdfsLogLevelParamsWithContext creates a new UpdateHdfsLogLevelParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateHdfsLogLevelParamsWithContext(ctx context.Context) *UpdateHdfsLogLevelParams {
	var ()
	return &UpdateHdfsLogLevelParams{

		Context: ctx,
	}
}

// NewUpdateHdfsLogLevelParamsWithHTTPClient creates a new UpdateHdfsLogLevelParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateHdfsLogLevelParamsWithHTTPClient(client *http.Client) *UpdateHdfsLogLevelParams {
	var ()
	return &UpdateHdfsLogLevelParams{
		HTTPClient: client,
	}
}

/*UpdateHdfsLogLevelParams contains all the parameters to send to the API endpoint
for the update hdfs log level operation typically these are written to a http.Request
*/
type UpdateHdfsLogLevelParams struct {

	/*HdfsLogLevel*/
	HdfsLogLevel *models.HdfsLogLevel

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update hdfs log level params
func (o *UpdateHdfsLogLevelParams) WithTimeout(timeout time.Duration) *UpdateHdfsLogLevelParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update hdfs log level params
func (o *UpdateHdfsLogLevelParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update hdfs log level params
func (o *UpdateHdfsLogLevelParams) WithContext(ctx context.Context) *UpdateHdfsLogLevelParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update hdfs log level params
func (o *UpdateHdfsLogLevelParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update hdfs log level params
func (o *UpdateHdfsLogLevelParams) WithHTTPClient(client *http.Client) *UpdateHdfsLogLevelParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update hdfs log level params
func (o *UpdateHdfsLogLevelParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithHdfsLogLevel adds the hdfsLogLevel to the update hdfs log level params
func (o *UpdateHdfsLogLevelParams) WithHdfsLogLevel(hdfsLogLevel *models.HdfsLogLevel) *UpdateHdfsLogLevelParams {
	o.SetHdfsLogLevel(hdfsLogLevel)
	return o
}

// SetHdfsLogLevel adds the hdfsLogLevel to the update hdfs log level params
func (o *UpdateHdfsLogLevelParams) SetHdfsLogLevel(hdfsLogLevel *models.HdfsLogLevel) {
	o.HdfsLogLevel = hdfsLogLevel
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateHdfsLogLevelParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.HdfsLogLevel != nil {
		if err := r.SetBodyParam(o.HdfsLogLevel); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
