// Code generated by go-swagger; DO NOT EDIT.

package protocols

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// GetNfsSettingsExportReader is a Reader for the GetNfsSettingsExport structure.
type GetNfsSettingsExportReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNfsSettingsExportReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetNfsSettingsExportOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetNfsSettingsExportDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetNfsSettingsExportOK creates a GetNfsSettingsExportOK with default headers values
func NewGetNfsSettingsExportOK() *GetNfsSettingsExportOK {
	return &GetNfsSettingsExportOK{}
}

/*GetNfsSettingsExportOK handles this case with default header values.

Retrieve export information.
*/
type GetNfsSettingsExportOK struct {
	Payload *models.NfsSettingsExport
}

func (o *GetNfsSettingsExportOK) Error() string {
	return fmt.Sprintf("[GET /platform/2/protocols/nfs/settings/export][%d] getNfsSettingsExportOK  %+v", 200, o.Payload)
}

func (o *GetNfsSettingsExportOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NfsSettingsExport)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNfsSettingsExportDefault creates a GetNfsSettingsExportDefault with default headers values
func NewGetNfsSettingsExportDefault(code int) *GetNfsSettingsExportDefault {
	return &GetNfsSettingsExportDefault{
		_statusCode: code,
	}
}

/*GetNfsSettingsExportDefault handles this case with default header values.

Unexpected error
*/
type GetNfsSettingsExportDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get nfs settings export default response
func (o *GetNfsSettingsExportDefault) Code() int {
	return o._statusCode
}

func (o *GetNfsSettingsExportDefault) Error() string {
	return fmt.Sprintf("[GET /platform/2/protocols/nfs/settings/export][%d] getNfsSettingsExport default  %+v", o._statusCode, o.Payload)
}

func (o *GetNfsSettingsExportDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
