// Code generated by go-swagger; DO NOT EDIT.

package protocols

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// GetHdfsLogLevelReader is a Reader for the GetHdfsLogLevel structure.
type GetHdfsLogLevelReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHdfsLogLevelReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetHdfsLogLevelOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetHdfsLogLevelDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetHdfsLogLevelOK creates a GetHdfsLogLevelOK with default headers values
func NewGetHdfsLogLevelOK() *GetHdfsLogLevelOK {
	return &GetHdfsLogLevelOK{}
}

/*GetHdfsLogLevelOK handles this case with default header values.

Retrieve the HDFS service log-level.
*/
type GetHdfsLogLevelOK struct {
	Payload *models.HdfsLogLevel
}

func (o *GetHdfsLogLevelOK) Error() string {
	return fmt.Sprintf("[GET /platform/3/protocols/hdfs/log-level][%d] getHdfsLogLevelOK  %+v", 200, o.Payload)
}

func (o *GetHdfsLogLevelOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HdfsLogLevel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHdfsLogLevelDefault creates a GetHdfsLogLevelDefault with default headers values
func NewGetHdfsLogLevelDefault(code int) *GetHdfsLogLevelDefault {
	return &GetHdfsLogLevelDefault{
		_statusCode: code,
	}
}

/*GetHdfsLogLevelDefault handles this case with default header values.

Unexpected error
*/
type GetHdfsLogLevelDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get hdfs log level default response
func (o *GetHdfsLogLevelDefault) Code() int {
	return o._statusCode
}

func (o *GetHdfsLogLevelDefault) Error() string {
	return fmt.Sprintf("[GET /platform/3/protocols/hdfs/log-level][%d] getHdfsLogLevel default  %+v", o._statusCode, o.Payload)
}

func (o *GetHdfsLogLevelDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
