// Code generated by go-swagger; DO NOT EDIT.

package protocols

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// GetSnmpSettingsReader is a Reader for the GetSnmpSettings structure.
type GetSnmpSettingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSnmpSettingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSnmpSettingsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetSnmpSettingsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetSnmpSettingsOK creates a GetSnmpSettingsOK with default headers values
func NewGetSnmpSettingsOK() *GetSnmpSettingsOK {
	return &GetSnmpSettingsOK{}
}

/*GetSnmpSettingsOK handles this case with default header values.

Retrieve the SNMP settings.
*/
type GetSnmpSettingsOK struct {
	Payload *models.SnmpSettings
}

func (o *GetSnmpSettingsOK) Error() string {
	return fmt.Sprintf("[GET /platform/3/protocols/snmp/settings][%d] getSnmpSettingsOK  %+v", 200, o.Payload)
}

func (o *GetSnmpSettingsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SnmpSettings)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSnmpSettingsDefault creates a GetSnmpSettingsDefault with default headers values
func NewGetSnmpSettingsDefault(code int) *GetSnmpSettingsDefault {
	return &GetSnmpSettingsDefault{
		_statusCode: code,
	}
}

/*GetSnmpSettingsDefault handles this case with default header values.

Unexpected error
*/
type GetSnmpSettingsDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get snmp settings default response
func (o *GetSnmpSettingsDefault) Code() int {
	return o._statusCode
}

func (o *GetSnmpSettingsDefault) Error() string {
	return fmt.Sprintf("[GET /platform/3/protocols/snmp/settings][%d] getSnmpSettings default  %+v", o._statusCode, o.Payload)
}

func (o *GetSnmpSettingsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
