// Code generated by go-swagger; DO NOT EDIT.

package protocols

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteSmbOpenfileParams creates a new DeleteSmbOpenfileParams object
// with the default values initialized.
func NewDeleteSmbOpenfileParams() *DeleteSmbOpenfileParams {
	var ()
	return &DeleteSmbOpenfileParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteSmbOpenfileParamsWithTimeout creates a new DeleteSmbOpenfileParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteSmbOpenfileParamsWithTimeout(timeout time.Duration) *DeleteSmbOpenfileParams {
	var ()
	return &DeleteSmbOpenfileParams{

		timeout: timeout,
	}
}

// NewDeleteSmbOpenfileParamsWithContext creates a new DeleteSmbOpenfileParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteSmbOpenfileParamsWithContext(ctx context.Context) *DeleteSmbOpenfileParams {
	var ()
	return &DeleteSmbOpenfileParams{

		Context: ctx,
	}
}

// NewDeleteSmbOpenfileParamsWithHTTPClient creates a new DeleteSmbOpenfileParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteSmbOpenfileParamsWithHTTPClient(client *http.Client) *DeleteSmbOpenfileParams {
	var ()
	return &DeleteSmbOpenfileParams{
		HTTPClient: client,
	}
}

/*DeleteSmbOpenfileParams contains all the parameters to send to the API endpoint
for the delete smb openfile operation typically these are written to a http.Request
*/
type DeleteSmbOpenfileParams struct {

	/*SmbOpenfileID
	  Close the file in the SMB server.

	*/
	SmbOpenfileID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete smb openfile params
func (o *DeleteSmbOpenfileParams) WithTimeout(timeout time.Duration) *DeleteSmbOpenfileParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete smb openfile params
func (o *DeleteSmbOpenfileParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete smb openfile params
func (o *DeleteSmbOpenfileParams) WithContext(ctx context.Context) *DeleteSmbOpenfileParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete smb openfile params
func (o *DeleteSmbOpenfileParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete smb openfile params
func (o *DeleteSmbOpenfileParams) WithHTTPClient(client *http.Client) *DeleteSmbOpenfileParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete smb openfile params
func (o *DeleteSmbOpenfileParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSmbOpenfileID adds the smbOpenfileID to the delete smb openfile params
func (o *DeleteSmbOpenfileParams) WithSmbOpenfileID(smbOpenfileID string) *DeleteSmbOpenfileParams {
	o.SetSmbOpenfileID(smbOpenfileID)
	return o
}

// SetSmbOpenfileID adds the smbOpenfileId to the delete smb openfile params
func (o *DeleteSmbOpenfileParams) SetSmbOpenfileID(smbOpenfileID string) {
	o.SmbOpenfileID = smbOpenfileID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteSmbOpenfileParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param SmbOpenfileId
	if err := r.SetPathParam("SmbOpenfileId", o.SmbOpenfileID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
