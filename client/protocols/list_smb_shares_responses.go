// Code generated by go-swagger; DO NOT EDIT.

package protocols

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// ListSmbSharesReader is a Reader for the ListSmbShares structure.
type ListSmbSharesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListSmbSharesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListSmbSharesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewListSmbSharesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListSmbSharesOK creates a ListSmbSharesOK with default headers values
func NewListSmbSharesOK() *ListSmbSharesOK {
	return &ListSmbSharesOK{}
}

/*ListSmbSharesOK handles this case with default header values.

List all shares.
*/
type ListSmbSharesOK struct {
	Payload *models.SmbSharesExtended
}

func (o *ListSmbSharesOK) Error() string {
	return fmt.Sprintf("[GET /platform/3/protocols/smb/shares][%d] listSmbSharesOK  %+v", 200, o.Payload)
}

func (o *ListSmbSharesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SmbSharesExtended)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSmbSharesDefault creates a ListSmbSharesDefault with default headers values
func NewListSmbSharesDefault(code int) *ListSmbSharesDefault {
	return &ListSmbSharesDefault{
		_statusCode: code,
	}
}

/*ListSmbSharesDefault handles this case with default header values.

Unexpected error
*/
type ListSmbSharesDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the list smb shares default response
func (o *ListSmbSharesDefault) Code() int {
	return o._statusCode
}

func (o *ListSmbSharesDefault) Error() string {
	return fmt.Sprintf("[GET /platform/3/protocols/smb/shares][%d] listSmbShares default  %+v", o._statusCode, o.Payload)
}

func (o *ListSmbSharesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
