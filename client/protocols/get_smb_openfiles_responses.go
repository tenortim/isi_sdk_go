// Code generated by go-swagger; DO NOT EDIT.

package protocols

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// GetSmbOpenfilesReader is a Reader for the GetSmbOpenfiles structure.
type GetSmbOpenfilesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSmbOpenfilesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSmbOpenfilesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetSmbOpenfilesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetSmbOpenfilesOK creates a GetSmbOpenfilesOK with default headers values
func NewGetSmbOpenfilesOK() *GetSmbOpenfilesOK {
	return &GetSmbOpenfilesOK{}
}

/*GetSmbOpenfilesOK handles this case with default header values.

List open files.
*/
type GetSmbOpenfilesOK struct {
	Payload *models.SmbOpenfiles
}

func (o *GetSmbOpenfilesOK) Error() string {
	return fmt.Sprintf("[GET /platform/1/protocols/smb/openfiles][%d] getSmbOpenfilesOK  %+v", 200, o.Payload)
}

func (o *GetSmbOpenfilesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SmbOpenfiles)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSmbOpenfilesDefault creates a GetSmbOpenfilesDefault with default headers values
func NewGetSmbOpenfilesDefault(code int) *GetSmbOpenfilesDefault {
	return &GetSmbOpenfilesDefault{
		_statusCode: code,
	}
}

/*GetSmbOpenfilesDefault handles this case with default header values.

Unexpected error
*/
type GetSmbOpenfilesDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get smb openfiles default response
func (o *GetSmbOpenfilesDefault) Code() int {
	return o._statusCode
}

func (o *GetSmbOpenfilesDefault) Error() string {
	return fmt.Sprintf("[GET /platform/1/protocols/smb/openfiles][%d] getSmbOpenfiles default  %+v", o._statusCode, o.Payload)
}

func (o *GetSmbOpenfilesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
