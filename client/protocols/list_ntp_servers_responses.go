// Code generated by go-swagger; DO NOT EDIT.

package protocols

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// ListNtpServersReader is a Reader for the ListNtpServers structure.
type ListNtpServersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListNtpServersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListNtpServersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewListNtpServersDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListNtpServersOK creates a ListNtpServersOK with default headers values
func NewListNtpServersOK() *ListNtpServersOK {
	return &ListNtpServersOK{}
}

/*ListNtpServersOK handles this case with default header values.

List all NTP servers.
*/
type ListNtpServersOK struct {
	Payload *models.NtpServersExtended
}

func (o *ListNtpServersOK) Error() string {
	return fmt.Sprintf("[GET /platform/3/protocols/ntp/servers][%d] listNtpServersOK  %+v", 200, o.Payload)
}

func (o *ListNtpServersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NtpServersExtended)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListNtpServersDefault creates a ListNtpServersDefault with default headers values
func NewListNtpServersDefault(code int) *ListNtpServersDefault {
	return &ListNtpServersDefault{
		_statusCode: code,
	}
}

/*ListNtpServersDefault handles this case with default header values.

Unexpected error
*/
type ListNtpServersDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the list ntp servers default response
func (o *ListNtpServersDefault) Code() int {
	return o._statusCode
}

func (o *ListNtpServersDefault) Error() string {
	return fmt.Sprintf("[GET /platform/3/protocols/ntp/servers][%d] listNtpServers default  %+v", o._statusCode, o.Payload)
}

func (o *ListNtpServersDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
