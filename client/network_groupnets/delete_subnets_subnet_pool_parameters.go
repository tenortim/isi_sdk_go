// Code generated by go-swagger; DO NOT EDIT.

package network_groupnets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteSubnetsSubnetPoolParams creates a new DeleteSubnetsSubnetPoolParams object
// with the default values initialized.
func NewDeleteSubnetsSubnetPoolParams() *DeleteSubnetsSubnetPoolParams {
	var ()
	return &DeleteSubnetsSubnetPoolParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteSubnetsSubnetPoolParamsWithTimeout creates a new DeleteSubnetsSubnetPoolParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteSubnetsSubnetPoolParamsWithTimeout(timeout time.Duration) *DeleteSubnetsSubnetPoolParams {
	var ()
	return &DeleteSubnetsSubnetPoolParams{

		timeout: timeout,
	}
}

// NewDeleteSubnetsSubnetPoolParamsWithContext creates a new DeleteSubnetsSubnetPoolParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteSubnetsSubnetPoolParamsWithContext(ctx context.Context) *DeleteSubnetsSubnetPoolParams {
	var ()
	return &DeleteSubnetsSubnetPoolParams{

		Context: ctx,
	}
}

// NewDeleteSubnetsSubnetPoolParamsWithHTTPClient creates a new DeleteSubnetsSubnetPoolParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteSubnetsSubnetPoolParamsWithHTTPClient(client *http.Client) *DeleteSubnetsSubnetPoolParams {
	var ()
	return &DeleteSubnetsSubnetPoolParams{
		HTTPClient: client,
	}
}

/*DeleteSubnetsSubnetPoolParams contains all the parameters to send to the API endpoint
for the delete subnets subnet pool operation typically these are written to a http.Request
*/
type DeleteSubnetsSubnetPoolParams struct {

	/*Groupnet*/
	Groupnet string
	/*Subnet*/
	Subnet string
	/*SubnetsSubnetPoolID
	  Delete a network pool.

	*/
	SubnetsSubnetPoolID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete subnets subnet pool params
func (o *DeleteSubnetsSubnetPoolParams) WithTimeout(timeout time.Duration) *DeleteSubnetsSubnetPoolParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete subnets subnet pool params
func (o *DeleteSubnetsSubnetPoolParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete subnets subnet pool params
func (o *DeleteSubnetsSubnetPoolParams) WithContext(ctx context.Context) *DeleteSubnetsSubnetPoolParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete subnets subnet pool params
func (o *DeleteSubnetsSubnetPoolParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete subnets subnet pool params
func (o *DeleteSubnetsSubnetPoolParams) WithHTTPClient(client *http.Client) *DeleteSubnetsSubnetPoolParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete subnets subnet pool params
func (o *DeleteSubnetsSubnetPoolParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithGroupnet adds the groupnet to the delete subnets subnet pool params
func (o *DeleteSubnetsSubnetPoolParams) WithGroupnet(groupnet string) *DeleteSubnetsSubnetPoolParams {
	o.SetGroupnet(groupnet)
	return o
}

// SetGroupnet adds the groupnet to the delete subnets subnet pool params
func (o *DeleteSubnetsSubnetPoolParams) SetGroupnet(groupnet string) {
	o.Groupnet = groupnet
}

// WithSubnet adds the subnet to the delete subnets subnet pool params
func (o *DeleteSubnetsSubnetPoolParams) WithSubnet(subnet string) *DeleteSubnetsSubnetPoolParams {
	o.SetSubnet(subnet)
	return o
}

// SetSubnet adds the subnet to the delete subnets subnet pool params
func (o *DeleteSubnetsSubnetPoolParams) SetSubnet(subnet string) {
	o.Subnet = subnet
}

// WithSubnetsSubnetPoolID adds the subnetsSubnetPoolID to the delete subnets subnet pool params
func (o *DeleteSubnetsSubnetPoolParams) WithSubnetsSubnetPoolID(subnetsSubnetPoolID string) *DeleteSubnetsSubnetPoolParams {
	o.SetSubnetsSubnetPoolID(subnetsSubnetPoolID)
	return o
}

// SetSubnetsSubnetPoolID adds the subnetsSubnetPoolId to the delete subnets subnet pool params
func (o *DeleteSubnetsSubnetPoolParams) SetSubnetsSubnetPoolID(subnetsSubnetPoolID string) {
	o.SubnetsSubnetPoolID = subnetsSubnetPoolID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteSubnetsSubnetPoolParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param Groupnet
	if err := r.SetPathParam("Groupnet", o.Groupnet); err != nil {
		return err
	}

	// path param Subnet
	if err := r.SetPathParam("Subnet", o.Subnet); err != nil {
		return err
	}

	// path param SubnetsSubnetPoolId
	if err := r.SetPathParam("SubnetsSubnetPoolId", o.SubnetsSubnetPoolID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
