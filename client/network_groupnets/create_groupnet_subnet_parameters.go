// Code generated by go-swagger; DO NOT EDIT.

package network_groupnets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// NewCreateGroupnetSubnetParams creates a new CreateGroupnetSubnetParams object
// with the default values initialized.
func NewCreateGroupnetSubnetParams() *CreateGroupnetSubnetParams {
	var ()
	return &CreateGroupnetSubnetParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateGroupnetSubnetParamsWithTimeout creates a new CreateGroupnetSubnetParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateGroupnetSubnetParamsWithTimeout(timeout time.Duration) *CreateGroupnetSubnetParams {
	var ()
	return &CreateGroupnetSubnetParams{

		timeout: timeout,
	}
}

// NewCreateGroupnetSubnetParamsWithContext creates a new CreateGroupnetSubnetParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateGroupnetSubnetParamsWithContext(ctx context.Context) *CreateGroupnetSubnetParams {
	var ()
	return &CreateGroupnetSubnetParams{

		Context: ctx,
	}
}

// NewCreateGroupnetSubnetParamsWithHTTPClient creates a new CreateGroupnetSubnetParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateGroupnetSubnetParamsWithHTTPClient(client *http.Client) *CreateGroupnetSubnetParams {
	var ()
	return &CreateGroupnetSubnetParams{
		HTTPClient: client,
	}
}

/*CreateGroupnetSubnetParams contains all the parameters to send to the API endpoint
for the create groupnet subnet operation typically these are written to a http.Request
*/
type CreateGroupnetSubnetParams struct {

	/*Groupnet*/
	Groupnet string
	/*GroupnetSubnet*/
	GroupnetSubnet *models.GroupnetSubnetCreateParams

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create groupnet subnet params
func (o *CreateGroupnetSubnetParams) WithTimeout(timeout time.Duration) *CreateGroupnetSubnetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create groupnet subnet params
func (o *CreateGroupnetSubnetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create groupnet subnet params
func (o *CreateGroupnetSubnetParams) WithContext(ctx context.Context) *CreateGroupnetSubnetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create groupnet subnet params
func (o *CreateGroupnetSubnetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create groupnet subnet params
func (o *CreateGroupnetSubnetParams) WithHTTPClient(client *http.Client) *CreateGroupnetSubnetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create groupnet subnet params
func (o *CreateGroupnetSubnetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithGroupnet adds the groupnet to the create groupnet subnet params
func (o *CreateGroupnetSubnetParams) WithGroupnet(groupnet string) *CreateGroupnetSubnetParams {
	o.SetGroupnet(groupnet)
	return o
}

// SetGroupnet adds the groupnet to the create groupnet subnet params
func (o *CreateGroupnetSubnetParams) SetGroupnet(groupnet string) {
	o.Groupnet = groupnet
}

// WithGroupnetSubnet adds the groupnetSubnet to the create groupnet subnet params
func (o *CreateGroupnetSubnetParams) WithGroupnetSubnet(groupnetSubnet *models.GroupnetSubnetCreateParams) *CreateGroupnetSubnetParams {
	o.SetGroupnetSubnet(groupnetSubnet)
	return o
}

// SetGroupnetSubnet adds the groupnetSubnet to the create groupnet subnet params
func (o *CreateGroupnetSubnetParams) SetGroupnetSubnet(groupnetSubnet *models.GroupnetSubnetCreateParams) {
	o.GroupnetSubnet = groupnetSubnet
}

// WriteToRequest writes these params to a swagger request
func (o *CreateGroupnetSubnetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param Groupnet
	if err := r.SetPathParam("Groupnet", o.Groupnet); err != nil {
		return err
	}

	if o.GroupnetSubnet != nil {
		if err := r.SetBodyParam(o.GroupnetSubnet); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
