// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// ListProvidersFileReader is a Reader for the ListProvidersFile structure.
type ListProvidersFileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListProvidersFileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListProvidersFileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewListProvidersFileDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListProvidersFileOK creates a ListProvidersFileOK with default headers values
func NewListProvidersFileOK() *ListProvidersFileOK {
	return &ListProvidersFileOK{}
}

/*ListProvidersFileOK handles this case with default header values.

List all file providers.
*/
type ListProvidersFileOK struct {
	Payload *models.ProvidersFile
}

func (o *ListProvidersFileOK) Error() string {
	return fmt.Sprintf("[GET /platform/1/auth/providers/file][%d] listProvidersFileOK  %+v", 200, o.Payload)
}

func (o *ListProvidersFileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProvidersFile)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProvidersFileDefault creates a ListProvidersFileDefault with default headers values
func NewListProvidersFileDefault(code int) *ListProvidersFileDefault {
	return &ListProvidersFileDefault{
		_statusCode: code,
	}
}

/*ListProvidersFileDefault handles this case with default header values.

Unexpected error
*/
type ListProvidersFileDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the list providers file default response
func (o *ListProvidersFileDefault) Code() int {
	return o._statusCode
}

func (o *ListProvidersFileDefault) Error() string {
	return fmt.Sprintf("[GET /platform/1/auth/providers/file][%d] listProvidersFile default  %+v", o._statusCode, o.Payload)
}

func (o *ListProvidersFileDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
