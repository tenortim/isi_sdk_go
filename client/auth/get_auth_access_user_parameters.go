// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetAuthAccessUserParams creates a new GetAuthAccessUserParams object
// with the default values initialized.
func NewGetAuthAccessUserParams() *GetAuthAccessUserParams {
	var ()
	return &GetAuthAccessUserParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetAuthAccessUserParamsWithTimeout creates a new GetAuthAccessUserParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetAuthAccessUserParamsWithTimeout(timeout time.Duration) *GetAuthAccessUserParams {
	var ()
	return &GetAuthAccessUserParams{

		timeout: timeout,
	}
}

// NewGetAuthAccessUserParamsWithContext creates a new GetAuthAccessUserParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetAuthAccessUserParamsWithContext(ctx context.Context) *GetAuthAccessUserParams {
	var ()
	return &GetAuthAccessUserParams{

		Context: ctx,
	}
}

// NewGetAuthAccessUserParamsWithHTTPClient creates a new GetAuthAccessUserParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetAuthAccessUserParamsWithHTTPClient(client *http.Client) *GetAuthAccessUserParams {
	var ()
	return &GetAuthAccessUserParams{
		HTTPClient: client,
	}
}

/*GetAuthAccessUserParams contains all the parameters to send to the API endpoint
for the get auth access user operation typically these are written to a http.Request
*/
type GetAuthAccessUserParams struct {

	/*AuthAccessUser
	  Determine user's access rights to a file

	*/
	AuthAccessUser string
	/*Numeric
	  Show the user's numeric identifier.

	*/
	Numeric *bool
	/*Path
	  Path to the file. Must be within /ifs.

	*/
	Path *string
	/*Zone
	  Access zone the user is in.

	*/
	Zone *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get auth access user params
func (o *GetAuthAccessUserParams) WithTimeout(timeout time.Duration) *GetAuthAccessUserParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get auth access user params
func (o *GetAuthAccessUserParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get auth access user params
func (o *GetAuthAccessUserParams) WithContext(ctx context.Context) *GetAuthAccessUserParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get auth access user params
func (o *GetAuthAccessUserParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get auth access user params
func (o *GetAuthAccessUserParams) WithHTTPClient(client *http.Client) *GetAuthAccessUserParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get auth access user params
func (o *GetAuthAccessUserParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthAccessUser adds the authAccessUser to the get auth access user params
func (o *GetAuthAccessUserParams) WithAuthAccessUser(authAccessUser string) *GetAuthAccessUserParams {
	o.SetAuthAccessUser(authAccessUser)
	return o
}

// SetAuthAccessUser adds the authAccessUser to the get auth access user params
func (o *GetAuthAccessUserParams) SetAuthAccessUser(authAccessUser string) {
	o.AuthAccessUser = authAccessUser
}

// WithNumeric adds the numeric to the get auth access user params
func (o *GetAuthAccessUserParams) WithNumeric(numeric *bool) *GetAuthAccessUserParams {
	o.SetNumeric(numeric)
	return o
}

// SetNumeric adds the numeric to the get auth access user params
func (o *GetAuthAccessUserParams) SetNumeric(numeric *bool) {
	o.Numeric = numeric
}

// WithPath adds the path to the get auth access user params
func (o *GetAuthAccessUserParams) WithPath(path *string) *GetAuthAccessUserParams {
	o.SetPath(path)
	return o
}

// SetPath adds the path to the get auth access user params
func (o *GetAuthAccessUserParams) SetPath(path *string) {
	o.Path = path
}

// WithZone adds the zone to the get auth access user params
func (o *GetAuthAccessUserParams) WithZone(zone *string) *GetAuthAccessUserParams {
	o.SetZone(zone)
	return o
}

// SetZone adds the zone to the get auth access user params
func (o *GetAuthAccessUserParams) SetZone(zone *string) {
	o.Zone = zone
}

// WriteToRequest writes these params to a swagger request
func (o *GetAuthAccessUserParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param AuthAccessUser
	if err := r.SetPathParam("AuthAccessUser", o.AuthAccessUser); err != nil {
		return err
	}

	if o.Numeric != nil {

		// query param numeric
		var qrNumeric bool
		if o.Numeric != nil {
			qrNumeric = *o.Numeric
		}
		qNumeric := swag.FormatBool(qrNumeric)
		if qNumeric != "" {
			if err := r.SetQueryParam("numeric", qNumeric); err != nil {
				return err
			}
		}

	}

	if o.Path != nil {

		// query param path
		var qrPath string
		if o.Path != nil {
			qrPath = *o.Path
		}
		qPath := qrPath
		if qPath != "" {
			if err := r.SetQueryParam("path", qPath); err != nil {
				return err
			}
		}

	}

	if o.Zone != nil {

		// query param zone
		var qrZone string
		if o.Zone != nil {
			qrZone = *o.Zone
		}
		qZone := qrZone
		if qZone != "" {
			if err := r.SetQueryParam("zone", qZone); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
