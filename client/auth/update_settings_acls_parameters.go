// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// NewUpdateSettingsAclsParams creates a new UpdateSettingsAclsParams object
// with the default values initialized.
func NewUpdateSettingsAclsParams() *UpdateSettingsAclsParams {
	var ()
	return &UpdateSettingsAclsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateSettingsAclsParamsWithTimeout creates a new UpdateSettingsAclsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateSettingsAclsParamsWithTimeout(timeout time.Duration) *UpdateSettingsAclsParams {
	var ()
	return &UpdateSettingsAclsParams{

		timeout: timeout,
	}
}

// NewUpdateSettingsAclsParamsWithContext creates a new UpdateSettingsAclsParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateSettingsAclsParamsWithContext(ctx context.Context) *UpdateSettingsAclsParams {
	var ()
	return &UpdateSettingsAclsParams{

		Context: ctx,
	}
}

// NewUpdateSettingsAclsParamsWithHTTPClient creates a new UpdateSettingsAclsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateSettingsAclsParamsWithHTTPClient(client *http.Client) *UpdateSettingsAclsParams {
	var ()
	return &UpdateSettingsAclsParams{
		HTTPClient: client,
	}
}

/*UpdateSettingsAclsParams contains all the parameters to send to the API endpoint
for the update settings acls operation typically these are written to a http.Request
*/
type UpdateSettingsAclsParams struct {

	/*SettingsAcls*/
	SettingsAcls *models.SettingsAclsExtended

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update settings acls params
func (o *UpdateSettingsAclsParams) WithTimeout(timeout time.Duration) *UpdateSettingsAclsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update settings acls params
func (o *UpdateSettingsAclsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update settings acls params
func (o *UpdateSettingsAclsParams) WithContext(ctx context.Context) *UpdateSettingsAclsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update settings acls params
func (o *UpdateSettingsAclsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update settings acls params
func (o *UpdateSettingsAclsParams) WithHTTPClient(client *http.Client) *UpdateSettingsAclsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update settings acls params
func (o *UpdateSettingsAclsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSettingsAcls adds the settingsAcls to the update settings acls params
func (o *UpdateSettingsAclsParams) WithSettingsAcls(settingsAcls *models.SettingsAclsExtended) *UpdateSettingsAclsParams {
	o.SetSettingsAcls(settingsAcls)
	return o
}

// SetSettingsAcls adds the settingsAcls to the update settings acls params
func (o *UpdateSettingsAclsParams) SetSettingsAcls(settingsAcls *models.SettingsAclsExtended) {
	o.SettingsAcls = settingsAcls
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateSettingsAclsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.SettingsAcls != nil {
		if err := r.SetBodyParam(o.SettingsAcls); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
