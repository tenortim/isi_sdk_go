// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetMappingDumpParams creates a new GetMappingDumpParams object
// with the default values initialized.
func NewGetMappingDumpParams() *GetMappingDumpParams {
	var ()
	return &GetMappingDumpParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetMappingDumpParamsWithTimeout creates a new GetMappingDumpParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetMappingDumpParamsWithTimeout(timeout time.Duration) *GetMappingDumpParams {
	var ()
	return &GetMappingDumpParams{

		timeout: timeout,
	}
}

// NewGetMappingDumpParamsWithContext creates a new GetMappingDumpParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetMappingDumpParamsWithContext(ctx context.Context) *GetMappingDumpParams {
	var ()
	return &GetMappingDumpParams{

		Context: ctx,
	}
}

// NewGetMappingDumpParamsWithHTTPClient creates a new GetMappingDumpParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetMappingDumpParamsWithHTTPClient(client *http.Client) *GetMappingDumpParams {
	var ()
	return &GetMappingDumpParams{
		HTTPClient: client,
	}
}

/*GetMappingDumpParams contains all the parameters to send to the API endpoint
for the get mapping dump operation typically these are written to a http.Request
*/
type GetMappingDumpParams struct {

	/*Nocreate
	  Idmap should attempt to create missing identity mappings.

	*/
	Nocreate *bool
	/*Zone
	  Optional zone.

	*/
	Zone *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get mapping dump params
func (o *GetMappingDumpParams) WithTimeout(timeout time.Duration) *GetMappingDumpParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get mapping dump params
func (o *GetMappingDumpParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get mapping dump params
func (o *GetMappingDumpParams) WithContext(ctx context.Context) *GetMappingDumpParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get mapping dump params
func (o *GetMappingDumpParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get mapping dump params
func (o *GetMappingDumpParams) WithHTTPClient(client *http.Client) *GetMappingDumpParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get mapping dump params
func (o *GetMappingDumpParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithNocreate adds the nocreate to the get mapping dump params
func (o *GetMappingDumpParams) WithNocreate(nocreate *bool) *GetMappingDumpParams {
	o.SetNocreate(nocreate)
	return o
}

// SetNocreate adds the nocreate to the get mapping dump params
func (o *GetMappingDumpParams) SetNocreate(nocreate *bool) {
	o.Nocreate = nocreate
}

// WithZone adds the zone to the get mapping dump params
func (o *GetMappingDumpParams) WithZone(zone *string) *GetMappingDumpParams {
	o.SetZone(zone)
	return o
}

// SetZone adds the zone to the get mapping dump params
func (o *GetMappingDumpParams) SetZone(zone *string) {
	o.Zone = zone
}

// WriteToRequest writes these params to a swagger request
func (o *GetMappingDumpParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Nocreate != nil {

		// query param nocreate
		var qrNocreate bool
		if o.Nocreate != nil {
			qrNocreate = *o.Nocreate
		}
		qNocreate := swag.FormatBool(qrNocreate)
		if qNocreate != "" {
			if err := r.SetQueryParam("nocreate", qNocreate); err != nil {
				return err
			}
		}

	}

	if o.Zone != nil {

		// query param zone
		var qrZone string
		if o.Zone != nil {
			qrZone = *o.Zone
		}
		qZone := qrZone
		if qZone != "" {
			if err := r.SetQueryParam("zone", qZone); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
