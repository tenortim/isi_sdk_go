// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetSettingsAclsParams creates a new GetSettingsAclsParams object
// with the default values initialized.
func NewGetSettingsAclsParams() *GetSettingsAclsParams {
	var ()
	return &GetSettingsAclsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetSettingsAclsParamsWithTimeout creates a new GetSettingsAclsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetSettingsAclsParamsWithTimeout(timeout time.Duration) *GetSettingsAclsParams {
	var ()
	return &GetSettingsAclsParams{

		timeout: timeout,
	}
}

// NewGetSettingsAclsParamsWithContext creates a new GetSettingsAclsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetSettingsAclsParamsWithContext(ctx context.Context) *GetSettingsAclsParams {
	var ()
	return &GetSettingsAclsParams{

		Context: ctx,
	}
}

// NewGetSettingsAclsParamsWithHTTPClient creates a new GetSettingsAclsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetSettingsAclsParamsWithHTTPClient(client *http.Client) *GetSettingsAclsParams {
	var ()
	return &GetSettingsAclsParams{
		HTTPClient: client,
	}
}

/*GetSettingsAclsParams contains all the parameters to send to the API endpoint
for the get settings acls operation typically these are written to a http.Request
*/
type GetSettingsAclsParams struct {

	/*Preset
	  If specified the preset configuration values for all applicable ACL policies are returned.

	*/
	Preset *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get settings acls params
func (o *GetSettingsAclsParams) WithTimeout(timeout time.Duration) *GetSettingsAclsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get settings acls params
func (o *GetSettingsAclsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get settings acls params
func (o *GetSettingsAclsParams) WithContext(ctx context.Context) *GetSettingsAclsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get settings acls params
func (o *GetSettingsAclsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get settings acls params
func (o *GetSettingsAclsParams) WithHTTPClient(client *http.Client) *GetSettingsAclsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get settings acls params
func (o *GetSettingsAclsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPreset adds the preset to the get settings acls params
func (o *GetSettingsAclsParams) WithPreset(preset *string) *GetSettingsAclsParams {
	o.SetPreset(preset)
	return o
}

// SetPreset adds the preset to the get settings acls params
func (o *GetSettingsAclsParams) SetPreset(preset *string) {
	o.Preset = preset
}

// WriteToRequest writes these params to a swagger request
func (o *GetSettingsAclsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Preset != nil {

		// query param preset
		var qrPreset string
		if o.Preset != nil {
			qrPreset = *o.Preset
		}
		qPreset := qrPreset
		if qPreset != "" {
			if err := r.SetQueryParam("preset", qPreset); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
