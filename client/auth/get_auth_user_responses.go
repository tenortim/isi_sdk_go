// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// GetAuthUserReader is a Reader for the GetAuthUser structure.
type GetAuthUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAuthUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetAuthUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetAuthUserDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetAuthUserOK creates a GetAuthUserOK with default headers values
func NewGetAuthUserOK() *GetAuthUserOK {
	return &GetAuthUserOK{}
}

/*GetAuthUserOK handles this case with default header values.

Retrieve the user information.
*/
type GetAuthUserOK struct {
	Payload *models.AuthUsers
}

func (o *GetAuthUserOK) Error() string {
	return fmt.Sprintf("[GET /platform/1/auth/users/{AuthUserId}][%d] getAuthUserOK  %+v", 200, o.Payload)
}

func (o *GetAuthUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthUsers)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthUserDefault creates a GetAuthUserDefault with default headers values
func NewGetAuthUserDefault(code int) *GetAuthUserDefault {
	return &GetAuthUserDefault{
		_statusCode: code,
	}
}

/*GetAuthUserDefault handles this case with default header values.

Unexpected error
*/
type GetAuthUserDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get auth user default response
func (o *GetAuthUserDefault) Code() int {
	return o._statusCode
}

func (o *GetAuthUserDefault) Error() string {
	return fmt.Sprintf("[GET /platform/1/auth/users/{AuthUserId}][%d] getAuthUser default  %+v", o._statusCode, o.Payload)
}

func (o *GetAuthUserDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
