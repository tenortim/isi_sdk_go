// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// NewUpdateMappingUsersRulesParams creates a new UpdateMappingUsersRulesParams object
// with the default values initialized.
func NewUpdateMappingUsersRulesParams() *UpdateMappingUsersRulesParams {
	var ()
	return &UpdateMappingUsersRulesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateMappingUsersRulesParamsWithTimeout creates a new UpdateMappingUsersRulesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateMappingUsersRulesParamsWithTimeout(timeout time.Duration) *UpdateMappingUsersRulesParams {
	var ()
	return &UpdateMappingUsersRulesParams{

		timeout: timeout,
	}
}

// NewUpdateMappingUsersRulesParamsWithContext creates a new UpdateMappingUsersRulesParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateMappingUsersRulesParamsWithContext(ctx context.Context) *UpdateMappingUsersRulesParams {
	var ()
	return &UpdateMappingUsersRulesParams{

		Context: ctx,
	}
}

// NewUpdateMappingUsersRulesParamsWithHTTPClient creates a new UpdateMappingUsersRulesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateMappingUsersRulesParamsWithHTTPClient(client *http.Client) *UpdateMappingUsersRulesParams {
	var ()
	return &UpdateMappingUsersRulesParams{
		HTTPClient: client,
	}
}

/*UpdateMappingUsersRulesParams contains all the parameters to send to the API endpoint
for the update mapping users rules operation typically these are written to a http.Request
*/
type UpdateMappingUsersRulesParams struct {

	/*MappingUsersRules*/
	MappingUsersRules *models.MappingUsersRulesExtended
	/*Zone
	  The zone to which the user mapping applies.

	*/
	Zone *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update mapping users rules params
func (o *UpdateMappingUsersRulesParams) WithTimeout(timeout time.Duration) *UpdateMappingUsersRulesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update mapping users rules params
func (o *UpdateMappingUsersRulesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update mapping users rules params
func (o *UpdateMappingUsersRulesParams) WithContext(ctx context.Context) *UpdateMappingUsersRulesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update mapping users rules params
func (o *UpdateMappingUsersRulesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update mapping users rules params
func (o *UpdateMappingUsersRulesParams) WithHTTPClient(client *http.Client) *UpdateMappingUsersRulesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update mapping users rules params
func (o *UpdateMappingUsersRulesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithMappingUsersRules adds the mappingUsersRules to the update mapping users rules params
func (o *UpdateMappingUsersRulesParams) WithMappingUsersRules(mappingUsersRules *models.MappingUsersRulesExtended) *UpdateMappingUsersRulesParams {
	o.SetMappingUsersRules(mappingUsersRules)
	return o
}

// SetMappingUsersRules adds the mappingUsersRules to the update mapping users rules params
func (o *UpdateMappingUsersRulesParams) SetMappingUsersRules(mappingUsersRules *models.MappingUsersRulesExtended) {
	o.MappingUsersRules = mappingUsersRules
}

// WithZone adds the zone to the update mapping users rules params
func (o *UpdateMappingUsersRulesParams) WithZone(zone *string) *UpdateMappingUsersRulesParams {
	o.SetZone(zone)
	return o
}

// SetZone adds the zone to the update mapping users rules params
func (o *UpdateMappingUsersRulesParams) SetZone(zone *string) {
	o.Zone = zone
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateMappingUsersRulesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.MappingUsersRules != nil {
		if err := r.SetBodyParam(o.MappingUsersRules); err != nil {
			return err
		}
	}

	if o.Zone != nil {

		// query param zone
		var qrZone string
		if o.Zone != nil {
			qrZone = *o.Zone
		}
		qZone := qrZone
		if qZone != "" {
			if err := r.SetQueryParam("zone", qZone); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
