// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// UpdateAuthLogLevelReader is a Reader for the UpdateAuthLogLevel structure.
type UpdateAuthLogLevelReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateAuthLogLevelReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewUpdateAuthLogLevelNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewUpdateAuthLogLevelDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateAuthLogLevelNoContent creates a UpdateAuthLogLevelNoContent with default headers values
func NewUpdateAuthLogLevelNoContent() *UpdateAuthLogLevelNoContent {
	return &UpdateAuthLogLevelNoContent{}
}

/*UpdateAuthLogLevelNoContent handles this case with default header values.

Success.
*/
type UpdateAuthLogLevelNoContent struct {
}

func (o *UpdateAuthLogLevelNoContent) Error() string {
	return fmt.Sprintf("[PUT /platform/3/auth/log-level][%d] updateAuthLogLevelNoContent ", 204)
}

func (o *UpdateAuthLogLevelNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateAuthLogLevelDefault creates a UpdateAuthLogLevelDefault with default headers values
func NewUpdateAuthLogLevelDefault(code int) *UpdateAuthLogLevelDefault {
	return &UpdateAuthLogLevelDefault{
		_statusCode: code,
	}
}

/*UpdateAuthLogLevelDefault handles this case with default header values.

Unexpected error
*/
type UpdateAuthLogLevelDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the update auth log level default response
func (o *UpdateAuthLogLevelDefault) Code() int {
	return o._statusCode
}

func (o *UpdateAuthLogLevelDefault) Error() string {
	return fmt.Sprintf("[PUT /platform/3/auth/log-level][%d] updateAuthLogLevel default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateAuthLogLevelDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
