// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteMappingIdentitiesParams creates a new DeleteMappingIdentitiesParams object
// with the default values initialized.
func NewDeleteMappingIdentitiesParams() *DeleteMappingIdentitiesParams {
	var ()
	return &DeleteMappingIdentitiesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteMappingIdentitiesParamsWithTimeout creates a new DeleteMappingIdentitiesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteMappingIdentitiesParamsWithTimeout(timeout time.Duration) *DeleteMappingIdentitiesParams {
	var ()
	return &DeleteMappingIdentitiesParams{

		timeout: timeout,
	}
}

// NewDeleteMappingIdentitiesParamsWithContext creates a new DeleteMappingIdentitiesParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteMappingIdentitiesParamsWithContext(ctx context.Context) *DeleteMappingIdentitiesParams {
	var ()
	return &DeleteMappingIdentitiesParams{

		Context: ctx,
	}
}

// NewDeleteMappingIdentitiesParamsWithHTTPClient creates a new DeleteMappingIdentitiesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteMappingIdentitiesParamsWithHTTPClient(client *http.Client) *DeleteMappingIdentitiesParams {
	var ()
	return &DeleteMappingIdentitiesParams{
		HTTPClient: client,
	}
}

/*DeleteMappingIdentitiesParams contains all the parameters to send to the API endpoint
for the delete mapping identities operation typically these are written to a http.Request
*/
type DeleteMappingIdentitiesParams struct {

	/*Filter
	  Filter to apply when deleting identity mappings.

	*/
	Filter *string
	/*Remove
	  Delete mapping instead of flush mapping cache.

	*/
	Remove *bool
	/*Zone
	  Optional zone.

	*/
	Zone *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete mapping identities params
func (o *DeleteMappingIdentitiesParams) WithTimeout(timeout time.Duration) *DeleteMappingIdentitiesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete mapping identities params
func (o *DeleteMappingIdentitiesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete mapping identities params
func (o *DeleteMappingIdentitiesParams) WithContext(ctx context.Context) *DeleteMappingIdentitiesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete mapping identities params
func (o *DeleteMappingIdentitiesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete mapping identities params
func (o *DeleteMappingIdentitiesParams) WithHTTPClient(client *http.Client) *DeleteMappingIdentitiesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete mapping identities params
func (o *DeleteMappingIdentitiesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFilter adds the filter to the delete mapping identities params
func (o *DeleteMappingIdentitiesParams) WithFilter(filter *string) *DeleteMappingIdentitiesParams {
	o.SetFilter(filter)
	return o
}

// SetFilter adds the filter to the delete mapping identities params
func (o *DeleteMappingIdentitiesParams) SetFilter(filter *string) {
	o.Filter = filter
}

// WithRemove adds the remove to the delete mapping identities params
func (o *DeleteMappingIdentitiesParams) WithRemove(remove *bool) *DeleteMappingIdentitiesParams {
	o.SetRemove(remove)
	return o
}

// SetRemove adds the remove to the delete mapping identities params
func (o *DeleteMappingIdentitiesParams) SetRemove(remove *bool) {
	o.Remove = remove
}

// WithZone adds the zone to the delete mapping identities params
func (o *DeleteMappingIdentitiesParams) WithZone(zone *string) *DeleteMappingIdentitiesParams {
	o.SetZone(zone)
	return o
}

// SetZone adds the zone to the delete mapping identities params
func (o *DeleteMappingIdentitiesParams) SetZone(zone *string) {
	o.Zone = zone
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteMappingIdentitiesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Filter != nil {

		// query param filter
		var qrFilter string
		if o.Filter != nil {
			qrFilter = *o.Filter
		}
		qFilter := qrFilter
		if qFilter != "" {
			if err := r.SetQueryParam("filter", qFilter); err != nil {
				return err
			}
		}

	}

	if o.Remove != nil {

		// query param remove
		var qrRemove bool
		if o.Remove != nil {
			qrRemove = *o.Remove
		}
		qRemove := swag.FormatBool(qrRemove)
		if qRemove != "" {
			if err := r.SetQueryParam("remove", qRemove); err != nil {
				return err
			}
		}

	}

	if o.Zone != nil {

		// query param zone
		var qrZone string
		if o.Zone != nil {
			qrZone = *o.Zone
		}
		qZone := qrZone
		if qZone != "" {
			if err := r.SetQueryParam("zone", qZone); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
