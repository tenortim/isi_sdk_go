// Code generated by go-swagger; DO NOT EDIT.

package namespace

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetFileMetadataParams creates a new GetFileMetadataParams object
// with the default values initialized.
func NewGetFileMetadataParams() *GetFileMetadataParams {
	var ()
	return &GetFileMetadataParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetFileMetadataParamsWithTimeout creates a new GetFileMetadataParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetFileMetadataParamsWithTimeout(timeout time.Duration) *GetFileMetadataParams {
	var ()
	return &GetFileMetadataParams{

		timeout: timeout,
	}
}

// NewGetFileMetadataParamsWithContext creates a new GetFileMetadataParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetFileMetadataParamsWithContext(ctx context.Context) *GetFileMetadataParams {
	var ()
	return &GetFileMetadataParams{

		Context: ctx,
	}
}

// NewGetFileMetadataParamsWithHTTPClient creates a new GetFileMetadataParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetFileMetadataParamsWithHTTPClient(client *http.Client) *GetFileMetadataParams {
	var ()
	return &GetFileMetadataParams{
		HTTPClient: client,
	}
}

/*GetFileMetadataParams contains all the parameters to send to the API endpoint
for the get file metadata operation typically these are written to a http.Request
*/
type GetFileMetadataParams struct {

	/*FileMetadataPath
	  File path relative to /.

	*/
	FileMetadataPath string
	/*Metadata
	  Show file metadata.

	*/
	Metadata bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get file metadata params
func (o *GetFileMetadataParams) WithTimeout(timeout time.Duration) *GetFileMetadataParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get file metadata params
func (o *GetFileMetadataParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get file metadata params
func (o *GetFileMetadataParams) WithContext(ctx context.Context) *GetFileMetadataParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get file metadata params
func (o *GetFileMetadataParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get file metadata params
func (o *GetFileMetadataParams) WithHTTPClient(client *http.Client) *GetFileMetadataParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get file metadata params
func (o *GetFileMetadataParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFileMetadataPath adds the fileMetadataPath to the get file metadata params
func (o *GetFileMetadataParams) WithFileMetadataPath(fileMetadataPath string) *GetFileMetadataParams {
	o.SetFileMetadataPath(fileMetadataPath)
	return o
}

// SetFileMetadataPath adds the fileMetadataPath to the get file metadata params
func (o *GetFileMetadataParams) SetFileMetadataPath(fileMetadataPath string) {
	o.FileMetadataPath = fileMetadataPath
}

// WithMetadata adds the metadata to the get file metadata params
func (o *GetFileMetadataParams) WithMetadata(metadata bool) *GetFileMetadataParams {
	o.SetMetadata(metadata)
	return o
}

// SetMetadata adds the metadata to the get file metadata params
func (o *GetFileMetadataParams) SetMetadata(metadata bool) {
	o.Metadata = metadata
}

// WriteToRequest writes these params to a swagger request
func (o *GetFileMetadataParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param FileMetadataPath
	if err := r.SetPathParam("FileMetadataPath", o.FileMetadataPath); err != nil {
		return err
	}

	// query param metadata
	qrMetadata := o.Metadata
	qMetadata := swag.FormatBool(qrMetadata)
	if qMetadata != "" {
		if err := r.SetQueryParam("metadata", qMetadata); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
