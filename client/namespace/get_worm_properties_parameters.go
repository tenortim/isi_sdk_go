// Code generated by go-swagger; DO NOT EDIT.

package namespace

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetWormPropertiesParams creates a new GetWormPropertiesParams object
// with the default values initialized.
func NewGetWormPropertiesParams() *GetWormPropertiesParams {
	var ()
	return &GetWormPropertiesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetWormPropertiesParamsWithTimeout creates a new GetWormPropertiesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetWormPropertiesParamsWithTimeout(timeout time.Duration) *GetWormPropertiesParams {
	var ()
	return &GetWormPropertiesParams{

		timeout: timeout,
	}
}

// NewGetWormPropertiesParamsWithContext creates a new GetWormPropertiesParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetWormPropertiesParamsWithContext(ctx context.Context) *GetWormPropertiesParams {
	var ()
	return &GetWormPropertiesParams{

		Context: ctx,
	}
}

// NewGetWormPropertiesParamsWithHTTPClient creates a new GetWormPropertiesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetWormPropertiesParamsWithHTTPClient(client *http.Client) *GetWormPropertiesParams {
	var ()
	return &GetWormPropertiesParams{
		HTTPClient: client,
	}
}

/*GetWormPropertiesParams contains all the parameters to send to the API endpoint
for the get worm properties operation typically these are written to a http.Request
*/
type GetWormPropertiesParams struct {

	/*WormFilePath
	  Write once read many file path relative to /.

	*/
	WormFilePath string
	/*Worm
	  View WORM properties

	*/
	Worm bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get worm properties params
func (o *GetWormPropertiesParams) WithTimeout(timeout time.Duration) *GetWormPropertiesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get worm properties params
func (o *GetWormPropertiesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get worm properties params
func (o *GetWormPropertiesParams) WithContext(ctx context.Context) *GetWormPropertiesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get worm properties params
func (o *GetWormPropertiesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get worm properties params
func (o *GetWormPropertiesParams) WithHTTPClient(client *http.Client) *GetWormPropertiesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get worm properties params
func (o *GetWormPropertiesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithWormFilePath adds the wormFilePath to the get worm properties params
func (o *GetWormPropertiesParams) WithWormFilePath(wormFilePath string) *GetWormPropertiesParams {
	o.SetWormFilePath(wormFilePath)
	return o
}

// SetWormFilePath adds the wormFilePath to the get worm properties params
func (o *GetWormPropertiesParams) SetWormFilePath(wormFilePath string) {
	o.WormFilePath = wormFilePath
}

// WithWorm adds the worm to the get worm properties params
func (o *GetWormPropertiesParams) WithWorm(worm bool) *GetWormPropertiesParams {
	o.SetWorm(worm)
	return o
}

// SetWorm adds the worm to the get worm properties params
func (o *GetWormPropertiesParams) SetWorm(worm bool) {
	o.Worm = worm
}

// WriteToRequest writes these params to a swagger request
func (o *GetWormPropertiesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param WormFilePath
	if err := r.SetPathParam("WormFilePath", o.WormFilePath); err != nil {
		return err
	}

	// query param worm
	qrWorm := o.Worm
	qWorm := swag.FormatBool(qrWorm)
	if qWorm != "" {
		if err := r.SetQueryParam("worm", qWorm); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
