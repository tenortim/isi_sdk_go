// Code generated by go-swagger; DO NOT EDIT.

package namespace

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// NewCreateAccessPointParams creates a new CreateAccessPointParams object
// with the default values initialized.
func NewCreateAccessPointParams() *CreateAccessPointParams {
	var ()
	return &CreateAccessPointParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateAccessPointParamsWithTimeout creates a new CreateAccessPointParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateAccessPointParamsWithTimeout(timeout time.Duration) *CreateAccessPointParams {
	var ()
	return &CreateAccessPointParams{

		timeout: timeout,
	}
}

// NewCreateAccessPointParamsWithContext creates a new CreateAccessPointParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateAccessPointParamsWithContext(ctx context.Context) *CreateAccessPointParams {
	var ()
	return &CreateAccessPointParams{

		Context: ctx,
	}
}

// NewCreateAccessPointParamsWithHTTPClient creates a new CreateAccessPointParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateAccessPointParamsWithHTTPClient(client *http.Client) *CreateAccessPointParams {
	var ()
	return &CreateAccessPointParams{
		HTTPClient: client,
	}
}

/*CreateAccessPointParams contains all the parameters to send to the API endpoint
for the create access point operation typically these are written to a http.Request
*/
type CreateAccessPointParams struct {

	/*AccessPoint
	  Access point parameters model.

	*/
	AccessPoint *models.AccessPointCreateParams
	/*AccessPointName
	  Access point name.

	*/
	AccessPointName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create access point params
func (o *CreateAccessPointParams) WithTimeout(timeout time.Duration) *CreateAccessPointParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create access point params
func (o *CreateAccessPointParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create access point params
func (o *CreateAccessPointParams) WithContext(ctx context.Context) *CreateAccessPointParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create access point params
func (o *CreateAccessPointParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create access point params
func (o *CreateAccessPointParams) WithHTTPClient(client *http.Client) *CreateAccessPointParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create access point params
func (o *CreateAccessPointParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccessPoint adds the accessPoint to the create access point params
func (o *CreateAccessPointParams) WithAccessPoint(accessPoint *models.AccessPointCreateParams) *CreateAccessPointParams {
	o.SetAccessPoint(accessPoint)
	return o
}

// SetAccessPoint adds the accessPoint to the create access point params
func (o *CreateAccessPointParams) SetAccessPoint(accessPoint *models.AccessPointCreateParams) {
	o.AccessPoint = accessPoint
}

// WithAccessPointName adds the accessPointName to the create access point params
func (o *CreateAccessPointParams) WithAccessPointName(accessPointName string) *CreateAccessPointParams {
	o.SetAccessPointName(accessPointName)
	return o
}

// SetAccessPointName adds the accessPointName to the create access point params
func (o *CreateAccessPointParams) SetAccessPointName(accessPointName string) {
	o.AccessPointName = accessPointName
}

// WriteToRequest writes these params to a swagger request
func (o *CreateAccessPointParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AccessPoint != nil {
		if err := r.SetBodyParam(o.AccessPoint); err != nil {
			return err
		}
	}

	// path param AccessPointName
	if err := r.SetPathParam("AccessPointName", o.AccessPointName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
