// Code generated by go-swagger; DO NOT EDIT.

package quota_quotas

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// NewUpdateQuotaNotificationsParams creates a new UpdateQuotaNotificationsParams object
// with the default values initialized.
func NewUpdateQuotaNotificationsParams() *UpdateQuotaNotificationsParams {
	var ()
	return &UpdateQuotaNotificationsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateQuotaNotificationsParamsWithTimeout creates a new UpdateQuotaNotificationsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateQuotaNotificationsParamsWithTimeout(timeout time.Duration) *UpdateQuotaNotificationsParams {
	var ()
	return &UpdateQuotaNotificationsParams{

		timeout: timeout,
	}
}

// NewUpdateQuotaNotificationsParamsWithContext creates a new UpdateQuotaNotificationsParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateQuotaNotificationsParamsWithContext(ctx context.Context) *UpdateQuotaNotificationsParams {
	var ()
	return &UpdateQuotaNotificationsParams{

		Context: ctx,
	}
}

// NewUpdateQuotaNotificationsParamsWithHTTPClient creates a new UpdateQuotaNotificationsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateQuotaNotificationsParamsWithHTTPClient(client *http.Client) *UpdateQuotaNotificationsParams {
	var ()
	return &UpdateQuotaNotificationsParams{
		HTTPClient: client,
	}
}

/*UpdateQuotaNotificationsParams contains all the parameters to send to the API endpoint
for the update quota notifications operation typically these are written to a http.Request
*/
type UpdateQuotaNotificationsParams struct {

	/*Qid*/
	Qid string
	/*QuotaNotifications*/
	QuotaNotifications models.Empty

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update quota notifications params
func (o *UpdateQuotaNotificationsParams) WithTimeout(timeout time.Duration) *UpdateQuotaNotificationsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update quota notifications params
func (o *UpdateQuotaNotificationsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update quota notifications params
func (o *UpdateQuotaNotificationsParams) WithContext(ctx context.Context) *UpdateQuotaNotificationsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update quota notifications params
func (o *UpdateQuotaNotificationsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update quota notifications params
func (o *UpdateQuotaNotificationsParams) WithHTTPClient(client *http.Client) *UpdateQuotaNotificationsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update quota notifications params
func (o *UpdateQuotaNotificationsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithQid adds the qid to the update quota notifications params
func (o *UpdateQuotaNotificationsParams) WithQid(qid string) *UpdateQuotaNotificationsParams {
	o.SetQid(qid)
	return o
}

// SetQid adds the qid to the update quota notifications params
func (o *UpdateQuotaNotificationsParams) SetQid(qid string) {
	o.Qid = qid
}

// WithQuotaNotifications adds the quotaNotifications to the update quota notifications params
func (o *UpdateQuotaNotificationsParams) WithQuotaNotifications(quotaNotifications models.Empty) *UpdateQuotaNotificationsParams {
	o.SetQuotaNotifications(quotaNotifications)
	return o
}

// SetQuotaNotifications adds the quotaNotifications to the update quota notifications params
func (o *UpdateQuotaNotificationsParams) SetQuotaNotifications(quotaNotifications models.Empty) {
	o.QuotaNotifications = quotaNotifications
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateQuotaNotificationsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param Qid
	if err := r.SetPathParam("Qid", o.Qid); err != nil {
		return err
	}

	if o.QuotaNotifications != nil {
		if err := r.SetBodyParam(o.QuotaNotifications); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
