// Code generated by go-swagger; DO NOT EDIT.

package quota_quotas

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// NewUpdateQuotaNotificationParams creates a new UpdateQuotaNotificationParams object
// with the default values initialized.
func NewUpdateQuotaNotificationParams() *UpdateQuotaNotificationParams {
	var ()
	return &UpdateQuotaNotificationParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateQuotaNotificationParamsWithTimeout creates a new UpdateQuotaNotificationParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateQuotaNotificationParamsWithTimeout(timeout time.Duration) *UpdateQuotaNotificationParams {
	var ()
	return &UpdateQuotaNotificationParams{

		timeout: timeout,
	}
}

// NewUpdateQuotaNotificationParamsWithContext creates a new UpdateQuotaNotificationParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateQuotaNotificationParamsWithContext(ctx context.Context) *UpdateQuotaNotificationParams {
	var ()
	return &UpdateQuotaNotificationParams{

		Context: ctx,
	}
}

// NewUpdateQuotaNotificationParamsWithHTTPClient creates a new UpdateQuotaNotificationParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateQuotaNotificationParamsWithHTTPClient(client *http.Client) *UpdateQuotaNotificationParams {
	var ()
	return &UpdateQuotaNotificationParams{
		HTTPClient: client,
	}
}

/*UpdateQuotaNotificationParams contains all the parameters to send to the API endpoint
for the update quota notification operation typically these are written to a http.Request
*/
type UpdateQuotaNotificationParams struct {

	/*Qid*/
	Qid string
	/*QuotaNotification*/
	QuotaNotification *models.QuotaNotification
	/*QuotaNotificationID
	  Modify notification rule. All input fields are optional, but one or must be supplied.

	*/
	QuotaNotificationID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update quota notification params
func (o *UpdateQuotaNotificationParams) WithTimeout(timeout time.Duration) *UpdateQuotaNotificationParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update quota notification params
func (o *UpdateQuotaNotificationParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update quota notification params
func (o *UpdateQuotaNotificationParams) WithContext(ctx context.Context) *UpdateQuotaNotificationParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update quota notification params
func (o *UpdateQuotaNotificationParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update quota notification params
func (o *UpdateQuotaNotificationParams) WithHTTPClient(client *http.Client) *UpdateQuotaNotificationParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update quota notification params
func (o *UpdateQuotaNotificationParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithQid adds the qid to the update quota notification params
func (o *UpdateQuotaNotificationParams) WithQid(qid string) *UpdateQuotaNotificationParams {
	o.SetQid(qid)
	return o
}

// SetQid adds the qid to the update quota notification params
func (o *UpdateQuotaNotificationParams) SetQid(qid string) {
	o.Qid = qid
}

// WithQuotaNotification adds the quotaNotification to the update quota notification params
func (o *UpdateQuotaNotificationParams) WithQuotaNotification(quotaNotification *models.QuotaNotification) *UpdateQuotaNotificationParams {
	o.SetQuotaNotification(quotaNotification)
	return o
}

// SetQuotaNotification adds the quotaNotification to the update quota notification params
func (o *UpdateQuotaNotificationParams) SetQuotaNotification(quotaNotification *models.QuotaNotification) {
	o.QuotaNotification = quotaNotification
}

// WithQuotaNotificationID adds the quotaNotificationID to the update quota notification params
func (o *UpdateQuotaNotificationParams) WithQuotaNotificationID(quotaNotificationID string) *UpdateQuotaNotificationParams {
	o.SetQuotaNotificationID(quotaNotificationID)
	return o
}

// SetQuotaNotificationID adds the quotaNotificationId to the update quota notification params
func (o *UpdateQuotaNotificationParams) SetQuotaNotificationID(quotaNotificationID string) {
	o.QuotaNotificationID = quotaNotificationID
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateQuotaNotificationParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param Qid
	if err := r.SetPathParam("Qid", o.Qid); err != nil {
		return err
	}

	if o.QuotaNotification != nil {
		if err := r.SetBodyParam(o.QuotaNotification); err != nil {
			return err
		}
	}

	// path param QuotaNotificationId
	if err := r.SetPathParam("QuotaNotificationId", o.QuotaNotificationID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
