// Code generated by go-swagger; DO NOT EDIT.

package hardware

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// NewUpdateHardwareTapeNameParams creates a new UpdateHardwareTapeNameParams object
// with the default values initialized.
func NewUpdateHardwareTapeNameParams() *UpdateHardwareTapeNameParams {
	var ()
	return &UpdateHardwareTapeNameParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateHardwareTapeNameParamsWithTimeout creates a new UpdateHardwareTapeNameParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateHardwareTapeNameParamsWithTimeout(timeout time.Duration) *UpdateHardwareTapeNameParams {
	var ()
	return &UpdateHardwareTapeNameParams{

		timeout: timeout,
	}
}

// NewUpdateHardwareTapeNameParamsWithContext creates a new UpdateHardwareTapeNameParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateHardwareTapeNameParamsWithContext(ctx context.Context) *UpdateHardwareTapeNameParams {
	var ()
	return &UpdateHardwareTapeNameParams{

		Context: ctx,
	}
}

// NewUpdateHardwareTapeNameParamsWithHTTPClient creates a new UpdateHardwareTapeNameParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateHardwareTapeNameParamsWithHTTPClient(client *http.Client) *UpdateHardwareTapeNameParams {
	var ()
	return &UpdateHardwareTapeNameParams{
		HTTPClient: client,
	}
}

/*UpdateHardwareTapeNameParams contains all the parameters to send to the API endpoint
for the update hardware tape name operation typically these are written to a http.Request
*/
type UpdateHardwareTapeNameParams struct {

	/*HardwareTapeName
	  Tape/Changer device modify

	*/
	HardwareTapeName string
	/*HardwareTapeNameParams*/
	HardwareTapeNameParams *models.HardwareTapeNameParams

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update hardware tape name params
func (o *UpdateHardwareTapeNameParams) WithTimeout(timeout time.Duration) *UpdateHardwareTapeNameParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update hardware tape name params
func (o *UpdateHardwareTapeNameParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update hardware tape name params
func (o *UpdateHardwareTapeNameParams) WithContext(ctx context.Context) *UpdateHardwareTapeNameParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update hardware tape name params
func (o *UpdateHardwareTapeNameParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update hardware tape name params
func (o *UpdateHardwareTapeNameParams) WithHTTPClient(client *http.Client) *UpdateHardwareTapeNameParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update hardware tape name params
func (o *UpdateHardwareTapeNameParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithHardwareTapeName adds the hardwareTapeName to the update hardware tape name params
func (o *UpdateHardwareTapeNameParams) WithHardwareTapeName(hardwareTapeName string) *UpdateHardwareTapeNameParams {
	o.SetHardwareTapeName(hardwareTapeName)
	return o
}

// SetHardwareTapeName adds the hardwareTapeName to the update hardware tape name params
func (o *UpdateHardwareTapeNameParams) SetHardwareTapeName(hardwareTapeName string) {
	o.HardwareTapeName = hardwareTapeName
}

// WithHardwareTapeNameParams adds the hardwareTapeNameParams to the update hardware tape name params
func (o *UpdateHardwareTapeNameParams) WithHardwareTapeNameParams(hardwareTapeNameParams *models.HardwareTapeNameParams) *UpdateHardwareTapeNameParams {
	o.SetHardwareTapeNameParams(hardwareTapeNameParams)
	return o
}

// SetHardwareTapeNameParams adds the hardwareTapeNameParams to the update hardware tape name params
func (o *UpdateHardwareTapeNameParams) SetHardwareTapeNameParams(hardwareTapeNameParams *models.HardwareTapeNameParams) {
	o.HardwareTapeNameParams = hardwareTapeNameParams
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateHardwareTapeNameParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param HardwareTapeName
	if err := r.SetPathParam("HardwareTapeName", o.HardwareTapeName); err != nil {
		return err
	}

	if o.HardwareTapeNameParams != nil {
		if err := r.SetBodyParam(o.HardwareTapeNameParams); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
