// Code generated by go-swagger; DO NOT EDIT.

package network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// NewCreateDnscacheFlushItemParams creates a new CreateDnscacheFlushItemParams object
// with the default values initialized.
func NewCreateDnscacheFlushItemParams() *CreateDnscacheFlushItemParams {
	var ()
	return &CreateDnscacheFlushItemParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateDnscacheFlushItemParamsWithTimeout creates a new CreateDnscacheFlushItemParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateDnscacheFlushItemParamsWithTimeout(timeout time.Duration) *CreateDnscacheFlushItemParams {
	var ()
	return &CreateDnscacheFlushItemParams{

		timeout: timeout,
	}
}

// NewCreateDnscacheFlushItemParamsWithContext creates a new CreateDnscacheFlushItemParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateDnscacheFlushItemParamsWithContext(ctx context.Context) *CreateDnscacheFlushItemParams {
	var ()
	return &CreateDnscacheFlushItemParams{

		Context: ctx,
	}
}

// NewCreateDnscacheFlushItemParamsWithHTTPClient creates a new CreateDnscacheFlushItemParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateDnscacheFlushItemParamsWithHTTPClient(client *http.Client) *CreateDnscacheFlushItemParams {
	var ()
	return &CreateDnscacheFlushItemParams{
		HTTPClient: client,
	}
}

/*CreateDnscacheFlushItemParams contains all the parameters to send to the API endpoint
for the create dnscache flush item operation typically these are written to a http.Request
*/
type CreateDnscacheFlushItemParams struct {

	/*DnscacheFlushItem*/
	DnscacheFlushItem models.Empty

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create dnscache flush item params
func (o *CreateDnscacheFlushItemParams) WithTimeout(timeout time.Duration) *CreateDnscacheFlushItemParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create dnscache flush item params
func (o *CreateDnscacheFlushItemParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create dnscache flush item params
func (o *CreateDnscacheFlushItemParams) WithContext(ctx context.Context) *CreateDnscacheFlushItemParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create dnscache flush item params
func (o *CreateDnscacheFlushItemParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create dnscache flush item params
func (o *CreateDnscacheFlushItemParams) WithHTTPClient(client *http.Client) *CreateDnscacheFlushItemParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create dnscache flush item params
func (o *CreateDnscacheFlushItemParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDnscacheFlushItem adds the dnscacheFlushItem to the create dnscache flush item params
func (o *CreateDnscacheFlushItemParams) WithDnscacheFlushItem(dnscacheFlushItem models.Empty) *CreateDnscacheFlushItemParams {
	o.SetDnscacheFlushItem(dnscacheFlushItem)
	return o
}

// SetDnscacheFlushItem adds the dnscacheFlushItem to the create dnscache flush item params
func (o *CreateDnscacheFlushItemParams) SetDnscacheFlushItem(dnscacheFlushItem models.Empty) {
	o.DnscacheFlushItem = dnscacheFlushItem
}

// WriteToRequest writes these params to a swagger request
func (o *CreateDnscacheFlushItemParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.DnscacheFlushItem != nil {
		if err := r.SetBodyParam(o.DnscacheFlushItem); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
