// Code generated by go-swagger; DO NOT EDIT.

package network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// GetNetworkDnscacheReader is a Reader for the GetNetworkDnscache structure.
type GetNetworkDnscacheReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNetworkDnscacheReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetNetworkDnscacheOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetNetworkDnscacheDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetNetworkDnscacheOK creates a GetNetworkDnscacheOK with default headers values
func NewGetNetworkDnscacheOK() *GetNetworkDnscacheOK {
	return &GetNetworkDnscacheOK{}
}

/*GetNetworkDnscacheOK handles this case with default header values.

View network dns cache settings.
*/
type GetNetworkDnscacheOK struct {
	Payload *models.NetworkDnscache
}

func (o *GetNetworkDnscacheOK) Error() string {
	return fmt.Sprintf("[GET /platform/3/network/dnscache][%d] getNetworkDnscacheOK  %+v", 200, o.Payload)
}

func (o *GetNetworkDnscacheOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NetworkDnscache)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNetworkDnscacheDefault creates a GetNetworkDnscacheDefault with default headers values
func NewGetNetworkDnscacheDefault(code int) *GetNetworkDnscacheDefault {
	return &GetNetworkDnscacheDefault{
		_statusCode: code,
	}
}

/*GetNetworkDnscacheDefault handles this case with default header values.

Unexpected error
*/
type GetNetworkDnscacheDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get network dnscache default response
func (o *GetNetworkDnscacheDefault) Code() int {
	return o._statusCode
}

func (o *GetNetworkDnscacheDefault) Error() string {
	return fmt.Sprintf("[GET /platform/3/network/dnscache][%d] getNetworkDnscache default  %+v", o._statusCode, o.Payload)
}

func (o *GetNetworkDnscacheDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
