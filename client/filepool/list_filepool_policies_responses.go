// Code generated by go-swagger; DO NOT EDIT.

package filepool

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// ListFilepoolPoliciesReader is a Reader for the ListFilepoolPolicies structure.
type ListFilepoolPoliciesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListFilepoolPoliciesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListFilepoolPoliciesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewListFilepoolPoliciesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListFilepoolPoliciesOK creates a ListFilepoolPoliciesOK with default headers values
func NewListFilepoolPoliciesOK() *ListFilepoolPoliciesOK {
	return &ListFilepoolPoliciesOK{}
}

/*ListFilepoolPoliciesOK handles this case with default header values.

List all policies.
*/
type ListFilepoolPoliciesOK struct {
	Payload *models.FilepoolPoliciesExtended
}

func (o *ListFilepoolPoliciesOK) Error() string {
	return fmt.Sprintf("[GET /platform/1/filepool/policies][%d] listFilepoolPoliciesOK  %+v", 200, o.Payload)
}

func (o *ListFilepoolPoliciesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FilepoolPoliciesExtended)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListFilepoolPoliciesDefault creates a ListFilepoolPoliciesDefault with default headers values
func NewListFilepoolPoliciesDefault(code int) *ListFilepoolPoliciesDefault {
	return &ListFilepoolPoliciesDefault{
		_statusCode: code,
	}
}

/*ListFilepoolPoliciesDefault handles this case with default header values.

Unexpected error
*/
type ListFilepoolPoliciesDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the list filepool policies default response
func (o *ListFilepoolPoliciesDefault) Code() int {
	return o._statusCode
}

func (o *ListFilepoolPoliciesDefault) Error() string {
	return fmt.Sprintf("[GET /platform/1/filepool/policies][%d] listFilepoolPolicies default  %+v", o._statusCode, o.Payload)
}

func (o *ListFilepoolPoliciesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
