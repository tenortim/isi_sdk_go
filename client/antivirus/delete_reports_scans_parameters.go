// Code generated by go-swagger; DO NOT EDIT.

package antivirus

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteReportsScansParams creates a new DeleteReportsScansParams object
// with the default values initialized.
func NewDeleteReportsScansParams() *DeleteReportsScansParams {
	var ()
	return &DeleteReportsScansParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteReportsScansParamsWithTimeout creates a new DeleteReportsScansParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteReportsScansParamsWithTimeout(timeout time.Duration) *DeleteReportsScansParams {
	var ()
	return &DeleteReportsScansParams{

		timeout: timeout,
	}
}

// NewDeleteReportsScansParamsWithContext creates a new DeleteReportsScansParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteReportsScansParamsWithContext(ctx context.Context) *DeleteReportsScansParams {
	var ()
	return &DeleteReportsScansParams{

		Context: ctx,
	}
}

// NewDeleteReportsScansParamsWithHTTPClient creates a new DeleteReportsScansParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteReportsScansParamsWithHTTPClient(client *http.Client) *DeleteReportsScansParams {
	var ()
	return &DeleteReportsScansParams{
		HTTPClient: client,
	}
}

/*DeleteReportsScansParams contains all the parameters to send to the API endpoint
for the delete reports scans operation typically these are written to a http.Request
*/
type DeleteReportsScansParams struct {

	/*Age
	  An amount of time in seconds. If present, only reports older than this age are deleted.

	*/
	Age *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete reports scans params
func (o *DeleteReportsScansParams) WithTimeout(timeout time.Duration) *DeleteReportsScansParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete reports scans params
func (o *DeleteReportsScansParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete reports scans params
func (o *DeleteReportsScansParams) WithContext(ctx context.Context) *DeleteReportsScansParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete reports scans params
func (o *DeleteReportsScansParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete reports scans params
func (o *DeleteReportsScansParams) WithHTTPClient(client *http.Client) *DeleteReportsScansParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete reports scans params
func (o *DeleteReportsScansParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAge adds the age to the delete reports scans params
func (o *DeleteReportsScansParams) WithAge(age *int64) *DeleteReportsScansParams {
	o.SetAge(age)
	return o
}

// SetAge adds the age to the delete reports scans params
func (o *DeleteReportsScansParams) SetAge(age *int64) {
	o.Age = age
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteReportsScansParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Age != nil {

		// query param age
		var qrAge int64
		if o.Age != nil {
			qrAge = *o.Age
		}
		qAge := swag.FormatInt64(qrAge)
		if qAge != "" {
			if err := r.SetQueryParam("age", qAge); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
