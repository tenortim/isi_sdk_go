// Code generated by go-swagger; DO NOT EDIT.

package zones

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// GetZoneReader is a Reader for the GetZone structure.
type GetZoneReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetZoneReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetZoneOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetZoneDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetZoneOK creates a GetZoneOK with default headers values
func NewGetZoneOK() *GetZoneOK {
	return &GetZoneOK{}
}

/*GetZoneOK handles this case with default header values.

Retrieve the access zone information.
*/
type GetZoneOK struct {
	Payload *models.Zones
}

func (o *GetZoneOK) Error() string {
	return fmt.Sprintf("[GET /platform/3/zones/{ZoneId}][%d] getZoneOK  %+v", 200, o.Payload)
}

func (o *GetZoneOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Zones)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetZoneDefault creates a GetZoneDefault with default headers values
func NewGetZoneDefault(code int) *GetZoneDefault {
	return &GetZoneDefault{
		_statusCode: code,
	}
}

/*GetZoneDefault handles this case with default header values.

Unexpected error
*/
type GetZoneDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get zone default response
func (o *GetZoneDefault) Code() int {
	return o._statusCode
}

func (o *GetZoneDefault) Error() string {
	return fmt.Sprintf("[GET /platform/3/zones/{ZoneId}][%d] getZone default  %+v", o._statusCode, o.Payload)
}

func (o *GetZoneDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
