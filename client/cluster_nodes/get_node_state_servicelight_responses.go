// Code generated by go-swagger; DO NOT EDIT.

package cluster_nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// GetNodeStateServicelightReader is a Reader for the GetNodeStateServicelight structure.
type GetNodeStateServicelightReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNodeStateServicelightReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetNodeStateServicelightOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetNodeStateServicelightDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetNodeStateServicelightOK creates a GetNodeStateServicelightOK with default headers values
func NewGetNodeStateServicelightOK() *GetNodeStateServicelightOK {
	return &GetNodeStateServicelightOK{}
}

/*GetNodeStateServicelightOK handles this case with default header values.

Retrieve node service light state information.
*/
type GetNodeStateServicelightOK struct {
	Payload *models.NodeStateServicelight
}

func (o *GetNodeStateServicelightOK) Error() string {
	return fmt.Sprintf("[GET /platform/3/cluster/nodes/{Lnn}/state/servicelight][%d] getNodeStateServicelightOK  %+v", 200, o.Payload)
}

func (o *GetNodeStateServicelightOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NodeStateServicelight)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNodeStateServicelightDefault creates a GetNodeStateServicelightDefault with default headers values
func NewGetNodeStateServicelightDefault(code int) *GetNodeStateServicelightDefault {
	return &GetNodeStateServicelightDefault{
		_statusCode: code,
	}
}

/*GetNodeStateServicelightDefault handles this case with default header values.

Unexpected error
*/
type GetNodeStateServicelightDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get node state servicelight default response
func (o *GetNodeStateServicelightDefault) Code() int {
	return o._statusCode
}

func (o *GetNodeStateServicelightDefault) Error() string {
	return fmt.Sprintf("[GET /platform/3/cluster/nodes/{Lnn}/state/servicelight][%d] getNodeStateServicelight default  %+v", o._statusCode, o.Payload)
}

func (o *GetNodeStateServicelightDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
