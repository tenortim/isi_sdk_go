// Code generated by go-swagger; DO NOT EDIT.

package dedupe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetDedupeReportParams creates a new GetDedupeReportParams object
// with the default values initialized.
func NewGetDedupeReportParams() *GetDedupeReportParams {
	var ()
	return &GetDedupeReportParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetDedupeReportParamsWithTimeout creates a new GetDedupeReportParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetDedupeReportParamsWithTimeout(timeout time.Duration) *GetDedupeReportParams {
	var ()
	return &GetDedupeReportParams{

		timeout: timeout,
	}
}

// NewGetDedupeReportParamsWithContext creates a new GetDedupeReportParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetDedupeReportParamsWithContext(ctx context.Context) *GetDedupeReportParams {
	var ()
	return &GetDedupeReportParams{

		Context: ctx,
	}
}

// NewGetDedupeReportParamsWithHTTPClient creates a new GetDedupeReportParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetDedupeReportParamsWithHTTPClient(client *http.Client) *GetDedupeReportParams {
	var ()
	return &GetDedupeReportParams{
		HTTPClient: client,
	}
}

/*GetDedupeReportParams contains all the parameters to send to the API endpoint
for the get dedupe report operation typically these are written to a http.Request
*/
type GetDedupeReportParams struct {

	/*DedupeReportID
	  Retrieve a report for a single dedupe job.

	*/
	DedupeReportID string
	/*Scope
	  If specified as "effective" or not specified, all fields are returned.  If specified as "user", only fields with non-default values are shown.  If specified as "default", the original values are returned.

	*/
	Scope *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get dedupe report params
func (o *GetDedupeReportParams) WithTimeout(timeout time.Duration) *GetDedupeReportParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get dedupe report params
func (o *GetDedupeReportParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get dedupe report params
func (o *GetDedupeReportParams) WithContext(ctx context.Context) *GetDedupeReportParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get dedupe report params
func (o *GetDedupeReportParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get dedupe report params
func (o *GetDedupeReportParams) WithHTTPClient(client *http.Client) *GetDedupeReportParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get dedupe report params
func (o *GetDedupeReportParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDedupeReportID adds the dedupeReportID to the get dedupe report params
func (o *GetDedupeReportParams) WithDedupeReportID(dedupeReportID string) *GetDedupeReportParams {
	o.SetDedupeReportID(dedupeReportID)
	return o
}

// SetDedupeReportID adds the dedupeReportId to the get dedupe report params
func (o *GetDedupeReportParams) SetDedupeReportID(dedupeReportID string) {
	o.DedupeReportID = dedupeReportID
}

// WithScope adds the scope to the get dedupe report params
func (o *GetDedupeReportParams) WithScope(scope *string) *GetDedupeReportParams {
	o.SetScope(scope)
	return o
}

// SetScope adds the scope to the get dedupe report params
func (o *GetDedupeReportParams) SetScope(scope *string) {
	o.Scope = scope
}

// WriteToRequest writes these params to a swagger request
func (o *GetDedupeReportParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param DedupeReportId
	if err := r.SetPathParam("DedupeReportId", o.DedupeReportID); err != nil {
		return err
	}

	if o.Scope != nil {

		// query param scope
		var qrScope string
		if o.Scope != nil {
			qrScope = *o.Scope
		}
		qScope := qrScope
		if qScope != "" {
			if err := r.SetQueryParam("scope", qScope); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
