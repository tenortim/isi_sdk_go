// Code generated by go-swagger; DO NOT EDIT.

package statistics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetStatisticsProtocolsParams creates a new GetStatisticsProtocolsParams object
// with the default values initialized.
func NewGetStatisticsProtocolsParams() *GetStatisticsProtocolsParams {
	var ()
	return &GetStatisticsProtocolsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetStatisticsProtocolsParamsWithTimeout creates a new GetStatisticsProtocolsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetStatisticsProtocolsParamsWithTimeout(timeout time.Duration) *GetStatisticsProtocolsParams {
	var ()
	return &GetStatisticsProtocolsParams{

		timeout: timeout,
	}
}

// NewGetStatisticsProtocolsParamsWithContext creates a new GetStatisticsProtocolsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetStatisticsProtocolsParamsWithContext(ctx context.Context) *GetStatisticsProtocolsParams {
	var ()
	return &GetStatisticsProtocolsParams{

		Context: ctx,
	}
}

// NewGetStatisticsProtocolsParamsWithHTTPClient creates a new GetStatisticsProtocolsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetStatisticsProtocolsParamsWithHTTPClient(client *http.Client) *GetStatisticsProtocolsParams {
	var ()
	return &GetStatisticsProtocolsParams{
		HTTPClient: client,
	}
}

/*GetStatisticsProtocolsParams contains all the parameters to send to the API endpoint
for the get statistics protocols operation typically these are written to a http.Request
*/
type GetStatisticsProtocolsParams struct {

	/*Type
	  Specifies whether internal, external, or all protocols should be returned.

	*/
	Type *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get statistics protocols params
func (o *GetStatisticsProtocolsParams) WithTimeout(timeout time.Duration) *GetStatisticsProtocolsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get statistics protocols params
func (o *GetStatisticsProtocolsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get statistics protocols params
func (o *GetStatisticsProtocolsParams) WithContext(ctx context.Context) *GetStatisticsProtocolsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get statistics protocols params
func (o *GetStatisticsProtocolsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get statistics protocols params
func (o *GetStatisticsProtocolsParams) WithHTTPClient(client *http.Client) *GetStatisticsProtocolsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get statistics protocols params
func (o *GetStatisticsProtocolsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithType adds the typeVar to the get statistics protocols params
func (o *GetStatisticsProtocolsParams) WithType(typeVar *string) *GetStatisticsProtocolsParams {
	o.SetType(typeVar)
	return o
}

// SetType adds the type to the get statistics protocols params
func (o *GetStatisticsProtocolsParams) SetType(typeVar *string) {
	o.Type = typeVar
}

// WriteToRequest writes these params to a swagger request
func (o *GetStatisticsProtocolsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Type != nil {

		// query param type
		var qrType string
		if o.Type != nil {
			qrType = *o.Type
		}
		qType := qrType
		if qType != "" {
			if err := r.SetQueryParam("type", qType); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
