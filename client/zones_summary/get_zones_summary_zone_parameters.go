// Code generated by go-swagger; DO NOT EDIT.

package zones_summary

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetZonesSummaryZoneParams creates a new GetZonesSummaryZoneParams object
// with the default values initialized.
func NewGetZonesSummaryZoneParams() *GetZonesSummaryZoneParams {
	var ()
	return &GetZonesSummaryZoneParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetZonesSummaryZoneParamsWithTimeout creates a new GetZonesSummaryZoneParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetZonesSummaryZoneParamsWithTimeout(timeout time.Duration) *GetZonesSummaryZoneParams {
	var ()
	return &GetZonesSummaryZoneParams{

		timeout: timeout,
	}
}

// NewGetZonesSummaryZoneParamsWithContext creates a new GetZonesSummaryZoneParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetZonesSummaryZoneParamsWithContext(ctx context.Context) *GetZonesSummaryZoneParams {
	var ()
	return &GetZonesSummaryZoneParams{

		Context: ctx,
	}
}

// NewGetZonesSummaryZoneParamsWithHTTPClient creates a new GetZonesSummaryZoneParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetZonesSummaryZoneParamsWithHTTPClient(client *http.Client) *GetZonesSummaryZoneParams {
	var ()
	return &GetZonesSummaryZoneParams{
		HTTPClient: client,
	}
}

/*GetZonesSummaryZoneParams contains all the parameters to send to the API endpoint
for the get zones summary zone operation typically these are written to a http.Request
*/
type GetZonesSummaryZoneParams struct {

	/*ZonesSummaryZone
	  Retrieve non-privileged access zone information.

	*/
	ZonesSummaryZone int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get zones summary zone params
func (o *GetZonesSummaryZoneParams) WithTimeout(timeout time.Duration) *GetZonesSummaryZoneParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get zones summary zone params
func (o *GetZonesSummaryZoneParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get zones summary zone params
func (o *GetZonesSummaryZoneParams) WithContext(ctx context.Context) *GetZonesSummaryZoneParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get zones summary zone params
func (o *GetZonesSummaryZoneParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get zones summary zone params
func (o *GetZonesSummaryZoneParams) WithHTTPClient(client *http.Client) *GetZonesSummaryZoneParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get zones summary zone params
func (o *GetZonesSummaryZoneParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithZonesSummaryZone adds the zonesSummaryZone to the get zones summary zone params
func (o *GetZonesSummaryZoneParams) WithZonesSummaryZone(zonesSummaryZone int64) *GetZonesSummaryZoneParams {
	o.SetZonesSummaryZone(zonesSummaryZone)
	return o
}

// SetZonesSummaryZone adds the zonesSummaryZone to the get zones summary zone params
func (o *GetZonesSummaryZoneParams) SetZonesSummaryZone(zonesSummaryZone int64) {
	o.ZonesSummaryZone = zonesSummaryZone
}

// WriteToRequest writes these params to a swagger request
func (o *GetZonesSummaryZoneParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param ZonesSummaryZone
	if err := r.SetPathParam("ZonesSummaryZone", swag.FormatInt64(o.ZonesSummaryZone)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
