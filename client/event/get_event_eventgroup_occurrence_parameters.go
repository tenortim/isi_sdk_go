// Code generated by go-swagger; DO NOT EDIT.

package event

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetEventEventgroupOccurrenceParams creates a new GetEventEventgroupOccurrenceParams object
// with the default values initialized.
func NewGetEventEventgroupOccurrenceParams() *GetEventEventgroupOccurrenceParams {
	var ()
	return &GetEventEventgroupOccurrenceParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetEventEventgroupOccurrenceParamsWithTimeout creates a new GetEventEventgroupOccurrenceParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetEventEventgroupOccurrenceParamsWithTimeout(timeout time.Duration) *GetEventEventgroupOccurrenceParams {
	var ()
	return &GetEventEventgroupOccurrenceParams{

		timeout: timeout,
	}
}

// NewGetEventEventgroupOccurrenceParamsWithContext creates a new GetEventEventgroupOccurrenceParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetEventEventgroupOccurrenceParamsWithContext(ctx context.Context) *GetEventEventgroupOccurrenceParams {
	var ()
	return &GetEventEventgroupOccurrenceParams{

		Context: ctx,
	}
}

// NewGetEventEventgroupOccurrenceParamsWithHTTPClient creates a new GetEventEventgroupOccurrenceParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetEventEventgroupOccurrenceParamsWithHTTPClient(client *http.Client) *GetEventEventgroupOccurrenceParams {
	var ()
	return &GetEventEventgroupOccurrenceParams{
		HTTPClient: client,
	}
}

/*GetEventEventgroupOccurrenceParams contains all the parameters to send to the API endpoint
for the get event eventgroup occurrence operation typically these are written to a http.Request
*/
type GetEventEventgroupOccurrenceParams struct {

	/*EventEventgroupOccurrenceID
	  Retrieve individual eventgroup occurrence.

	*/
	EventEventgroupOccurrenceID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get event eventgroup occurrence params
func (o *GetEventEventgroupOccurrenceParams) WithTimeout(timeout time.Duration) *GetEventEventgroupOccurrenceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get event eventgroup occurrence params
func (o *GetEventEventgroupOccurrenceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get event eventgroup occurrence params
func (o *GetEventEventgroupOccurrenceParams) WithContext(ctx context.Context) *GetEventEventgroupOccurrenceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get event eventgroup occurrence params
func (o *GetEventEventgroupOccurrenceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get event eventgroup occurrence params
func (o *GetEventEventgroupOccurrenceParams) WithHTTPClient(client *http.Client) *GetEventEventgroupOccurrenceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get event eventgroup occurrence params
func (o *GetEventEventgroupOccurrenceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEventEventgroupOccurrenceID adds the eventEventgroupOccurrenceID to the get event eventgroup occurrence params
func (o *GetEventEventgroupOccurrenceParams) WithEventEventgroupOccurrenceID(eventEventgroupOccurrenceID string) *GetEventEventgroupOccurrenceParams {
	o.SetEventEventgroupOccurrenceID(eventEventgroupOccurrenceID)
	return o
}

// SetEventEventgroupOccurrenceID adds the eventEventgroupOccurrenceId to the get event eventgroup occurrence params
func (o *GetEventEventgroupOccurrenceParams) SetEventEventgroupOccurrenceID(eventEventgroupOccurrenceID string) {
	o.EventEventgroupOccurrenceID = eventEventgroupOccurrenceID
}

// WriteToRequest writes these params to a swagger request
func (o *GetEventEventgroupOccurrenceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param EventEventgroupOccurrenceId
	if err := r.SetPathParam("EventEventgroupOccurrenceId", o.EventEventgroupOccurrenceID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
