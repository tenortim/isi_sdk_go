// Code generated by go-swagger; DO NOT EDIT.

package event

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// NewCreateEventAlertConditionParams creates a new CreateEventAlertConditionParams object
// with the default values initialized.
func NewCreateEventAlertConditionParams() *CreateEventAlertConditionParams {
	var ()
	return &CreateEventAlertConditionParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateEventAlertConditionParamsWithTimeout creates a new CreateEventAlertConditionParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateEventAlertConditionParamsWithTimeout(timeout time.Duration) *CreateEventAlertConditionParams {
	var ()
	return &CreateEventAlertConditionParams{

		timeout: timeout,
	}
}

// NewCreateEventAlertConditionParamsWithContext creates a new CreateEventAlertConditionParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateEventAlertConditionParamsWithContext(ctx context.Context) *CreateEventAlertConditionParams {
	var ()
	return &CreateEventAlertConditionParams{

		Context: ctx,
	}
}

// NewCreateEventAlertConditionParamsWithHTTPClient creates a new CreateEventAlertConditionParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateEventAlertConditionParamsWithHTTPClient(client *http.Client) *CreateEventAlertConditionParams {
	var ()
	return &CreateEventAlertConditionParams{
		HTTPClient: client,
	}
}

/*CreateEventAlertConditionParams contains all the parameters to send to the API endpoint
for the create event alert condition operation typically these are written to a http.Request
*/
type CreateEventAlertConditionParams struct {

	/*EventAlertCondition*/
	EventAlertCondition *models.EventAlertConditionCreateParams

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create event alert condition params
func (o *CreateEventAlertConditionParams) WithTimeout(timeout time.Duration) *CreateEventAlertConditionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create event alert condition params
func (o *CreateEventAlertConditionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create event alert condition params
func (o *CreateEventAlertConditionParams) WithContext(ctx context.Context) *CreateEventAlertConditionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create event alert condition params
func (o *CreateEventAlertConditionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create event alert condition params
func (o *CreateEventAlertConditionParams) WithHTTPClient(client *http.Client) *CreateEventAlertConditionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create event alert condition params
func (o *CreateEventAlertConditionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEventAlertCondition adds the eventAlertCondition to the create event alert condition params
func (o *CreateEventAlertConditionParams) WithEventAlertCondition(eventAlertCondition *models.EventAlertConditionCreateParams) *CreateEventAlertConditionParams {
	o.SetEventAlertCondition(eventAlertCondition)
	return o
}

// SetEventAlertCondition adds the eventAlertCondition to the create event alert condition params
func (o *CreateEventAlertConditionParams) SetEventAlertCondition(eventAlertCondition *models.EventAlertConditionCreateParams) {
	o.EventAlertCondition = eventAlertCondition
}

// WriteToRequest writes these params to a swagger request
func (o *CreateEventAlertConditionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.EventAlertCondition != nil {
		if err := r.SetBodyParam(o.EventAlertCondition); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
