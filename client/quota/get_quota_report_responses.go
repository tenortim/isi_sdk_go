// Code generated by go-swagger; DO NOT EDIT.

package quota

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// GetQuotaReportReader is a Reader for the GetQuotaReport structure.
type GetQuotaReportReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetQuotaReportReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetQuotaReportOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetQuotaReportDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetQuotaReportOK creates a GetQuotaReportOK with default headers values
func NewGetQuotaReportOK() *GetQuotaReportOK {
	return &GetQuotaReportOK{}
}

/*GetQuotaReportOK handles this case with default header values.

Retrieve report data (XML) or contents (meta-data).
*/
type GetQuotaReportOK struct {
	Payload *models.ReportAbout
}

func (o *GetQuotaReportOK) Error() string {
	return fmt.Sprintf("[GET /platform/1/quota/reports/{QuotaReportId}][%d] getQuotaReportOK  %+v", 200, o.Payload)
}

func (o *GetQuotaReportOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ReportAbout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQuotaReportDefault creates a GetQuotaReportDefault with default headers values
func NewGetQuotaReportDefault(code int) *GetQuotaReportDefault {
	return &GetQuotaReportDefault{
		_statusCode: code,
	}
}

/*GetQuotaReportDefault handles this case with default header values.

Unexpected error
*/
type GetQuotaReportDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get quota report default response
func (o *GetQuotaReportDefault) Code() int {
	return o._statusCode
}

func (o *GetQuotaReportDefault) Error() string {
	return fmt.Sprintf("[GET /platform/1/quota/reports/{QuotaReportId}][%d] getQuotaReport default  %+v", o._statusCode, o.Payload)
}

func (o *GetQuotaReportDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
