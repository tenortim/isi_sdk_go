// Code generated by go-swagger; DO NOT EDIT.

package quota

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetQuotaQuotaParams creates a new GetQuotaQuotaParams object
// with the default values initialized.
func NewGetQuotaQuotaParams() *GetQuotaQuotaParams {
	var ()
	return &GetQuotaQuotaParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetQuotaQuotaParamsWithTimeout creates a new GetQuotaQuotaParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetQuotaQuotaParamsWithTimeout(timeout time.Duration) *GetQuotaQuotaParams {
	var ()
	return &GetQuotaQuotaParams{

		timeout: timeout,
	}
}

// NewGetQuotaQuotaParamsWithContext creates a new GetQuotaQuotaParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetQuotaQuotaParamsWithContext(ctx context.Context) *GetQuotaQuotaParams {
	var ()
	return &GetQuotaQuotaParams{

		Context: ctx,
	}
}

// NewGetQuotaQuotaParamsWithHTTPClient creates a new GetQuotaQuotaParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetQuotaQuotaParamsWithHTTPClient(client *http.Client) *GetQuotaQuotaParams {
	var ()
	return &GetQuotaQuotaParams{
		HTTPClient: client,
	}
}

/*GetQuotaQuotaParams contains all the parameters to send to the API endpoint
for the get quota quota operation typically these are written to a http.Request
*/
type GetQuotaQuotaParams struct {

	/*QuotaQuotaID
	  Retrieve quota information.

	*/
	QuotaQuotaID string
	/*ResolveNames
	  If true, resolve group and user names in personas.

	*/
	ResolveNames *bool
	/*Zone
	  Optional named zone to use for user and group resolution.

	*/
	Zone *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get quota quota params
func (o *GetQuotaQuotaParams) WithTimeout(timeout time.Duration) *GetQuotaQuotaParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get quota quota params
func (o *GetQuotaQuotaParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get quota quota params
func (o *GetQuotaQuotaParams) WithContext(ctx context.Context) *GetQuotaQuotaParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get quota quota params
func (o *GetQuotaQuotaParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get quota quota params
func (o *GetQuotaQuotaParams) WithHTTPClient(client *http.Client) *GetQuotaQuotaParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get quota quota params
func (o *GetQuotaQuotaParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithQuotaQuotaID adds the quotaQuotaID to the get quota quota params
func (o *GetQuotaQuotaParams) WithQuotaQuotaID(quotaQuotaID string) *GetQuotaQuotaParams {
	o.SetQuotaQuotaID(quotaQuotaID)
	return o
}

// SetQuotaQuotaID adds the quotaQuotaId to the get quota quota params
func (o *GetQuotaQuotaParams) SetQuotaQuotaID(quotaQuotaID string) {
	o.QuotaQuotaID = quotaQuotaID
}

// WithResolveNames adds the resolveNames to the get quota quota params
func (o *GetQuotaQuotaParams) WithResolveNames(resolveNames *bool) *GetQuotaQuotaParams {
	o.SetResolveNames(resolveNames)
	return o
}

// SetResolveNames adds the resolveNames to the get quota quota params
func (o *GetQuotaQuotaParams) SetResolveNames(resolveNames *bool) {
	o.ResolveNames = resolveNames
}

// WithZone adds the zone to the get quota quota params
func (o *GetQuotaQuotaParams) WithZone(zone *string) *GetQuotaQuotaParams {
	o.SetZone(zone)
	return o
}

// SetZone adds the zone to the get quota quota params
func (o *GetQuotaQuotaParams) SetZone(zone *string) {
	o.Zone = zone
}

// WriteToRequest writes these params to a swagger request
func (o *GetQuotaQuotaParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param QuotaQuotaId
	if err := r.SetPathParam("QuotaQuotaId", o.QuotaQuotaID); err != nil {
		return err
	}

	if o.ResolveNames != nil {

		// query param resolve_names
		var qrResolveNames bool
		if o.ResolveNames != nil {
			qrResolveNames = *o.ResolveNames
		}
		qResolveNames := swag.FormatBool(qrResolveNames)
		if qResolveNames != "" {
			if err := r.SetQueryParam("resolve_names", qResolveNames); err != nil {
				return err
			}
		}

	}

	if o.Zone != nil {

		// query param zone
		var qrZone string
		if o.Zone != nil {
			qrZone = *o.Zone
		}
		qZone := qrZone
		if qZone != "" {
			if err := r.SetQueryParam("zone", qZone); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
