// Code generated by go-swagger; DO NOT EDIT.

package quota

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteQuotaQuotaParams creates a new DeleteQuotaQuotaParams object
// with the default values initialized.
func NewDeleteQuotaQuotaParams() *DeleteQuotaQuotaParams {
	var ()
	return &DeleteQuotaQuotaParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteQuotaQuotaParamsWithTimeout creates a new DeleteQuotaQuotaParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteQuotaQuotaParamsWithTimeout(timeout time.Duration) *DeleteQuotaQuotaParams {
	var ()
	return &DeleteQuotaQuotaParams{

		timeout: timeout,
	}
}

// NewDeleteQuotaQuotaParamsWithContext creates a new DeleteQuotaQuotaParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteQuotaQuotaParamsWithContext(ctx context.Context) *DeleteQuotaQuotaParams {
	var ()
	return &DeleteQuotaQuotaParams{

		Context: ctx,
	}
}

// NewDeleteQuotaQuotaParamsWithHTTPClient creates a new DeleteQuotaQuotaParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteQuotaQuotaParamsWithHTTPClient(client *http.Client) *DeleteQuotaQuotaParams {
	var ()
	return &DeleteQuotaQuotaParams{
		HTTPClient: client,
	}
}

/*DeleteQuotaQuotaParams contains all the parameters to send to the API endpoint
for the delete quota quota operation typically these are written to a http.Request
*/
type DeleteQuotaQuotaParams struct {

	/*QuotaQuotaID
	  Delete the quota.

	*/
	QuotaQuotaID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete quota quota params
func (o *DeleteQuotaQuotaParams) WithTimeout(timeout time.Duration) *DeleteQuotaQuotaParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete quota quota params
func (o *DeleteQuotaQuotaParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete quota quota params
func (o *DeleteQuotaQuotaParams) WithContext(ctx context.Context) *DeleteQuotaQuotaParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete quota quota params
func (o *DeleteQuotaQuotaParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete quota quota params
func (o *DeleteQuotaQuotaParams) WithHTTPClient(client *http.Client) *DeleteQuotaQuotaParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete quota quota params
func (o *DeleteQuotaQuotaParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithQuotaQuotaID adds the quotaQuotaID to the delete quota quota params
func (o *DeleteQuotaQuotaParams) WithQuotaQuotaID(quotaQuotaID string) *DeleteQuotaQuotaParams {
	o.SetQuotaQuotaID(quotaQuotaID)
	return o
}

// SetQuotaQuotaID adds the quotaQuotaId to the delete quota quota params
func (o *DeleteQuotaQuotaParams) SetQuotaQuotaID(quotaQuotaID string) {
	o.QuotaQuotaID = quotaQuotaID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteQuotaQuotaParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param QuotaQuotaId
	if err := r.SetPathParam("QuotaQuotaId", o.QuotaQuotaID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
