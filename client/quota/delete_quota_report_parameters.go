// Code generated by go-swagger; DO NOT EDIT.

package quota

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteQuotaReportParams creates a new DeleteQuotaReportParams object
// with the default values initialized.
func NewDeleteQuotaReportParams() *DeleteQuotaReportParams {
	var ()
	return &DeleteQuotaReportParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteQuotaReportParamsWithTimeout creates a new DeleteQuotaReportParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteQuotaReportParamsWithTimeout(timeout time.Duration) *DeleteQuotaReportParams {
	var ()
	return &DeleteQuotaReportParams{

		timeout: timeout,
	}
}

// NewDeleteQuotaReportParamsWithContext creates a new DeleteQuotaReportParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteQuotaReportParamsWithContext(ctx context.Context) *DeleteQuotaReportParams {
	var ()
	return &DeleteQuotaReportParams{

		Context: ctx,
	}
}

// NewDeleteQuotaReportParamsWithHTTPClient creates a new DeleteQuotaReportParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteQuotaReportParamsWithHTTPClient(client *http.Client) *DeleteQuotaReportParams {
	var ()
	return &DeleteQuotaReportParams{
		HTTPClient: client,
	}
}

/*DeleteQuotaReportParams contains all the parameters to send to the API endpoint
for the delete quota report operation typically these are written to a http.Request
*/
type DeleteQuotaReportParams struct {

	/*QuotaReportID
	  Delete the report.

	*/
	QuotaReportID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete quota report params
func (o *DeleteQuotaReportParams) WithTimeout(timeout time.Duration) *DeleteQuotaReportParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete quota report params
func (o *DeleteQuotaReportParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete quota report params
func (o *DeleteQuotaReportParams) WithContext(ctx context.Context) *DeleteQuotaReportParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete quota report params
func (o *DeleteQuotaReportParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete quota report params
func (o *DeleteQuotaReportParams) WithHTTPClient(client *http.Client) *DeleteQuotaReportParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete quota report params
func (o *DeleteQuotaReportParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithQuotaReportID adds the quotaReportID to the delete quota report params
func (o *DeleteQuotaReportParams) WithQuotaReportID(quotaReportID string) *DeleteQuotaReportParams {
	o.SetQuotaReportID(quotaReportID)
	return o
}

// SetQuotaReportID adds the quotaReportId to the delete quota report params
func (o *DeleteQuotaReportParams) SetQuotaReportID(quotaReportID string) {
	o.QuotaReportID = quotaReportID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteQuotaReportParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param QuotaReportId
	if err := r.SetPathParam("QuotaReportId", o.QuotaReportID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
