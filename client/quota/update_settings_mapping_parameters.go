// Code generated by go-swagger; DO NOT EDIT.

package quota

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// NewUpdateSettingsMappingParams creates a new UpdateSettingsMappingParams object
// with the default values initialized.
func NewUpdateSettingsMappingParams() *UpdateSettingsMappingParams {
	var ()
	return &UpdateSettingsMappingParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateSettingsMappingParamsWithTimeout creates a new UpdateSettingsMappingParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateSettingsMappingParamsWithTimeout(timeout time.Duration) *UpdateSettingsMappingParams {
	var ()
	return &UpdateSettingsMappingParams{

		timeout: timeout,
	}
}

// NewUpdateSettingsMappingParamsWithContext creates a new UpdateSettingsMappingParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateSettingsMappingParamsWithContext(ctx context.Context) *UpdateSettingsMappingParams {
	var ()
	return &UpdateSettingsMappingParams{

		Context: ctx,
	}
}

// NewUpdateSettingsMappingParamsWithHTTPClient creates a new UpdateSettingsMappingParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateSettingsMappingParamsWithHTTPClient(client *http.Client) *UpdateSettingsMappingParams {
	var ()
	return &UpdateSettingsMappingParams{
		HTTPClient: client,
	}
}

/*UpdateSettingsMappingParams contains all the parameters to send to the API endpoint
for the update settings mapping operation typically these are written to a http.Request
*/
type UpdateSettingsMappingParams struct {

	/*SettingsMapping*/
	SettingsMapping *models.SettingsMappingExtended
	/*SettingsMappingID
	  Modify the mapping.

	*/
	SettingsMappingID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update settings mapping params
func (o *UpdateSettingsMappingParams) WithTimeout(timeout time.Duration) *UpdateSettingsMappingParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update settings mapping params
func (o *UpdateSettingsMappingParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update settings mapping params
func (o *UpdateSettingsMappingParams) WithContext(ctx context.Context) *UpdateSettingsMappingParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update settings mapping params
func (o *UpdateSettingsMappingParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update settings mapping params
func (o *UpdateSettingsMappingParams) WithHTTPClient(client *http.Client) *UpdateSettingsMappingParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update settings mapping params
func (o *UpdateSettingsMappingParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSettingsMapping adds the settingsMapping to the update settings mapping params
func (o *UpdateSettingsMappingParams) WithSettingsMapping(settingsMapping *models.SettingsMappingExtended) *UpdateSettingsMappingParams {
	o.SetSettingsMapping(settingsMapping)
	return o
}

// SetSettingsMapping adds the settingsMapping to the update settings mapping params
func (o *UpdateSettingsMappingParams) SetSettingsMapping(settingsMapping *models.SettingsMappingExtended) {
	o.SettingsMapping = settingsMapping
}

// WithSettingsMappingID adds the settingsMappingID to the update settings mapping params
func (o *UpdateSettingsMappingParams) WithSettingsMappingID(settingsMappingID string) *UpdateSettingsMappingParams {
	o.SetSettingsMappingID(settingsMappingID)
	return o
}

// SetSettingsMappingID adds the settingsMappingId to the update settings mapping params
func (o *UpdateSettingsMappingParams) SetSettingsMappingID(settingsMappingID string) {
	o.SettingsMappingID = settingsMappingID
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateSettingsMappingParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.SettingsMapping != nil {
		if err := r.SetBodyParam(o.SettingsMapping); err != nil {
			return err
		}
	}

	// path param SettingsMappingId
	if err := r.SetPathParam("SettingsMappingId", o.SettingsMappingID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
