// Code generated by go-swagger; DO NOT EDIT.

package cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// GetClusterEmailReader is a Reader for the GetClusterEmail structure.
type GetClusterEmailReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClusterEmailReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetClusterEmailOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetClusterEmailDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetClusterEmailOK creates a GetClusterEmailOK with default headers values
func NewGetClusterEmailOK() *GetClusterEmailOK {
	return &GetClusterEmailOK{}
}

/*GetClusterEmailOK handles this case with default header values.

Get the cluster email notification settings.
*/
type GetClusterEmailOK struct {
	Payload *models.ClusterEmail
}

func (o *GetClusterEmailOK) Error() string {
	return fmt.Sprintf("[GET /platform/1/cluster/email][%d] getClusterEmailOK  %+v", 200, o.Payload)
}

func (o *GetClusterEmailOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ClusterEmail)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterEmailDefault creates a GetClusterEmailDefault with default headers values
func NewGetClusterEmailDefault(code int) *GetClusterEmailDefault {
	return &GetClusterEmailDefault{
		_statusCode: code,
	}
}

/*GetClusterEmailDefault handles this case with default header values.

Unexpected error
*/
type GetClusterEmailDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get cluster email default response
func (o *GetClusterEmailDefault) Code() int {
	return o._statusCode
}

func (o *GetClusterEmailDefault) Error() string {
	return fmt.Sprintf("[GET /platform/1/cluster/email][%d] getClusterEmail default  %+v", o._statusCode, o.Payload)
}

func (o *GetClusterEmailDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
