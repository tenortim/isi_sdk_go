// Code generated by go-swagger; DO NOT EDIT.

package cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// GetClusterNodesAvailableReader is a Reader for the GetClusterNodesAvailable structure.
type GetClusterNodesAvailableReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClusterNodesAvailableReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetClusterNodesAvailableOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetClusterNodesAvailableDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetClusterNodesAvailableOK creates a GetClusterNodesAvailableOK with default headers values
func NewGetClusterNodesAvailableOK() *GetClusterNodesAvailableOK {
	return &GetClusterNodesAvailableOK{}
}

/*GetClusterNodesAvailableOK handles this case with default header values.

List all nodes that are available to add to this cluster.
*/
type GetClusterNodesAvailableOK struct {
	Payload *models.ClusterNodesAvailable
}

func (o *GetClusterNodesAvailableOK) Error() string {
	return fmt.Sprintf("[GET /platform/3/cluster/nodes-available][%d] getClusterNodesAvailableOK  %+v", 200, o.Payload)
}

func (o *GetClusterNodesAvailableOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ClusterNodesAvailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterNodesAvailableDefault creates a GetClusterNodesAvailableDefault with default headers values
func NewGetClusterNodesAvailableDefault(code int) *GetClusterNodesAvailableDefault {
	return &GetClusterNodesAvailableDefault{
		_statusCode: code,
	}
}

/*GetClusterNodesAvailableDefault handles this case with default header values.

Unexpected error
*/
type GetClusterNodesAvailableDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get cluster nodes available default response
func (o *GetClusterNodesAvailableDefault) Code() int {
	return o._statusCode
}

func (o *GetClusterNodesAvailableDefault) Error() string {
	return fmt.Sprintf("[GET /platform/3/cluster/nodes-available][%d] getClusterNodesAvailable default  %+v", o._statusCode, o.Payload)
}

func (o *GetClusterNodesAvailableDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
