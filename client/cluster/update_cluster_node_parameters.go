// Code generated by go-swagger; DO NOT EDIT.

package cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// NewUpdateClusterNodeParams creates a new UpdateClusterNodeParams object
// with the default values initialized.
func NewUpdateClusterNodeParams() *UpdateClusterNodeParams {
	var ()
	return &UpdateClusterNodeParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateClusterNodeParamsWithTimeout creates a new UpdateClusterNodeParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateClusterNodeParamsWithTimeout(timeout time.Duration) *UpdateClusterNodeParams {
	var ()
	return &UpdateClusterNodeParams{

		timeout: timeout,
	}
}

// NewUpdateClusterNodeParamsWithContext creates a new UpdateClusterNodeParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateClusterNodeParamsWithContext(ctx context.Context) *UpdateClusterNodeParams {
	var ()
	return &UpdateClusterNodeParams{

		Context: ctx,
	}
}

// NewUpdateClusterNodeParamsWithHTTPClient creates a new UpdateClusterNodeParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateClusterNodeParamsWithHTTPClient(client *http.Client) *UpdateClusterNodeParams {
	var ()
	return &UpdateClusterNodeParams{
		HTTPClient: client,
	}
}

/*UpdateClusterNodeParams contains all the parameters to send to the API endpoint
for the update cluster node operation typically these are written to a http.Request
*/
type UpdateClusterNodeParams struct {

	/*ClusterNode*/
	ClusterNode *models.ClusterNode
	/*ClusterNodeID
	  Modify one or more node settings.

	*/
	ClusterNodeID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update cluster node params
func (o *UpdateClusterNodeParams) WithTimeout(timeout time.Duration) *UpdateClusterNodeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update cluster node params
func (o *UpdateClusterNodeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update cluster node params
func (o *UpdateClusterNodeParams) WithContext(ctx context.Context) *UpdateClusterNodeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update cluster node params
func (o *UpdateClusterNodeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update cluster node params
func (o *UpdateClusterNodeParams) WithHTTPClient(client *http.Client) *UpdateClusterNodeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update cluster node params
func (o *UpdateClusterNodeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithClusterNode adds the clusterNode to the update cluster node params
func (o *UpdateClusterNodeParams) WithClusterNode(clusterNode *models.ClusterNode) *UpdateClusterNodeParams {
	o.SetClusterNode(clusterNode)
	return o
}

// SetClusterNode adds the clusterNode to the update cluster node params
func (o *UpdateClusterNodeParams) SetClusterNode(clusterNode *models.ClusterNode) {
	o.ClusterNode = clusterNode
}

// WithClusterNodeID adds the clusterNodeID to the update cluster node params
func (o *UpdateClusterNodeParams) WithClusterNodeID(clusterNodeID int64) *UpdateClusterNodeParams {
	o.SetClusterNodeID(clusterNodeID)
	return o
}

// SetClusterNodeID adds the clusterNodeId to the update cluster node params
func (o *UpdateClusterNodeParams) SetClusterNodeID(clusterNodeID int64) {
	o.ClusterNodeID = clusterNodeID
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateClusterNodeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ClusterNode != nil {
		if err := r.SetBodyParam(o.ClusterNode); err != nil {
			return err
		}
	}

	// path param ClusterNodeId
	if err := r.SetPathParam("ClusterNodeId", swag.FormatInt64(o.ClusterNodeID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
