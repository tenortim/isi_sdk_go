// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/tenortim/isi_sdk_go/client/antivirus"
	"github.com/tenortim/isi_sdk_go/client/audit"
	"github.com/tenortim/isi_sdk_go/client/auth"
	"github.com/tenortim/isi_sdk_go/client/auth_groups"
	"github.com/tenortim/isi_sdk_go/client/auth_providers"
	"github.com/tenortim/isi_sdk_go/client/auth_roles"
	"github.com/tenortim/isi_sdk_go/client/auth_users"
	"github.com/tenortim/isi_sdk_go/client/cloud"
	"github.com/tenortim/isi_sdk_go/client/cluster"
	"github.com/tenortim/isi_sdk_go/client/cluster_nodes"
	"github.com/tenortim/isi_sdk_go/client/debug"
	"github.com/tenortim/isi_sdk_go/client/dedupe"
	"github.com/tenortim/isi_sdk_go/client/event"
	"github.com/tenortim/isi_sdk_go/client/file_filter"
	"github.com/tenortim/isi_sdk_go/client/filepool"
	"github.com/tenortim/isi_sdk_go/client/filesystem"
	"github.com/tenortim/isi_sdk_go/client/fsa"
	"github.com/tenortim/isi_sdk_go/client/fsa_results"
	"github.com/tenortim/isi_sdk_go/client/hardening"
	"github.com/tenortim/isi_sdk_go/client/hardware"
	"github.com/tenortim/isi_sdk_go/client/job"
	"github.com/tenortim/isi_sdk_go/client/license"
	"github.com/tenortim/isi_sdk_go/client/local"
	"github.com/tenortim/isi_sdk_go/client/namespace"
	"github.com/tenortim/isi_sdk_go/client/network"
	"github.com/tenortim/isi_sdk_go/client/network_groupnets"
	"github.com/tenortim/isi_sdk_go/client/network_groupnets_subnets"
	"github.com/tenortim/isi_sdk_go/client/protocols"
	"github.com/tenortim/isi_sdk_go/client/protocols_hdfs"
	"github.com/tenortim/isi_sdk_go/client/quota"
	"github.com/tenortim/isi_sdk_go/client/quota_quotas"
	"github.com/tenortim/isi_sdk_go/client/quota_reports"
	"github.com/tenortim/isi_sdk_go/client/remotesupport"
	"github.com/tenortim/isi_sdk_go/client/snapshot"
	"github.com/tenortim/isi_sdk_go/client/snapshot_changelists"
	"github.com/tenortim/isi_sdk_go/client/snapshot_snapshots"
	"github.com/tenortim/isi_sdk_go/client/statistics"
	"github.com/tenortim/isi_sdk_go/client/storagepool"
	"github.com/tenortim/isi_sdk_go/client/sync"
	"github.com/tenortim/isi_sdk_go/client/sync_policies"
	"github.com/tenortim/isi_sdk_go/client/sync_reports"
	"github.com/tenortim/isi_sdk_go/client/sync_target"
	"github.com/tenortim/isi_sdk_go/client/upgrade"
	"github.com/tenortim/isi_sdk_go/client/upgrade_cluster"
	"github.com/tenortim/isi_sdk_go/client/worm"
	"github.com/tenortim/isi_sdk_go/client/zones"
	"github.com/tenortim/isi_sdk_go/client/zones_summary"
)

// Default isi sdk HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "YOUR_CLUSTER_HOSTNAME_OR_NODE_IP:8080"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"https"}

// NewHTTPClient creates a new isi sdk HTTP client.
func NewHTTPClient(formats strfmt.Registry) *IsiSdk {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new isi sdk HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *IsiSdk {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new isi sdk client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *IsiSdk {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(IsiSdk)
	cli.Transport = transport

	cli.Antivirus = antivirus.New(transport, formats)

	cli.Audit = audit.New(transport, formats)

	cli.Auth = auth.New(transport, formats)

	cli.AuthGroups = auth_groups.New(transport, formats)

	cli.AuthProviders = auth_providers.New(transport, formats)

	cli.AuthRoles = auth_roles.New(transport, formats)

	cli.AuthUsers = auth_users.New(transport, formats)

	cli.Cloud = cloud.New(transport, formats)

	cli.Cluster = cluster.New(transport, formats)

	cli.ClusterNodes = cluster_nodes.New(transport, formats)

	cli.Debug = debug.New(transport, formats)

	cli.Dedupe = dedupe.New(transport, formats)

	cli.Event = event.New(transport, formats)

	cli.FileFilter = file_filter.New(transport, formats)

	cli.Filepool = filepool.New(transport, formats)

	cli.Filesystem = filesystem.New(transport, formats)

	cli.Fsa = fsa.New(transport, formats)

	cli.FsaResults = fsa_results.New(transport, formats)

	cli.Hardening = hardening.New(transport, formats)

	cli.Hardware = hardware.New(transport, formats)

	cli.Job = job.New(transport, formats)

	cli.License = license.New(transport, formats)

	cli.Local = local.New(transport, formats)

	cli.Namespace = namespace.New(transport, formats)

	cli.Network = network.New(transport, formats)

	cli.NetworkGroupnets = network_groupnets.New(transport, formats)

	cli.NetworkGroupnetsSubnets = network_groupnets_subnets.New(transport, formats)

	cli.Protocols = protocols.New(transport, formats)

	cli.ProtocolsHdfs = protocols_hdfs.New(transport, formats)

	cli.Quota = quota.New(transport, formats)

	cli.QuotaQuotas = quota_quotas.New(transport, formats)

	cli.QuotaReports = quota_reports.New(transport, formats)

	cli.Remotesupport = remotesupport.New(transport, formats)

	cli.Snapshot = snapshot.New(transport, formats)

	cli.SnapshotChangelists = snapshot_changelists.New(transport, formats)

	cli.SnapshotSnapshots = snapshot_snapshots.New(transport, formats)

	cli.Statistics = statistics.New(transport, formats)

	cli.Storagepool = storagepool.New(transport, formats)

	cli.Sync = sync.New(transport, formats)

	cli.SyncPolicies = sync_policies.New(transport, formats)

	cli.SyncReports = sync_reports.New(transport, formats)

	cli.SyncTarget = sync_target.New(transport, formats)

	cli.Upgrade = upgrade.New(transport, formats)

	cli.UpgradeCluster = upgrade_cluster.New(transport, formats)

	cli.Worm = worm.New(transport, formats)

	cli.Zones = zones.New(transport, formats)

	cli.ZonesSummary = zones_summary.New(transport, formats)

	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// IsiSdk is a client for isi sdk
type IsiSdk struct {
	Antivirus *antivirus.Client

	Audit *audit.Client

	Auth *auth.Client

	AuthGroups *auth_groups.Client

	AuthProviders *auth_providers.Client

	AuthRoles *auth_roles.Client

	AuthUsers *auth_users.Client

	Cloud *cloud.Client

	Cluster *cluster.Client

	ClusterNodes *cluster_nodes.Client

	Debug *debug.Client

	Dedupe *dedupe.Client

	Event *event.Client

	FileFilter *file_filter.Client

	Filepool *filepool.Client

	Filesystem *filesystem.Client

	Fsa *fsa.Client

	FsaResults *fsa_results.Client

	Hardening *hardening.Client

	Hardware *hardware.Client

	Job *job.Client

	License *license.Client

	Local *local.Client

	Namespace *namespace.Client

	Network *network.Client

	NetworkGroupnets *network_groupnets.Client

	NetworkGroupnetsSubnets *network_groupnets_subnets.Client

	Protocols *protocols.Client

	ProtocolsHdfs *protocols_hdfs.Client

	Quota *quota.Client

	QuotaQuotas *quota_quotas.Client

	QuotaReports *quota_reports.Client

	Remotesupport *remotesupport.Client

	Snapshot *snapshot.Client

	SnapshotChangelists *snapshot_changelists.Client

	SnapshotSnapshots *snapshot_snapshots.Client

	Statistics *statistics.Client

	Storagepool *storagepool.Client

	Sync *sync.Client

	SyncPolicies *sync_policies.Client

	SyncReports *sync_reports.Client

	SyncTarget *sync_target.Client

	Upgrade *upgrade.Client

	UpgradeCluster *upgrade_cluster.Client

	Worm *worm.Client

	Zones *zones.Client

	ZonesSummary *zones_summary.Client

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *IsiSdk) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport

	c.Antivirus.SetTransport(transport)

	c.Audit.SetTransport(transport)

	c.Auth.SetTransport(transport)

	c.AuthGroups.SetTransport(transport)

	c.AuthProviders.SetTransport(transport)

	c.AuthRoles.SetTransport(transport)

	c.AuthUsers.SetTransport(transport)

	c.Cloud.SetTransport(transport)

	c.Cluster.SetTransport(transport)

	c.ClusterNodes.SetTransport(transport)

	c.Debug.SetTransport(transport)

	c.Dedupe.SetTransport(transport)

	c.Event.SetTransport(transport)

	c.FileFilter.SetTransport(transport)

	c.Filepool.SetTransport(transport)

	c.Filesystem.SetTransport(transport)

	c.Fsa.SetTransport(transport)

	c.FsaResults.SetTransport(transport)

	c.Hardening.SetTransport(transport)

	c.Hardware.SetTransport(transport)

	c.Job.SetTransport(transport)

	c.License.SetTransport(transport)

	c.Local.SetTransport(transport)

	c.Namespace.SetTransport(transport)

	c.Network.SetTransport(transport)

	c.NetworkGroupnets.SetTransport(transport)

	c.NetworkGroupnetsSubnets.SetTransport(transport)

	c.Protocols.SetTransport(transport)

	c.ProtocolsHdfs.SetTransport(transport)

	c.Quota.SetTransport(transport)

	c.QuotaQuotas.SetTransport(transport)

	c.QuotaReports.SetTransport(transport)

	c.Remotesupport.SetTransport(transport)

	c.Snapshot.SetTransport(transport)

	c.SnapshotChangelists.SetTransport(transport)

	c.SnapshotSnapshots.SetTransport(transport)

	c.Statistics.SetTransport(transport)

	c.Storagepool.SetTransport(transport)

	c.Sync.SetTransport(transport)

	c.SyncPolicies.SetTransport(transport)

	c.SyncReports.SetTransport(transport)

	c.SyncTarget.SetTransport(transport)

	c.Upgrade.SetTransport(transport)

	c.UpgradeCluster.SetTransport(transport)

	c.Worm.SetTransport(transport)

	c.Zones.SetTransport(transport)

	c.ZonesSummary.SetTransport(transport)

}
