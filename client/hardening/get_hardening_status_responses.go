// Code generated by go-swagger; DO NOT EDIT.

package hardening

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// GetHardeningStatusReader is a Reader for the GetHardeningStatus structure.
type GetHardeningStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHardeningStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetHardeningStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetHardeningStatusDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetHardeningStatusOK creates a GetHardeningStatusOK with default headers values
func NewGetHardeningStatusOK() *GetHardeningStatusOK {
	return &GetHardeningStatusOK{}
}

/*GetHardeningStatusOK handles this case with default header values.

Get a message indicating whether or not the cluster is hardened. Note that this is different from the /state resource, which returns the state of a specific hardening operation (apply or revert).
*/
type GetHardeningStatusOK struct {
	Payload *models.HardeningStatus
}

func (o *GetHardeningStatusOK) Error() string {
	return fmt.Sprintf("[GET /platform/3/hardening/status][%d] getHardeningStatusOK  %+v", 200, o.Payload)
}

func (o *GetHardeningStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HardeningStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHardeningStatusDefault creates a GetHardeningStatusDefault with default headers values
func NewGetHardeningStatusDefault(code int) *GetHardeningStatusDefault {
	return &GetHardeningStatusDefault{
		_statusCode: code,
	}
}

/*GetHardeningStatusDefault handles this case with default header values.

Unexpected error
*/
type GetHardeningStatusDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get hardening status default response
func (o *GetHardeningStatusDefault) Code() int {
	return o._statusCode
}

func (o *GetHardeningStatusDefault) Error() string {
	return fmt.Sprintf("[GET /platform/3/hardening/status][%d] getHardeningStatus default  %+v", o._statusCode, o.Payload)
}

func (o *GetHardeningStatusDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
