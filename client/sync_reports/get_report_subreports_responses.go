// Code generated by go-swagger; DO NOT EDIT.

package sync_reports

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// GetReportSubreportsReader is a Reader for the GetReportSubreports structure.
type GetReportSubreportsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetReportSubreportsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetReportSubreportsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetReportSubreportsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetReportSubreportsOK creates a GetReportSubreportsOK with default headers values
func NewGetReportSubreportsOK() *GetReportSubreportsOK {
	return &GetReportSubreportsOK{}
}

/*GetReportSubreportsOK handles this case with default header values.

Get a list of SyncIQ subreports for a report.
*/
type GetReportSubreportsOK struct {
	Payload *models.ReportSubreportsExtended
}

func (o *GetReportSubreportsOK) Error() string {
	return fmt.Sprintf("[GET /platform/1/sync/reports/{Rid}/subreports][%d] getReportSubreportsOK  %+v", 200, o.Payload)
}

func (o *GetReportSubreportsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ReportSubreportsExtended)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReportSubreportsDefault creates a GetReportSubreportsDefault with default headers values
func NewGetReportSubreportsDefault(code int) *GetReportSubreportsDefault {
	return &GetReportSubreportsDefault{
		_statusCode: code,
	}
}

/*GetReportSubreportsDefault handles this case with default header values.

Unexpected error
*/
type GetReportSubreportsDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get report subreports default response
func (o *GetReportSubreportsDefault) Code() int {
	return o._statusCode
}

func (o *GetReportSubreportsDefault) Error() string {
	return fmt.Sprintf("[GET /platform/1/sync/reports/{Rid}/subreports][%d] getReportSubreports default  %+v", o._statusCode, o.Payload)
}

func (o *GetReportSubreportsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
