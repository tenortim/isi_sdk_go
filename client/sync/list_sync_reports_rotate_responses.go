// Code generated by go-swagger; DO NOT EDIT.

package sync

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/tenortim/isi_sdk_go/models"
)

// ListSyncReportsRotateReader is a Reader for the ListSyncReportsRotate structure.
type ListSyncReportsRotateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListSyncReportsRotateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListSyncReportsRotateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewListSyncReportsRotateDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListSyncReportsRotateOK creates a ListSyncReportsRotateOK with default headers values
func NewListSyncReportsRotateOK() *ListSyncReportsRotateOK {
	return &ListSyncReportsRotateOK{}
}

/*ListSyncReportsRotateOK handles this case with default header values.

Whether the rotation is still running or not.
*/
type ListSyncReportsRotateOK struct {
	Payload *models.SyncReportsRotate
}

func (o *ListSyncReportsRotateOK) Error() string {
	return fmt.Sprintf("[GET /platform/1/sync/reports-rotate][%d] listSyncReportsRotateOK  %+v", 200, o.Payload)
}

func (o *ListSyncReportsRotateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SyncReportsRotate)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSyncReportsRotateDefault creates a ListSyncReportsRotateDefault with default headers values
func NewListSyncReportsRotateDefault(code int) *ListSyncReportsRotateDefault {
	return &ListSyncReportsRotateDefault{
		_statusCode: code,
	}
}

/*ListSyncReportsRotateDefault handles this case with default header values.

Unexpected error
*/
type ListSyncReportsRotateDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the list sync reports rotate default response
func (o *ListSyncReportsRotateDefault) Code() int {
	return o._statusCode
}

func (o *ListSyncReportsRotateDefault) Error() string {
	return fmt.Sprintf("[GET /platform/1/sync/reports-rotate][%d] listSyncReportsRotate default  %+v", o._statusCode, o.Payload)
}

func (o *ListSyncReportsRotateDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
